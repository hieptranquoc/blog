<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Teracy's Blog]]></title>
  <link href="http://blog.teracy.com/atom.xml" rel="self"/>
  <link href="http://blog.teracy.com/"/>
  <updated>2016-10-26T09:22:40+00:00</updated>
  <id>http://blog.teracy.com/</id>
  <author>
    <name><![CDATA[Teracy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nguyên Tắc Thiết Kế Giao Diện Người Dùng (Phần 1)]]></title>
    <link href="http://blog.teracy.com/2016/10/26/nguyen-tac-thiet-ke-giao-dien-nguoi-dung-phan-1/"/>
    <updated>2016-10-26T10:50:00+00:00</updated>
    <id>http://blog.teracy.com/2016/10/26/nguyen-tac-thiet-ke-giao-dien-nguoi-dung-phan-1</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/10/25/principles.jpg" title="Nguyên tắc thiết kế" ></p>

<p>Thiết kế không đơn giản chỉ là lắp ghép, xếp theo thứ tự hay thậm chí là sửa đổi. Thiết kế chính là hàm chứa giá trị và ý nghĩa, là sự minh hoạ, đơn giản hoá, làm sáng tỏ, chỉnh sửa, tạo giá trị, kịch tính, thuyết phục và thậm chí là lôi cuốn.</p>

<h1>01. Sự rõ ràng là điều quan trọng nhất</h1>

<p>Sự rõ ràng là điều quan trọng đầu tiên và cũng là quan trọng nhất của bất kỳ một giao diện nào. Một giao diện được thiết kế hiệu quả đó là mọi người phải có thể nhận biết được nó là gì, biết được vì sao họ nên sử dụng nó, biết được giao diện giúp họ tương tác với những gì, dự đoán được điều gì sẽ xảy ra khi họ sử dụng nó và sau đó là tương tác với giao diện thành công. Một giao diện có thể có chứa sự bí ẩn hay chưa mang lại sự hài lòng cho người dùng, nhưng sẽ không có chỗ cho sự nhầm lẫn. Tính minh bạch đem đến niềm tin cho người dùng và làm người dùng muốn tiếp tục sử dụng trong tương lai. Trăm màn hình rõ ràng còn hơn một tổ hợp màn hình lộn xộn.</p>

<!-- more -->


<h1>02. Giao diện mang đến sự tương tác</h1>

<p>Giao diện mang đến sự tương tác giữa con người và thế giới của chúng ta. Giao diện có thể giúp làm sáng tỏ, mở rộng và cho phép các mối liên hệ, mang chúng ta lại với nhau, kéo chúng ta xa nhau, quản lý kỳ vọng của chúng ta, và cho chúng ta tiếp cận với các dịch vụ. Hành động thiết kế giao diện không phải là Nghệ Thuật. Bản thân giao diện không phải là những công trình bất hủ. Giao diện có vai trò riêng và hiệu quả của giao diện có thể đo đếm được. Tuy nhiên, giao diện không chỉ là các tiện ích. Các giao diện tốt nhất có thể truyền cảm hứng, phát triển và tăng cường mối quan hệ của chúng ta với thế giới.</p>

<h1>03. Giữ sự tập trung bằng mọi giá</h1>

<p>Chúng ta đang sống trong một thế giới liên tục bị sao nhãng bởi nhiều mối quan tâm khác nhau. Thật khó để đọc trong yên bình mà không có bất cứ thứ gì làm chúng ta mất tập trung, và hướng sự chú ý của ta vào những điều khác. Tập trung là điều quý giá. Đừng thiết kế ứng dụng của bạn có những yếu tố làm xao nhãng người dùng&hellip; hãy nhớ tại sao màn hình tồn tại ở nơi đầu tiên. Nếu có ai đang đọc thì hãy để họ đọc xong đã trước khi phô bày quảng cáo (nếu bạn phải đưa quảng cáo vào). Đề cao sự tập trung không chỉ độc giả của bạn sẽ hạnh phúc hơn, mà kết quả của bạn cũng sẽ sẽ tốt hơn. Khi sử dụng là mục tiêu chính, sự tập trung là điều kiện tiên quyết. Hãy giữ gìn sự tập trung bằng mọi giá.</p>

<h1>04. Giữ sự kiểm soát cho người dùng</h1>

<p>Con người cảm thấy thoải mái nhất khi họ được kiểm soát bản thân và môi trường của họ. Phần mềm thiếu đầu tư làm mất đi sự thoải mái của người dùng bằng cách bắt người dùng chú ý vào các tương tác không có kế hoạch, làm người dùng bị nhầm lẫn và mang đến kết quả bất ngờ. Giữ cho người dùng trong kiểm soát bằng cách thường xuyên hiện lên tình trạng hệ thống, bằng cách mô tả nhân quả (nếu bạn làm điều này thì điều gì sẽ xảy ra) và cho họ hiểu rõ điều gì sẽ xảy ra với mỗi sự thay đổi. Đừng lo lắng về việc diễn tả quá rõ ràng&hellip; rõ ràng gần như là không bao giờ.</p>

<h1>05. Thao tác trực tiếp là tốt nhất</h1>

<p>Giao diện tốt nhất không phải là tất cả khi chúng ta có thể trực tiếp thao tác với các vật thể trong thế giới của chúng ta. Bởi vì điều này không phải luôn luôn khả thi, và các vật thể thì ngày càng chứa đựng thông tin nên chúng ta đã tạo ra các giao diện để có thể tương tác với chúng. Thật dễ dàng để thêm nhiều lớp hơn mức cần thiết vào một giao diện như tạo ra các nút nhấn, chrome, các đồ họa, các tùy chọn, sự ưu tiên, các cửa sổ, các file đính kèm, và mã lệnh khác, để chúng ta kết thúc thực hiện thao tác với các yếu tố của giao diện người dùng thay vì những gì quan trọng. Thay vào đó, cố gắng cho mục tiêu ban đầu là sự thao tác trực tiếp&hellip; thiết kế một giao diện với một dấu chân nhỏ nhất có thể, ghi nhận cử chỉ, điệu bộ của con người nhiều nhất có thể. Theo lý tưởng, giao diện quá nhẹ đến mức người dùng có cảm giác thao tác trực tiếp với vật thể trong sự tập trung của họ.</p>

<h1>06. Một hành động chính cho mỗi màn hình</h1>

<p>Mỗi màn hình mà chúng ta thiết kế nên hỗ trợ cho một hành động duy nhất có giá trị thực sự cho người sử dụng nó. Điều này làm cho màn hình dễ tìm hiểu hơn, dễ sử dụng hơn, và dễ dàng hơn khi thêm vào hoặc phát triển khi cần thiết. Màn hình hỗ trợ hai hay nhiều hành động chính thì sẽ nhanh chóng gây
ra nhầm lẫn. Giống như một bài viết thì nên có một luận điểm rõ ràng và duy nhất, mỗi màn hình chúng ta thiết kế nên hỗ trợ cho một hành động rõ ràng và duy nhất đó là điều đúng đắn.</p>

<h1>07. Đặt những hành động phụ ở vị trí thứ yếu</h1>

<p>Những màn hình với một hành động chính duy nhất có thể có nhiều hành động phụ, nhưng chúng cần phải được giữ ở vị trí thứ yếu! Lý do bài viết của bạn tồn tại không phải là để mọi người có thể chia sẻ nó trên Twitter&hellip; nó tồn tại là để cho mọi người đọc và hiểu nó. Giữ những hành động phụ bằng cách làm cho chúng ít được nhìn thấy hơn hoặc hiển thị sau khi đã đạt được hành động chính.</p>

<h1>08. Đưa ra bước tiếp theo tự nhiên</h1>

<p>Có quá ít tương tác thì dễ dẫn đến kết thúc, vì vậy cần thiết kế bước tiếp theo cho mỗi tương tác của người dùng với giao diện của bạn một cách cẩn thận. Dự tính trước sự tương tác tiếp theo sẽ nên là gì và thiết kế để hỗ trợ nó. Giống như chúng ta mong muốn trong cuộc trò chuyện của con người với nhau, gợi mở cho sự tương tác tiếp sau đó. Đừng để một người bị treo, bị đơ vì họ đã làm những gì bạn muốn họ làm&hellip; đưa ra cho họ bước tiếp theo tự nhiên để giúp họ tiếp tục đạt được những mục tiêu tiếp theo của mình.</p>

<h1>09. Vẻ bề ngoài theo sau hành vi </h1>

<p>Con người thoải mái nhất với những điều mà hành xử theo cách chúng ta mong đợi. Những người khác, những con vật, đồ vật, phần mềm. Khi một ai đó hoặc một cái gì đó hành xử một cách nhất quán với sự mong đợi của chúng ta, chúng ta cảm thấy như chúng ta có một mối quan hệ tốt với họ. Để làm được điều này thì các thành phần được thiết kế nên trông giống như cách chúng vận hành. Hình thức theo sau chức năng. Trong thực tế điều này có nghĩa là mọi người có thể dự đoán một yếu tố giao diện sẽ vận hành như thế nào chỉ bằng cách nhìn nó. Nếu nó trông giống như một cái nút thì nó phải hoạt động như một cái nút. Đừng làm cho những điều cơ bản của sự tương tác trở nên ngộ nghĩnh&hellip; Hãy giữ sự sáng tạo của bạn cho những mối quan tâm bậc cao hơn.</p>

<p>(CÒN TIẾP)</p>

<p>Bài dịch từ <a href="http://bokardo.com/principles-of-user-interface-design/">Principles of User Interface Design</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cách tiếp cận tinh gọn để thẩm định sản phẩm (Phần 2)]]></title>
    <link href="http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-2/"/>
    <updated>2016-10-04T10:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-2</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-thi-truong.jpg" title="Thẩm định thị trường" ></p>

<p>Đây là phần tiếp theo của <a href="http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-1/">Phần 1</a>.</p>

<h1>Thẩm Định Thị Trường</h1>

<p>Một khi bạn đã nói chuyện với người sử dụng và thẩm định được vấn đề tồn tại, bạn cần phải chắc chắn thị trường đủ lớn để thực hiện ý tưởng của mình. Tìm hiểu người sử dụng sản phẩm của bạn sẽ đến từ đâu, và bao nhiêu doanh thu tiềm năng có trong các cơ hội thị trường?</p>

<p>Bằng cách thu thập càng nhiều thông tin càng tốt về thị trường tiềm năng, bạn sẽ có thể dự toán khoa học về quy mô của đối tượng khách hàng mục tiêu và số lượng khách hàng bạn có thể có được. Bằng cách thu thập này cũng sẽ giúp bạn tìm ra một cấu trúc giá cả tương đối cho các sản phẩm, điều này sẽ có giá trị khi bạn bắt đầu thực hiện kế hoạch tài chính khác.</p>

<!-- more -->


<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-thi-truong.jpg" title="Thẩm định thị trường" ></p>

<h2>THỊ TRƯỜNG CẦN PHẢI LỚN NHƯ THẾ NÀO?</h2>

<p>Nếu như bạn chỉ cần sản phẩm có doanh thu chỉ vài nghìn đô một tháng thì thị trưởng nhỏ cũng có thể đáp ứng được. Nhưng nếu bạn có tham vọng lớn và muốn doanh thu từ sản phẩm hàng tỷ đô la và trở thành nhà khởi nghiệp lớn mạnh tiếp theo, thì bạn sẽ cần phải đảm bảo tồn tại một thị trường lớn.</p>

<h2>&ldquo;NHƯNG TÔI SẼ TẠO RA THỊ TRƯỜNG CỦA RIÊNG TÔI!&rdquo; </h2>

<p>Điều đó là thật, đôi khi một sản phẩm thật sự sáng tạo sẽ tạo ra một thị trường hoàn toàn mới. Trước khi Whole Foods tồn tại, thị trường thực phẩm hữu cơ nhỏ hơn rất nhiều. Uber đã tạo ra một dịch vụ vận chuyển hoàn toàn mới theo yêu cầu bằng cách kết nối công nghệ và những người có ô tô.
Nếu thị trường có thể tạo ra, thì hãy thật cẩn thận về giả định rằng ý tưởng của riêng bạn sẽ có được một số phận tương tự. Nhìn sâu để hiểu và dự đoán thị trường. Tóm lại, để sản phẩm của bạn thành công, cuối cùng bạn sẽ phải tìm một thị trường cho sản phẩm. Hãy tiến hành một cách thận trọng!</p>

<p>Dưới đây là một vài công cụ bạn có thể sử dụng để thẩm định thị trường cho sản phẩm của bạn:</p>

<ul>
<li><p><a href="https://www.google.com/trends/">Google Trends</a> cho phép bạn so sánh số lượng tương đối các thuật ngữ tìm kiếm. Công cụ  này cho bạn biết nhu cầu đối với từng giai đoạn đã thay đổi trong 12 tháng qua.</p></li>
<li><p>Google AdWords&#8217; <a href="https://adwords.google.com/KeywordPlanner">Keyword Planner</a> tiết lộ lượt tìm kiếm trung bình hàng tháng cho một từ khóa nhất định. Công cụ này cũng cung cấp cho bạn một ước tính đối với đối thủ cạnh tranh và giá thầu đề nghị. Sử dụng dữ liệu này, bạn có thể ước tính được bạn sẽ kéo được bao nhiêu traffic đến trang web của bạn bằng cách sử dụng quảng cáo trả tiền của Google Adwords hoặc thông qua những kết quả hiện thị ngay trên đầu của công cụ tìm kiếm.</p></li>
</ul>


<p> <strong>Nghiên cứu kĩ đối thủ cạnh tranh</strong> cho phép bạn hiểu đối thủ cạnh tranh trong tương lai của bạn cũng đang cố gắng để giải quyết một vấn đề tương tự. Nếu bạn đang tập trung vào một thị trường nhỏ, chỉ việc tìm kiếm một đối thủ cạnh tranh là đủ. Nhưng nếu bạn đang tập trung vào một thị trường lớn hơn, bạn cần tìm kiếm thêm ít nhất ba đối thủ. Bên cạnh đó tìm kiếm đối thủ cạnh tranh trực tiếp, tìm kiếm những đối thủ cung cấp các sản phẩm và giải pháp tương tự. Sau đó, tìm hiểu càng nhiều càng tốt về đối thủ. Nghiên cứu hồ sơ của đối thủ, đọc blog và tìm kiếm thông tin của đối thủ trên các phương tiện truyền thông. Tìm hiểu về quy mô của đối thủ, phương pháp định giá, khả năng tài chính và tính năng sản phẩm.</p>

<ul>
<li><a href="https://moz.com/">Moz</a> có thể chạy kiểm tra nội dung trên các trang web đối thủ cạnh tranh giúp bạn biết đối thủ được xếp hạng như thế nào qua các từ khóa và phần nội dung nào của họ thủ được chia sẻ rộng rãi nhất. Tất cả điều này sẽ là thông tin có giá trị.</li>
</ul>


<h2>&ldquo;NẾU TÔI KHÔNG THỂ TÌM ĐƯỢC ĐỐI THỦ CẠNH TRANH NÀO?&rdquo;</h2>

<p>Nếu bạn không thể tìm thấy bất kỳ đối thủ cạnh tranh nào, thì rất có thể bạn đã hoặc là bị bỏ sót điều gì đó trong nghiên cứu của bạn hoặc bạn đang nghiên cứu trên một vấn đề mà không thực sự tồn tại. Tuy nhiên, có thể có ngoại lệ nếu bạn đang bắt đầu một doanh nghiệp rất nhỏ, doanh nghiệp của bạn có cơ hội không có đối thủ nào.</p>

<p>Một lĩnh vực khác cần xem xét khi tiến hành phân tích đối thủ cạnh tranh là các công ty có thể cố gắng để phát triển một cách nhanh chóng sản phẩm hoặc lĩnh vực dịch vụ mới khi mà tính thị trường của họ phát sinh tính cạnh tranh. Trong khi vấn đề này chưa phải là mối quan tâm cấp bách, thì bạn hãy bỏ tiền ra và nhanh chóng xác định xem ai sẽ là người tiếp theo cung cấp sản phẩm tương tự như của bạn vì vậy bạn mới có thể giành chiến thắng trên thị trường. Điều này sẽ giúp bạn chuẩn bị và đưa ra một kế hoạch để xử lý các tình huống phát sinh.</p>

<p>Khi bạn đã thẩm định được thị trường, bạn sẽ sẵn sàng chuyển sang phần thú vị: thẩm định sản phẩm.</p>

<h2>Thẩm Định Sản Phẩm</h2>

<p>Chỉ có một cách để đảm bảo sản phẩm của bạn giải quyết được vấn đề bạn đang tập trung là: bắt tay vào nghiên cứu và xây dựng một nguyên mẫu.</p>

<p>Nó không quan trọng nếu bạn không có nhiều kinh nghiệm về kỹ thuật, bạn <a href="https://m.hanno.co/the-last-thing-you-need-is-a-programmer-4f082ae16ec1#.spc8srnj8">không cần một kỹ sư xây dựng một nguyên mẫu tuyệt vời</a>. Thay vì chọn các kỹ thuật tạo mẫu đắt tiền và tốn thời gian, hãy giữ cho mọi thứ mạch lạc dễ hiểu.</p>

<p>Một khi bạn đã xây dựng nguyên mẫu, bạn sẽ bắt đầu thử nghiệm với người sử dụng để thu thập thông tin phản hồi và học hỏi từ người dùng càng nhiều càng tốt.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-san-pham.jpg" title="Thẩm định sản phẩm nhanh" ></p>

<h1>1. XÂY DỰNG NGUYÊN MẪU</h1>

<p>Ngay cả khi mục tiêu cuối cùng của bạn là xây dựng một trang web hoặc ứng dụng ưa thích, bạn không thực sự cần phải viết bất kỳ mã nào để xác nhận ý tưởng.</p>

<p>Khi bạn xây dựng mẫu, hãy thật sáng tạo! Xác định chính xác giá trị cốt lõi sản phẩm của bạn, và nghĩ ra cách để kiểm tra xem nó hoạt động theo cách đơn giản nhất có thể.</p>

<p>Giả sử ý tưởng sản phẩm của bạn là một loại thiết bị phần cứng và thiết bị phần mềm mới để giúp người dùng khiếm thị di chuyển trong nhà của họ. Định vị và bộ cảm biến độ gần sẽ xác định vị trí của người dùng, và một vành đai rung sẽ nói cho họ biết hướng đi mà họ cần để di chuyển trong nhà. Xây dựng một phiên bản thực tế của sản phẩm này sẽ rất tốn kém và tốn thời gian.</p>

<p>Hãy nghĩ đơn giản! Bạn có thể lập kế hoạch và chế tạo thử nghiệm ý tưởng trong 30 phút, mà không thực sự cần người dùng khiếm thị để thử nghiệm. Trong một thí nghiệm mẫu, chúng tôi đã thử nghiệm với một mẫu sản phẩm rất đơn giản: Chúng tôi bịt mắt một trong những thành viên trong nhóm của chúng tôi và mô phỏng sản phẩm bằng cách tác động trên eo của anh ta để mô phỏng những rung động của dây đai. Đó là một thiết lập vô cùng đơn giản, cho phép chúng tôi thực hiện các thử nghiệm cơ bản ban đầu của một ý tưởng sản phẩm và nhận được thông tin phản hồi ngay lập tức.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/xay-dung-nguyen-mau.jpg" title="Xây dựng nguyên mẫu" ></p>

<p>Nếu bạn hoàn toàn không quen thuộc với nguyên mẫu, và muốn tìm hiểu thêm trước khi bắt tay vào làm, hãy tham khảo các nguồn này:</p>

<ul>
<li>“<a href="https://www.smashingmagazine.com/2016/05/content-first-prototyping/">Content-First Prototyping</a>,” Andy Fitzgerald</li>
<li>“<a href="https://www.smashingmagazine.com/2014/10/the-skeptics-guide-to-low-fidelity-prototyping/">The Skeptic’s Guide to Low-Fidelity Prototyping</a>,” Laura Busche</li>
<li>“<a href="https://www.smashingmagazine.com/2014/09/prototyping-for-better-products-stronger-teams-and-happier-clients/">Prototyping for Better Products, Stronger Teams and Happier Clients</a>,” Scott Hurff</li>
</ul>


<h2>2.THỬ NGHIỆM NGUYÊN MẪU VỚI NGƯỜI SỬ DỤNG</h2>

<p>Thử nghiệm này có thể khiến bạn e dè, đặc biệt nếu trước đây bạn chưa thực hiện. Phải tìm kiếm người dùng ở đâu và chạy thử nghiệm với người dùng như thế nào buộc bạn phải &ldquo;công khai&rdquo; ý tưởng sản phẩm của bạn. Điều này khó khăn hơn nhiều so với làm việc trên bàn với ý tưởng giả định.
Một khi bạn đã thực hiện thử nghiệm với vài người dùng đầu tiên, bạn sẽ bắt đầu thấy quá trình thử nghiệm hoạt động như thế nào, không chỉ là khởi nguồn của việc hiểu vấn đề sâu sắc mà còn mang lại rất nhiều niềm vui.</p>

<h2>PHƯƠNG PHÁP THỬ NGHIỆM NGƯỜI DÙNG GẦN</h2>

<p>Việc tìm những người xung quanh bạn và để họ thành đối tượng thử nghiệm là một điểm khởi đầu tuyệt vời. Lý tưởng nhất là tìm được người dùng trong đối tượng mục tiêu của bạn &ndash; những người thực sự bị khiếm thị. Tuy nhiên, trong giai đoạn sớm của thử nghiệm, bạn có thể nhận được thông tin phản hồi hữu ích chỉ cần bằng cách thử nghiệm trên những người xung quanh bạn và chạy thử nghiệm đơn giản, như chúng ta đã thử nghiệm với những người khiếm thị.</p>

<p>Một khi bạn tìm hiểu thêm từ những thử nghiệm người dùng gần và có khả năng mô phỏng sản phẩm của bạn, xem xét đến các thông tin phản hồi bạn thu thập, bạn có thể tiếp tục thử nghiệm trên người sử dụng mục tiêu của bạn.</p>

<h2>THỬ NGHIỆM NGƯỜI DỤNG TỪ XA</h2>

<p>Nếu bạn không thể tìm thấy các đối tượng thử nghiệm hoàn hảo từ cộng đồng địa phương của bạn, có rất nhiều cách tuyệt vời để thử nghiệm với người dùng từ xa. Dưới đây là một vài công cụ để giúp bạn chạy thử nghiệm từ xa:</p>

<ul>
<li><a href="http://usertesting.com/">UserTesting</a></li>
</ul>


<p>Thử nghiệm tự động, &ldquo;không kiểm duyệt&rdquo; thay thế cho phỏng vấn người dùng bằng cách ghi lại trải nghiệm của người dùng trên màn hình khi họ sử dụng sản phẩm của bạn.</p>

<ul>
<li><a href="https://usabilityhub.com/">UsabilityHub</a></li>
</ul>


<p>Đây là cách nhanh chóng và tương đối rẻ để có được những hiểu biết và phản ứng từ một số người sử dụng về nguyên mẫu của bạn.</p>

<ul>
<li><a href="http://hellopingpong.com/">PingPong</a></li>
</ul>


<p>Là công cụ để lên lịch trình phỏng vấn bằng Skype với người dùng từ xa.</p>

<p>Mục đích của việc thẩm định sản phẩm cho dù từ xa hay trực tiếp là để đảm bảo rằng sản phẩm của bạn giúp giải quyết đúng vấn đề một cách hiệu quả nhất. Có nhiều khả năng bạn sẽ quản lý để làm điều này một cách hoàn hảo vào khoảng thời gian đầu &ndash; nhưng điều đó hoàn toàn tốt đẹp! Việc lặp đi lặp lại, chỉnh sửa và đào sâu là một phần tự nhiên của quá trình thẩm định sản phẩm và là một trong những lý do tại sao tạo mẫu là một kỹ thuật có giá trị như vậy.</p>

<p>Một khi bạn bắt đầu thu thập thông tin phản hồi tích cực mạnh mẽ từ người dùng mục tiêu bằng cách kiểm tra các mẫu thử nghiệm, đó là thời gian để chuyển sang giai đoạn cuối cùng của quá trình thẩm định tinh gọn.</p>

<p>(CÒN TIẾP)</p>

<p>Dịch từ: <a href="https://www.smashingmagazine.com/2016/07/a-lean-approach-to-product-validation/">A lean apprroach to product validation</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cách tiếp cận tinh gọn để thẩm định sản phẩm (Phần 1)]]></title>
    <link href="http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-1/"/>
    <updated>2016-10-04T10:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-1</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-san-pham-tinh-gon.jpg" title="Thẩm định sản phẩm tinh gọn" ></p>

<p>Một trong những rủi ro lớn nhất khi xây dựng sản phẩm đó là xây dựng những điều sai. Bạn sẽ mất hàng tháng trời (thậm chí hàng năm) để xây dựng sản phẩm đó, chỉ tới khi nhận ra bạn không thể hoàn thành sản phẩm.</p>

<p>Tại <a href="https://hanno.co/">Hanno</a>, chúng tôi thấy điều này xảy ra thường xuyên. Đó là lí do tại sao chúng tôi đã tập hợp thành cuốn sách &ldquo;Thẩm định tinh gọn&rdquo; (Lean Validation Playbook).</p>

<h2>TẠI SAO CHÚNG TA CẦN THẨM ĐỊNH TINH GỌN</h2>

<p>Trong trường hợp này, thẩm định tinh gọn nghĩa là bạn sẽ đi lướt nhanh để xác định bạn sẽ làm sản phẩm gì và làm như thế nào với nguồn lực càng ít càng tốt. Nguồn lực này có thể bao gồm thời gian, tiền bạc và công sức. Phương pháp khởi nghiệp tinh gọn là chủ trương của Eric Reis, người có ảnh hưởng rất lớn đến cách chúng ta làm việc thông qua cuốn sách của ông &ldquo;<a href="https://theleanstartup.com/">Khởi nghiệp tinh gọn</a>&rdquo;.</p>

<p>Trong phần hướng dẫn ngắn này, bạn sẽ học được cách thẩm định sự phù hợp của sản phẩm với thị trường, khảo sát người dùng và sản phẩm dùng thử. Mục đích để đảm bảo ý tưởng sản phẩm đó khả thi, điều này giúp tiết kiệm thời gian và tiền bạc của bạn.</p>

<!-- more -->


<p>Cuối quá trình, bạn sẽ có thể tập trung vào việc xây dựng sản phẩm và tự tin rằng bạn có cơ hội thành công cao hơn!</p>

<p>Bạn đã sẵn sang chưa? Chúng ta bắt đầu nhé.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-san-pham-tinh-gon.jpg" title="Thẩm định sản phẩm tinh gọn" ></p>

<h1>Quy Trình Tiến Hành </h1>

<p>Quy trình thẩm định tinh gọn gồm có 4 bước riêng biệt. Chỉ khi bạn đã thực hiện tất cả 4 bước bạn mới có thể tự tin rằng ý tưởng sản phẩm đáng để phát triển.</p>

<p><strong>1. Thẩm định vấn đề</strong></p>

<p>Vấn đề gặp phải có đáng để xử lí không? Nếu người dùng không nghĩ đây là vần đề chính thì bạn có thể không cần đưa ra giải pháp.</p>

<p><strong>2. Đánh giá thị trường</strong></p>

<p>Một số người dùng có thể đồng ý rằng đây là vấn đề đáng để xử lí. Nhưng liệu có đủ để sản phẩm của bạn có chỗ đứng trên thị trường?</p>

<p><strong>3. Thẩm định sản phẩm</strong></p>

<p>Vấn đề có thể tồn tại nhưng sản phẩm của bạn có thực sự xử lí được vấn đề đó?</p>

<p><strong>4. Thẩm định sự sẵn lòng chi trả</strong></p>

<p>Có thể thị trường có nhu cầu và sản phẩm của bạn rất tuyệt vời. Nhưng liệu mọi người có sẵn sằng trả tiền mua sản phẩm đó không?</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/quy-trinh-tham-dinh-san-pham.jpg" title="Quy trình thẩm định sản phẩm" ></p>

<h2>ĐIỀU GÌ XẢY RA NẾU Ý TƯỞNG CỦA BẠN ĐÁP ỨNG TẤT CẢ BỐN TIÊU CHÍ TRÊN? </h2>

<p>Nếu ý tưởng đáp ứng cả bốn tiêu chí thẩm định thì bạn có thể thoải mái phát triển sản phẩm nếu bạn muốn. Nhưng bạn có thể cân nhắc kỹ hơn thay vì chọn phát triển sản phẩm luôn.</p>

<p>Qua quá trình thẩm định tinh gọn, bạn chắc chắn nhận được rất nhiều thông tin phản hồi từ người sử dụng. Với sự hiểu biết sâu sắc hơn, bạn sẽ nhận ra có cơ hội giải quyết tốt hơn. Trong trường hợp này, bạn sẽ thấy dễ dàng để tập trung vào sản phẩm.</p>

<p>Nếu bạn làm theo cách này, bạn có thể lặp lại quá trình thẩm định tinh gọn với ý tưởng sản phẩm đã cải tiến.</p>

<p>Dù bằng cách nào, bạn có thể tự tin rằng bạn đang có một ý tưởng tốt để phát triển sản phẩm.</p>

<h1>Thẩm Định Vấn Đề</h1>

<p>Cho dù bạn có tự tin về ý tưởng sản phẩm như nào chăng nữa thì điều đầu tiên bạn cần là xác định liệu vấn đề đó có thực sự cần giải quyết. Để làm được điều này, lựa chọn tốt nhất của bạn là nói chuyện trực tiếp với người sử dụng tiềm năng. Trọng tâm ở đây là về việc đánh giá chất lượng các ý tưởng sản phẩm.</p>

<p>Đầu tiên, chúng ta bắt đầu với một số lượng nhỏ người dùng đại diện phù hợp và xác định xem vấn đề đó họ có gặp phải không. Sau đó chúng ta <a href="https://leanstack.com/pivot-before-productmarket-fit-optimize-after/">tối ưu hóa và xác định</a> vấn đề này với nhiều người dùng hơn và ở quy mô lớn hơn.</p>

<p>Những điều bạn thu được từ các cuộc phỏng vấn này sẽ giúp bạn tự tin để thúc đẩy ý tưởng của mình tiến xa hơn. Hoặc nó cũng sẽ cho bạn thấy rằng bạn cần phải đào sâu ý tưởng khi bạn tìm hiểu thêm những vấn đề cơ bản thực sự.</p>

<p>Ba kỹ thuật được miêu tả dưới đây có thể dùng riêng biệt, nhưng chúng tạo thành một bộ các phương pháp có thể cung cấp một hình ảnh tốt hơn về vấn đề mà bạn đang cố gắng thẩm định.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/10/04/tham-dinh-van-de.jpg" title="Thẩm định vấn đề" ></p>

<h2>PHƯƠNG PHÁP 1: TÌM NĂM NGƯỜI THAM GIA THỬ NGHIỆM</h2>

<p>Việc tìm được ít nhất 5 người nói rằng họ muốn sử dụng sản phẩm giả thuyết của bạn là một dấu hiệu hợp lý chỉ ra rằng bạn có vấn đề rất đáng giải quyết. Trong khi điều này cũng không nhất thiết đảm bảo được vấn đề thực sự tồn tại hay giải pháp đề xuất của bạn là tốt hoặc đáng giá, nhưng đó là cách đơn giản nhất để bắt đầu thẩm định vấn đề của bạn.</p>

<p>Dưới đây là một ví dụ từ Rob Walling, nhà sáng lập công cụ thư thương mại Drip:</p>

<p>&ldquo;Tôi muốn tìm 10 người có thể sẵn sàng trả một số tiền nhất định để mua sản phẩm khi nó đã hoàn thiện. Điều này buộc tôi không phải chỉ suy nghĩ về tính năng, mà còn phải chắt lọc những ý tưởng để có được giá trị cốt lõi của nó: đây là lý do duy nhất một người nào đó sẽ sẵn sàng trả tiền cho tôi để mua sản phẩm. Tôi gửi email nói về giá trị cốt lõi ý tưởng của mình cho 17 người mà tôi biết hoặc ít nhất là có nghe nói họ gặp vấn đề tương tự. Bằng cách này, tôi không chỉ có khách hàng đầu tiên có thể cung cấp cho tôi thông tin phản hồi chi tiết về cách công cụ Drip hoạt động, mà tôi còn có được sự khởi đầu cho nền tảng doanh thu ban đầu để sử dụng phát triển sản phẩm.&rdquo;</p>

<p>Nếu bạn có thể xây dựng một mối quan hệ tốt với những người sử dụng này và lưu giữ thông tin liên lạc của họ, họ thậm chí có thể sẵn sàng là năm khách hàng đầu tiên của bạn.</p>

<h2>PHƯƠNG PHÁP 2: PHỎNG VẤN NGƯỜI SỬ DỤNG</h2>

<p>Bằng cách ngồi xuống và nói chuyện với người dùng, bạn sẽ có thể hiểu nhiều hơn về vấn đề của bạn và người dùng của bạn. Trọng tâm ở đây là để hiểu những động cơ và nhu cầu của mỗi người dùng tiềm năng mà bạn nói chuyện và sử dụng thông tin phản hồi để cải thiện sản phẩm.</p>

<p>Lý tưởng nhất, bạn sẽ muốn có cả một người phỏng vấn và một ngưới quan sát có trong buổi phỏng vấn. Trong khi người phỏng vấn trao đổi với người sử dụng, người quan sát sẽ ghi chép.</p>

<p>Một số hoạt động tốt cho một cuộc phỏng vấn hiệu quả bao gồm việc khuyến khích người tham gia chia sẻ kinh nghiệm trong quá khứ cũng như nhu cầu và thách thức hiện tại của họ. Hỏi người tham gia đã cố gắng như nào để giải quyết vấn đề cụ thể này trong quá khứ và kết quả đạt được. Nói về điều này theo quan điểm cá nhân cho phép người tham gia biểu lộ cảm xúc, điều này cung cấp cho bạn cái nhìn sâu sắc hơn về động cơ người dùng và giúp bạn đồng cảm với nhu cầu của họ.</p>

<p>Ngoài ra, tránh hỏi người được phỏng vấn muốn điều gì. Thật khó cho người được phỏng vấn chia sẻ chính xác họ muốn gì. Sẽ dễ dàng hơn để người được phỏng vấn nói với bạn những gì họ đang cố gắng để đạt được và bạn có thể hỏi về động cơ của họ sau cuộc phỏng vấn này. Có được những thông tin này cho phép bạn đánh giá liệu ý tưởng sản phẩm của bạn có giải quyết được nhu cầu cụ thể đó không hay liệu bạn cần phải sửa đổi ý tưởng một chút để giải quyết được vấn đề cấp bách hơn.</p>

<p>Một vấn đề nữa trong phỏng vấn người dùng đó là các câu hỏi mang tính hướng dẫn, gợi ý. Đây là những câu hỏi được đặt ra với những giả định của người phỏng vấn, có thể dẫn đến kết quả sai. Hãy giữ các câu hỏi khách quan và kết thúc mở &ndash; kiểu như, &ldquo;Ấn tượng của bạn khi sử dụng tính năng X là gì?&rdquo; thay vì &ldquo;Mức độ dễ dàng để sử dụng tính năng X để điều hướng ra sao?&rdquo;. Chúng tôi đã biên soạn  <a href="https://logbook.hanno.co/7-best-practises-for-better-user-interviews/">những chỉ dẫn hữu ích hơn</a> để thực hiện tốt nhất cho các cuộc phỏng vấn người sử dụng.</p>

<h2>PHƯƠNG PHÁP 3: NGHIÊN CỨU VỀ BẢN NGÃ</h2>

<p>Bản ngã thường được mô tả như là quá trình khám phá điều chưa biết. Trong nghiên cứu bản ngã, bạn sẽ đóng vai trò của nhà thám hiểm dũng cảm và đi du lịch để khám phá môi trường làm việc cũng như môi trường sống thực tế của người dùng. Đây là hình thức nghiên cứu rất tốt để quan sát và tìm hiểu về hành vi (Bạn làm gì?), động lực (Tại sao bạn làm điều đó?) và nhận thức (Làm thế nào để bạn nghĩ về những gì bạn cần và những gì bạn làm?).</p>

<p>Phương pháp này đưa ra cái nhìn sâu sắc vào bối cảnh, có thể là khó khăn để có được kết quả, song là phương pháp kiểm tra chính thức. Tìm hiểu về bối cảnh này giúp chúng ta hiểu những ảnh hưởng đến kinh nghiệm người dùng, đặc biệt là bên ngoài điều kiện phòng thí nghiệm, cuộc phỏng vấn và kiểm tra được giám sát.</p>

<p>Chìa khóa ở đây là để phát hiện và nắm bắt được khoảnh khắc trong khi khám phá những động cơ thúc đẩy của người sử dụng.</p>

<p>Hãy tưởng tượng rằng bạn đang xây dựng một sản phẩm để cải thiện phong thái làm việc của nhân viên văn phòng. Nghiên cứu môi trường tự nhiên sẽ là một công cụ có giá trị, thậm chí còn giá trị hơn so với các cuộc phỏng vấn người sử dụng. Bạn sẽ tự đặt mục tiêu cho mình là đến tận các văn phòng để quan sát người dùng, và xem liệu vấn đề còn tồn tại hay không. Bạn cũng có thể tới quan sát một loạt các cơ quan khác nhau, văn phòng khởi nghiệp, không gian làm việc nhóm, cũng như các văn phòng lớn điển hình.</p>

<p>Tiến hành nghiên cứu môi trường tự nhiên sẽ giúp bạn xem liệu vấn đề có tồn tại và thậm chí có thể phát hiện ra những vấn đề mới để bạn có thể đào sâu các ý tưởng. Nghiên cứu môi trường tự nhiên là một lĩnh vực phức tạp mà có thể đi xa hơn những gì chúng tôi đã đề cập đến cho đến nay. Hãy tìm hiểu kỹ hơn về phương pháp này bằng cách đọc thêm về nó tại <a href="https://en.wikipedia.org/wiki/Ethnography">đây</a>.</p>

<h2>TẠI SAO NHỮNG PHƯƠNG PHÁP NÀY QUAN TRỌNG?</h2>

<p>Bằng cách tập trung vào nghiên cứu người sử dụng, bạn có thể tránh được những sai lầm phổ biến như việc giả định các vấn đề bạn đang đối phó cũng là vấn đề của người khác gặp phải. Thông thường, chúng ta hay gặp những tình huống chẳng hạn như một nhà thiết kế nói rằng:&ldquo;Tôi giả định là người dùng cuối, vì vậy sẽ là an toàn khi thiết kế một cái gì đó dựa trên nhu cầu của riêng tôi. Dù ý tưởng của tôi là gì đi nữa thì ý tưởng đó sẽ phù hợp với những khuôn mẫu cho những người dùng khác. &#8220;Hãy nhớ rằng bạn không phải là người dùng của bạn. Bởi vì bạn biết quá rõ các vấn đề của sản phẩm, những giải pháp dường như là hoàn hảo với bạn lại có thể là giải pháp tồi tệ đối với hầu hết người dùng. Giải quyết các vấn đề mà bạn đã xác định cũng có nghĩa rằng bạn đã dành thời gian đáng kể tìm hiểu các chủ đề và có thể hiểu nó sâu hơn so với người dùng bình thường. Quan điểm của bạn về vấn đề này ngay bây giờ chỉ là ý kiến chủ quan, hơn tất cả đó là lí do tại sao bạn cần sử dụng ý kiến từ người sử dụng, để đảm bảo bạn đang giải quyết vấn đề đó một cách thực tế chứ không phải chỉ là từ ý kiến chủ quan của bạn.</p>

<p>(Mời bạn xem tiếp <a href="http://blog.teracy.com/2016/10/04/cach-tiep-can-tinh-gon-de-tham-dinh-san-pham-phan-2/">phần 2</a>)</p>

<p>Dịch từ: <a href="https://www.smashingmagazine.com/2016/07/a-lean-approach-to-product-validation/">A lean apprroach to product validation</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tập hợp những cuốn sách hay nên đọc về UX]]></title>
    <link href="http://blog.teracy.com/2016/10/02/tap-hop-nhung-cuon-sach-hay-nen-doc-ve-ux/"/>
    <updated>2016-10-02T16:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/10/02/tap-hop-nhung-cuon-sach-hay-nen-doc-ve-ux</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/10/02/ux-books.jpeg" title="Tập hợp những cuốn sách hay về UX" ></p>

<p>Đây là danh sách đọc dành cho bất cứ ai muốn học hoặc tìm hiểu sâu hơn về các lĩnh vực nghiên cứu người dùng, khả năng sử dụng, kiến trúc thông tin, thiết kế giao diện người dùng, thiết kế tương tác, chiến lược nội dung hoặc chiến lược kinh nghiệm.</p>

<p>Danh sách này rất rộng gồm những cuốn sách tiêu biểu về tư duy thiết kế, quy trình, phương pháp, nguyên tắc và các cách làm tốt nhất. Trong danh sách này có nhiều cuốn sách đã có cách đây hơn 20 năm, tuy nhiên nó vẫn phù hợp với hiện nay.</p>

<p>Mỗi cuốn sách đều có ảnh hưởng đến quan điểm của tôi, tạo ấn tượng cho tôi và giúp tôi thăng tiến trong sự nghiệp của mình. Những cuốn sách này cũng đã hình thành nên người thiết kế là tôi hôm nay và tạo cảm hứng thiết kế cho tôi mai sau.</p>

<p>Không có ngày nào tôi không tự suy nghĩ và áp dụng các ý tưởng từ những cuốn sách này cả. Tôi hy vọng rằng bạn cũng có thể tìm thấy giá trị như vậy nhờ những cuốn sách này.</p>

<!-- more -->


<h1>Top Mười Cuốn Sách Của Tôi</h1>

<ol>
<li><a href="http://amzn.com/0465050654">The Design of Everyday Things</a>, Donald Norman</li>
<li><a href="http://amzn.com/1118766571">About Face: The Essentials of Interaction Design</a>, Alan Cooper</li>
<li><a href="http://amzn.com/0321683684">The Elements of User Experience: User-Centered Design for the Web and Beyond</a>, Jesse James Garrett</li>
<li><a href="http://amzn.com/0596516835">Subject To Change: Creating Great Products &amp; Services for an Uncertain World</a>, Peter Merholz, Todd Wilkens, Brandon Schauer, David Verba</li>
<li><a href="http://uxmastery.com/practical-ia/">A Practical Guide to Information Architecture</a>, Donna Spencer</li>
<li><a href="http://amzn.com/0321712463">Communicating Design: Developing Web Site Documentation for Design and Planning</a>, Dan M. Brown</li>
<li><a href="http://amzn.com/0321918630">Designing Together: The collaboration and conflict management handbook for creative professionals</a>, Dan M. Brown</li>
<li><a href="http://amzn.com/0321725522">Seductive Interaction Design: Creating Playful, Fun, and Effective User Experiences</a>, Stephen Anderson</li>
<li><a href="http://amzn.com/0321767535">100 Things Every Designer Needs to Know About People</a>, Susan Weinschenk</li>
<li><a href="http://shapeofdesignbook.com/">The Shape of Design</a>, Frank Chimero</li>
</ol>


<h1>50 Cuốn Sách Cần Phải Đọc Về Tư Duy, Phương Pháp, Nguyên Tắc, Và Các Cách Làm Tốt Nhất</h1>

<p>Tôi thấy rất hữu ích khi lựa chọn nên đọc cái gì dựa trên những gì có liên quan vào thời điểm nào đó. Khi bạn nghĩ và làm, việc áp dụng những gì bạn đang đọc là một cách tuyệt vời để củng cố các khái niệm, phản ánh và học hỏi.</p>

<p>Tất cả các bài đọc dưới đây đều quan trọng, một số bài cũ và một số bài mới, không theo một thứ tự đặc biệt nào cả.</p>

<ul>
<li><a href="http://amzn.com/0596516258">Designing Web Interfaces: Principles and Patterns for Rich Interactions</a>, Bill Scott, Theresa Neil</li>
<li><a href="http://amzn.com/0262134721">The Laws of Simplicity (Simplicity: Design, Technology, Business, Life)</a>, John Maeda</li>
<li><a href="http://amzn.com/1491911689">Information Architecture for the World Wide Web: Designing for the Web and Beyond, Peter Morville, Louis Rosenfeld</a>, Jorge Arango</li>
<li><a href="http://amzn.com/0123740371">Sketching User Experiences: Getting the Design Right and the Right Design</a>, Bill Buxton</li>
<li><a href="http://amzn.com/1625274793">Well Designed: How to Use Empathy to Create Products People Love</a>, Jon Kolko</li>
<li><a href="http://amzn.com/0123809304">Thoughts on Interaction Design</a> của Jon Kolko</li>
<li><a href="http://amzn.com/1477800670">Manage Your Day-to-Day: Build Your Routine, Find Your Focus, and Sharpen Your Creative Mind</a>, Jocelyn K. Glei, 99u</li>
<li><a href="http://amzn.com/1591843162">Linchpin: Are You Indispensable?</a>, Seth Godin</li>
<li><a href="http://amzn.com/0321965515">Don’t Make Me Think</a> và <a href="http://amzn.com/0321657292">Rocket Surgery Made Easy</a>, Steve Krug</li>
<li><a href="http://amzn.com/1449379702">Designing Interfaces</a>, Jennifer Tidwell</li>
<li><a href="http://amzn.com/0470185481">Handbook of Usability Testing: How to Plan, Design, and Conduct Effective Tests</a>, Jeffrey Rubin, Dana Chisnell</li>
<li><a href="http://mitpress.mit.edu/books/designing-interactions">Designing Interactions</a>, Bill Moggridge</li>
<li><a href="https://www.amazon.com/dp/0961392142">The Visual Display of Quantitative Information</a> và <a href="https://www.amazon.com/dp/0961392118">Envisioning Information</a>, Edward R. Tufte</li>
<li><a href="http://amzn.com/0321815386">A Project Guide to UX Design: For user experience designers in the field or in the making</a>, Russ Unger &amp; Carolyn Chandler</li>
<li><a href="http://amzn.com/0596804172">Gamestorming: A Playbook for Innovators, Rulebreakers, and Changemakers</a>, Dave Gray, Sunni Brown, James Macanufo</li>
<li><a href="http://rosenfeldmedia.com/books/mental-models/">Mental Models: Aligning Design Strategy with Human Behavior</a>, Indi Young</li>
<li><a href="http://rosenfeldmedia.com/books/practical-empathy/">Practical Empathy: For Collaboration and Creativity in Your Work</a>, Indi Young</li>
<li><a href="http://rosenfeldmedia.com/books/interviewing-users/">Interviewing Users: How to Uncover Compelling Insights</a>, Steve Portigal</li>
<li><a href="http://rosenfeldmedia.com/books/the-mobile-frontier/">The Mobile Frontier: A Guide for Designing Mobile Experiences</a>, Rachel Hinman</li>
<li><a href="http://rosenfeldmedia.com/books/design-is-the-problem/">Design Is the Problem: The Future of Design Must be Sustainable</a>, Nathan Shedroff</li>
<li><a href="http://rosenfeldmedia.com/books/the-user-experience-team-of-one/">The User Experience Team of One: A Research and Design Survival Guide</a>, Leah Buley</li>
<li><a href="http://rosenfeldmedia.com/books/prototyping/">Prototyping: A Practitioner’s Guide</a>, Todd Zaki Warfel</li>
<li><a href="http://amzn.com/0321552342">Making Meaning: How Successful Businesses Deliver Meaningful Customer Experiences</a>, Steve Diller, Nathan Shedroff, Darrel Rhea</li>
<li><a href="http://amzn.com/0321808304">Content Strategy for the Web</a> của các tác giả Kristina Halvorson, Melissa Rach</li>
<li><a href="http://abookapart.com/products/responsive-web-design">Responsive Web Design</a>, Ethan Marcotte</li>
<li><a href="http://abookapart.com/products/just-enough-research">Just Enough Research</a>, Erika Hall</li>
<li><a href="http://abookapart.com/products/design-is-a-job">Design Is A Job</a>, Mike Monteiro</li>
<li><a href="http://abookapart.com/products/designing-for-emotion">Designing for Emotion</a>, Aaron Walter</li>
<li><a href="http://amzn.com/0124157815">Measuring the User Experience: Collecting, Analyzing, and Presenting Usability Metrics</a> của tác giả William Albert, Thomas Tullis</li>
<li><a href="http://amzn.com/1600617972">Creative Workshop: 80 Challenges to Sharpen Your Design Skills</a>, David Sherwin</li>
<li><a href="http://amzn.com/0123859301">Letting Go of The Words: Writing Web Content that Works</a>, Janice (Ginny) Redish</li>
<li><a href="http://amzn.com/0321749855">Designing the Obvious: A Common Sense Approach to Web Application Design</a>, Robert Hoekman Jr</li>
<li><a href="http://amzn.com/0321535081">Designing the Moment: Web Interface Design Concepts in Action</a>, Robert Hoekman Jr</li>
<li><a href="http://www.amazon.com/Designing-Social-Voices-That-Matter/dp/0321534921/">Designing for the Social Web</a>, Joshua Porter</li>
<li><a href="http://amzn.com/0321719905">Undercover User Experience Design</a>, Cennydd Bowles, James Box</li>
<li><a href="http://amzn.com/0321929039">Product Design for the Web: Principles of Designing and Releasing Web Products</a>, Randy Hunt</li>
<li><a href="http://amzn.com/0321537351">Designing the User Interface: Strategies for Effective Human-Computer Interaction</a>, Ben Shneiderman, Catherine Plaisant, Maxine Cohen, Steven Jacobs</li>
<li><a href="http://amzn.com/1118156307">This is Service Design Thinking: Basics, Tools, Cases</a>, Marc Stickdorn, Jakob Schneider</li>
<li><a href="http://amzn.com/0470632011">Resonate: Present Visual Stories That Transform Audiences</a>, Nancy Duarte</li>
<li><a href="http://amzn.com/0321898672">Metaskills: 5 Talents for the Robotic Age</a>, Marty Neumeier</li>
<li><a href="https://www.amazon.com/dp/0321348109/ref=cm_sw_su_dp">The Brand Gap: How to Bridge the Distance Between Business Strategy and Design</a>, Marty Neumeier</li>
<li><a href="https://gettingreal.37signals.com/">Getting Real</a> và <a href="https://www.amazon.com/dp/0307463745">Rework</a>, 37 Signals, Jason Fried, David Heinemeier Hansson</li>
<li><a href="https://www.amazon.com/dp/0801475090">Glut: Mastering Information through the Ages</a>, Alex Wright</li>
<li><a href="http://amzn.com/0201379376">The Humane Interface: New Directions for Designing Interactive Systems</a>, Jef Raskin</li>
<li><a href="http://amzn.com/0321616952">Designing with Web Standards</a>, Jeffrey Zeldman, Ethan Marcotte</li>
<li><a href="http://amzn.com/0321703545">Simple and Usable Web, Mobile, and Interaction Design</a>, Giles Colborne</li>
<li><a href="http://amzn.com/0596802277">Search Patterns: Design for Discovery</a>, Peter Morville, Jeffery Callender</li>
<li><a href="http://amzn.com/0465051367">Emotional Design: Why We Love (or Hate) Everyday Things</a>, Don Norman</li>
<li><a href="http://amzn.com/0321603605">Neuro Web Design: What Makes Them Click?</a>, Susan Weinschenk</li>
<li><a href="http://amzn.com/0470229101">Designing for the Digital Age: How to Create Human-Centered Products and Services</a>, Kim Goodwin</li>
<li><a href="http://rosenfeldmedia.com/books/a-web-for-everyone/">A Web For Everyone, Sarah Horton</a>, Whitney Quesenbery</li>
</ul>


<h1>Thật Hữu Ích Khi Đọc Nhiều</h1>

<p>Đọc sách chỉ là một phần tạo nguồn cảm hứng và học tập của tôi. Tôi cũng thường xuyên đọc các bài blog và báo. Tôi khuyên bạn hãy cập nhật các nguồn sau về tư duy lãnh đạo tuyệt vời:</p>

<ul>
<li><a href="http://www.peterme.com/">Peter Merholz</a></li>
<li><a href="https://medium.com/the-year-of-the-looking-glass">The Year of the Looking Glass</a>, Julie Zhou</li>
<li><a href="http://bokardo.com/about/">Bokardo</a>, Joshua Porter</li>
<li><a href="https://ia.net/know-how">Information Architects</a>, Oliver Reichenstein</li>
<li><a href="http://feltpresence.com/">Felt Presence</a>, Ryan Singer</li>
<li><a href="http://whitneyhess.com/blog/">Whitney Hess</a></li>
<li><a href="http://www.disambiguity.com/">Disambiguity</a>, Leisa Reichelt</li>
<li><a href="http://www.lukew.com/ff/">Form and Function</a>, Luke Wroblewski</li>
<li><a href="http://frankchimero.com/">Frank Chimero</a></li>
<li><a href="https://aralbalkan.com/">Aral Balkan</a></li>
<li><a href="http://davidcole.me/">David Cole</a></li>
<li><a href="http://sethgodin.typepad.com/">Seth Godin</a></li>
<li><a href="http://scottberkun.com/blog/">Scott Berkun</a></li>
<li><a href="http://blog.intercom.io/">Intercom</a></li>
<li><a href="https://library.gv.com/tagged/design">Google Ventures Design Library</a></li>
<li><a href="http://www.adaptivepath.com/ideas/">Adaptive Path</a></li>
<li><a href="http://boxesandarrows.com/">Boxes and Arrows</a></li>
<li><a href="http://www.uxmatters.com/">UXmatters</a></li>
<li><a href="http://www.uie.com/brainsparks/">UIE Brainsparks</a></li>
<li><a href="http://uxmag.com/">UX Magazine</a></li>
<li><a href="http://www.uxbooth.com/">UX Booth</a></li>
<li><a href="http://alistapart.com/">A List Apart</a></li>
<li><a href="http://www.smashingmagazine.com/">Smashing Magazine</a></li>
<li><a href="https://signalvnoise.com/">Signal vs. Noise</a>, Basecamp</li>
<li><a href="http://52weeksofux.com/">52 Weeks of UX</a></li>
</ul>


<p>Bài dịch từ <a href="https://medium.com/interactive-mind/the-only-ux-reading-list-ever-d420edb3f4ff#.m21ut2rer">The Only UX reading list ever</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Những điều cần biết để xây dựng thử nghiệm người dùng hiệu quả]]></title>
    <link href="http://blog.teracy.com/2016/09/29/nhung-dieu-can-biet-de-xay-dung-thu-nghiem-nguoi-dung-hieu-qua/"/>
    <updated>2016-09-29T09:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/09/29/nhung-dieu-can-biet-de-xay-dung-thu-nghiem-nguoi-dung-hieu-qua</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/09/29/xay-dung-thu-nghiem-nguoi-dung.png" title="Xây dựng thử nghiệm người dùng" ></p>

<p>Gần đây số lượng các ứng dụng trong thị trường android và iOs đã vượt xa con số 8 triệu, ngoài ra còn
có một con số không giới hạn các trang web và các ứng dụng web đang xuất hiện khắp nơi trên thế giới
nữa. Với khối lượng khổng lồ các ứng dụng đó thì điều khan hiếm nhất là khoảng thời gian tập trung
của người dùng cho mỗi ứng dụng.</p>

<p>Thách thức lớn nhất trong thiết kế UX là thu hút được nhiều thời gian tập trung của người dùng.
Điều này đặt ra một thách thức với người chủ sở hữu sản phẩm và những người thiết kế UX làm sao thiết kế
ra những ứng dụng thu hút được sự chú ý và tham gia của người dùng.</p>

<!-- more -->


<h1>Tại sao thử nghiệm người dùng lại đặc biệt quan trọng như vậy</h1>

<p>Một trong những cách rất hiệu quả để đảm bảo chuyển đổi và tham gia tốt hơn là thực hiện &ldquo;thử nghiệm
người dùng&rdquo; (Hay đúng hơn là thử nghiệm khả năng sử dụng). Đó là một cách khoa học để tìm ra những gì
mà người dùng dễ dàng tìm thấy và những điều họ phải làm. Nghiên cứu về người dùng thường xuyên được
thảo luận bởi rất nhiều lãnh đạo nhóm thiết kế bao gồm <a href="https://medium.com/@ideo">IDEO</a>,
<a href="https://medium.com/@frogdesign">frog</a> và nhiều nhà thiết kế khác.</p>

<p>Chúng tôi đã quan sát một số những đội ngũ hàng đầu thế giới có kinh nghiệm thiết kế phục vụ hàng triệu
người dùng trên toàn cầu và đã rút ra được vài bài học nhanh chóng mà bạn có thể sử dụng trong nghiên
cứu người dùng sắp tới của mình:</p>

<h1>1. Biết được bạn đang mong muốn gì</h1>

<p>Thậm chí trước khi bạn nghĩ về thử nghiệm người dùng, bạn nên đặt ra cho mình một mục tiêu nào đó.
Các cách xây dựng mục tiêu có thể sẽ khác nhau nếu như bạn đang giải quyết vấn đề về thiết kế của
một ứng dụng hiện có hoặc khi bạn thẩm định một thiết kế hoàn toàn mới của một ứng dụng sắp được tung ra.</p>

<ul>
<li><strong>Đối với ứng dụng/trang web hiện có</strong>: Bạn có được những quan sát về các vấn đề thiết kế từ Google
Analytics, Mixpanel. Giải pháp của vấn đề này đó là bạn là người dùng thử nghiệm trên những thách thức
hiện tại trong khi khám phá các cách khác để cải thiện. Ví dụ: đối với ứng dụng thương mại điện tử,
người dùng có thể thêm một số sản phẩm vào giỏ hàng, nhưng họ sẽ quay lại để xem chi tiết sản phẩm thay vì thanh toán.</li>
</ul>


<p>Đối với những ứng dụng hiện có, cải thiện kết quả kinh doanh chính là mục tiêu chính của thử nghiệm người dùng.</p>

<p>Ví dụ, mục tiêu chính đối với ứng dụng hiện có trong ví dụ trên là chuyển từ giỏ hàng sang mục thanh toán.</p>

<ul>
<li><strong>Đối với ứng dụng/trang web sắp ra</strong>: với ứng dụng sắp được tung ra, bạn cần phải có giả thuyết thiết kế nhất định bao gồm: hướng dẫn thương hiệu, thành phần thiết kế&hellip; Ví dụ: với trường hợp ứng dụng âm nhạc, bạn đưa ra lựa chọn các tab cho các loại nhạc khác nhau thay vì dùng bộ lọc.
Đối với ứng dụng sắp ra, mục tiêu chính có thể là xác nhận các giả thuyết thiết kế.</li>
</ul>


<p>Trong ví dụ của chúng tôi, chúng tôi muốn xác nhận liệu người dùng sẽ sử dụng các tuỳ chọn để tìm các loại âm nhạc thay vì sử dụng bộ lọc.</p>

<p><strong>Việc thiết lập mục tiêu ngay từ đầu khi kiểm thử sẽ giúp bạn có những câu hỏi đúng</strong>.</p>

<h1>2. Tuyển chọn người dùng thử nghiệm cẩn thận</h1>

<p>Khi bạn đã quyết định được mục tiêu thử nghiệm người dùng, bạn cần phải kiểm tra người dùng để thực hiện
thử nghiệm người dùng. Khi một sản phẩm được xây dựng, bạn cũng đã có hồ sơ người dùng và bạn có một vài người dùng thực &ndash; những người muốn được xem các ứng dựng mới. Bạn có thể cùng họ thực hiện kiểm thử.</p>

<p>Mặc dù rất dễ dàng để kiểm thử với người dùng hiện tại nhưng cũng thật cẩn thận để loại bỏ thành kiến từ những trải nghiệm của họ.</p>

<p>Để giảm bớt thành kiến từ những kinh nghiệm sẵn có, bạn có thể muốn tạo một phiên bản đầy đủ các ứng dụng để làm cho toàn bộ trải nghiệm của họ tự nhiên hơn.</p>

<p>Bạn có thể muốn vẽ minh hoạ liên quan mật thiết tới người dùng của bạn.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/09/29/ho-so-nguoi-dung-cua-airbnb.jpeg" title="Hồ sơ người dùng của airbnb" ></p>

<p>Tuy nhiên, trong trường hợp của một ứng dụng mới, bạn hiểu vấn đề bạn sẽ phải giải quyết và giải
quyết cho ai. Hãy thu hẹp vấn đề càng nhỏ càng tốt. Dưới đây là một số câu hỏi mà bạn cần hỏi khi lựa
chọn người dùng mẫu cho thử nghiệm người dùng:</p>

<ul>
<li><p><strong>Liên quan</strong>: Ứng dụng của bạn có liên quan tới người dùng thử nghiệm không?</p></li>
<li><p><strong>Tần suất sử dụng</strong>: Người dùng này có thường xuyên sử dụng ứng dụng của bạn trong công việc mà người đó làm hay không?</p></li>
<li><p><strong>Nhân khẩu học</strong>: Sự khác biệt văn hoá là một yếu tố quan trọng đối với trải nghiệm của người dùng. Tập trung vào nơi ở, tuổi, giới tính khi lựa chọn người dùng mẫu.</p></li>
<li><p><strong>Mức thu nhập</strong>: Những người dùng này có sẵn sàng trả tiền để sử dụng ứng dụng/dịch vụ của bạn không? Điều này bao gồm cả khả năng tài chính và thói quen mua sắm.</p></li>
</ul>


<p>Bạn còn nghĩ ra được ý tưởng nào nữa không? Hãy cho chúng tôi biết nhé.</p>

<h1>3. Thời điểm nào thích hợp cho việc kiểm thử người dùng?</h1>

<p>&ldquo;Tôi sẽ đợi tới giao diện cuối cùng để tiến hành kiểm thử người dùng&rdquo;. Chủ sở hữu sản phẩm chỉ tiến hành kiểm thử người dùng khi họ có được phiên bản cuối cùng. Đó không phải là một ý hay, bởi vì khi đó bạn sẽ phải lặp lại hầu hết thời gian và công sức đã bỏ ra.
Lặp lại ngay khi có thể trong quy trình thiết kế để tiết kiệm thời gian và công sức.
<img class="center" src="http://blog.teracy.com/images/2016/09/29/quy-trinh-thiet-ke.jpeg" title="Quy trình thiết kế" ></p>

<p>Những mong đợi trong các giai đoạn khác nhau của quy trình kiểm thử người dùng.</p>

<ul>
<li><p><strong>Từ ý tưởng đến phác hoạ bằng tay</strong>: Thảo luận các ý kiến trên giấy bút hoặc trên bảng trắng. Tập hợp các phác hoạ bằng tay vào CanvasFlip và mời người dùng nội bộ kiểm thử.</p></li>
<li><p><strong>Từ phác họa bằng tay đến thiết kế khung sườn (wireframing)</strong>: Trong giai đoạn này, bạn gần như đã tạo được hình dáng phiên bản giao diện người dùng, xác định các icon và nhãn. Cách tốt nhất là giới thiệu chúng đến người dùng bên ngoài nhưng ở quy mô nhỏ.</p></li>
<li><p><strong>Từ thiết kế khung sườn đến mockup ban đầu</strong>: Khi bạn xây dựng các mockup, bạn nên giới thiệu chúng đến người dùng để thu được các trải nghiệm ban đầu. Bạn tiếp tục sửa đổi và đưa ra bản giao diện người dùng cuối cùng trên cơ sở nhận xét của người dùng ở giai đoạn này.</p></li>
</ul>


<p>Hầu hết các nhóm nổi tiếng đều sử dụng công cụ phân tích UX như CanvasFlip để tạo ra dòng UX tương tác (nguyên mẫu) và tạo ra bộ phân tích UX như video người dùng, quy trình chuyển đổi hình phễu, và bản đồ nhiệt tương tác.</p>

<h1>4. Mức độ tham gia của bạn như thế nào trong quá trình kiểm thử người dùng</h1>

<p>Luôn có sự đánh đổi giữa việc tạo ra một ngữ cảnh kiểm thử theo giời gian thực và việc quan sát người dùng.
Khi bạn quan sát người dùng chặt chẽ,họ sẽ càng có ý thức và đưa ra quyết định mang tính quyết đoán hơn so với bản năng.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/09/29/kiem-thu-tinh-kha-dung.png" title="Kiểm thử tính khả dụng" ></p>

<p>Trên cơ sở mức độ tham gia của người dùng, có thực hiện 3 cách kiểm thử người dùng:</p>

<ul>
<li><p><strong>Kiểm duyệt tại chỗ</strong>: Trong giai đoạn này, bạn sẽ luôn ở cạnh người dùng, yêu cầu tiến hành các tác vụ, ra câu hỏi và quan sát phản ứng. Điều này sẽ có ích ở giai đoạn đầu phát triển thiết kế.</p></li>
<li><p><strong>Kiểm duyệt từ xa</strong>: Trong giai đoạn này, bạn có thể kết nối qua Skype, Google Hangout, Zoom hoặc Go-to-Meeting&hellip; Bạn có thể yêu cầu nhiệm vụ thực hiện và quan sát phản ứng. Nói chung là giữ cho sự tương tác càng ít càng tốt. Điều này hữu dụng trong giai đoạn dựng khung và thiết kế mockup.</p></li>
<li><p><strong>Không kiểm duyệt</strong>: đúng như tên của nó, một thử nghiệm người dùng không được kiểm duyệt được tiến hành mà gần như không có sự can thiệp nào. Người dùng được đưa cho một nguyên mẫu thiết kế (phototype) và yêu cầu chạy thử hoặc đưa ra một tác vụ để thực hiện. Ví dụ: Mua/tìm kiếm một item nào đó.</p></li>
</ul>


<h1>5. Cách phân tích kết quả thử nghiệm người dùng</h1>

<p>Khi bạn tiến hành thử nghiệm người dùng bằng bản thiết kế hiện có, bạn thường thực hiện với phần dễ trước. Tiếp đến sẽ là những phần quan trọng và phức tạp hơn &ndash; để phân tích kết quả kiểm thử người dùng, tìm ra những thứ cần loại bỏ và xem xét mức độ ảnh hưởng của các kết quả đó đối với thiết kế hiện tại.</p>

<p><strong>Phân tích kết quả thử nghiệm người dùng ở giai đoạn đầu</strong></p>

<p>Giai đoạn đầu thường tiến hành thử nghiệm người dùng ở mức có kiểm soát. Kết quả thu được thường mang tính chủ quan, qua đó có thể hiểu được mong đợi và hành vi của người dùng và trên cơ sở đó để xây dụng thiết kế. Khi đã hiểu được các tính năng, các mẫu thiết kế, các lựa chọn điều hướng, sơ đồ icon, ưu iên về font chữ, nhãn, bạn có thể xây dựng khung cho toàn bộ quy trình thiết kế còn lại.</p>

<p><strong>Phân tích kết quả thử nghiệm người dùng ở giai đoạn sau</strong></p>

<p>Khi nghiên cứu kết quả thử nghiệm người dùng ở giai đoạn sau, bạn buộc phải tuân theo thuyết thiết kế đã xây dựng ở giai đoạn trước. Các thuyết đó theo dạng &ldquo;chuyển đổi theo dòng UX&rdquo; hoặc &ldquo;Thẩm định CTA&rdquo; trong các thiết kế màn hình. Ví dụ, bạn muốn biết có bao nhiêu người dùng đã bỏ đi khi đã chọn xong sản phẩm và đang chuẩn bị sang bước thanh toán. Hay có bao nhiêu người dùng đã click vào &ldquo;Login&rdquo; CTA so với phần còn lại của màn hình.</p>

<p>Khi bạn hiểu được hành vi và mong đợi của người dùng, bạn sẽ có lựa chọn tốt hơn giữa thử nghiệm người dùng ở mức kiểm soát từ xa và không kiểm soát.</p>

<p>Công cụ kiểm thử tính khả dụng từ xa như Canvasflip có thể cung cấp rất nhiều thông tin hữu ích.</p>

<p><strong>Biết được người dùng sẽ bỏ UX-flow từ chỗ nào</strong></p>

<p>Trong kênh chuyển đổi trên (được tạo ra với CanvasFlip.com), bạn có thể thấy được sừ rời bỏ lớn tại vòng lặp thứ 1 trong màn hình &ldquo;Experiencies&rdquo;.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/09/29/quy-trinh-chuyen-doi-hinh-pheu.png" title="Quy trình chuyển đổi hình phễu" ></p>

<p><strong>Nơi người dùng tương tác nhiều nhất trong giao diện</strong></p>

<p>Một bản đồ nhiệt tương tác về thử nghiệm người dùng được tạo ra bởi CanvasFlip.com giúp bạn biết được khu vực tương tác thường xuyên của người dùng trong giao diện người dùng.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/09/29/ban-do-nhiet-tuong-tac.png" title="Bản đồ nhiệt tương tác" ></p>

<p><strong>Phân tích hành trình của từng cá nhân người dùng</strong></p>

<p>Với CanvasFlip.com, bạn có thể phân tích được những điều hướng của người dùng và thời gian người dùng ở lại mỗi màn hình.
<img class="center" src="http://blog.teracy.com/images/2016/09/29/hanh-trinh-cua-nguoi-dung.png" title="Hành trình của người dùng" ></p>

<p><strong>Xem toàn bộ video phiên người dùng để phân tích và cải thiện hành vi người dùng</strong></p>

<p>Bạn có thể ghi lại các điều hướng người dùng, sau đó tìm ra nơi người dùng gặp vấn đề và tìm cách cải thiện trải nghiệm người dùng.
<img class="center" src="http://blog.teracy.com/images/2016/09/29/ghi-lai-dieu-huong-nguoi-dung.png" title="Ghi lại điều hướng người dùng" ></p>

<h1>Kết luận</h1>

<p>Với nỗ lực nhằm tạo ra một trải nghiệm người dùng tuyệt vời, cần phải tiến hành thử nghiệm người dùng và để thực hiện thử nghiệm hiệu quả, bạn phải biết cần gì/ sửa đổi gì, lựa chọn nhóm người dùng càng hẹp càng tốt, kiểm thử ngay từ lúc đầu, và sử dụng những thông tin hữu ích để rút ra kết luận từ kết quả thử nghiệm người dùng.</p>

<p>Bài dịch từ: <a href="https://blog.prototypr.io/everything-you-should-know-to-conduct-a-kickass-user-testing-89977e653123#.shhsbhhoy">Everything you should know to conduct a kickass user testing</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to develop Angular 2 applications easily with Docker and angular-cli]]></title>
    <link href="http://blog.teracy.com/2016/09/22/how-to-develop-angular-2-applications-easily-with-docker-and-angular-cli/"/>
    <updated>2016-09-22T12:44:00+00:00</updated>
    <id>http://blog.teracy.com/2016/09/22/how-to-develop-angular-2-applications-easily-with-docker-and-angular-cli</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/09/22/angular-boilerplate.png" title="angular-boilerplate" ></p>

<p>Everyone who is new to Angular 2 usually has many difficulties to get started with it, even with the
getting started article from the Angular 2 official documentation. That&rsquo;s the reason why
<a href="https://cli.angular.io/">angular-cli</a> is created to ease the pain. <code>angular-cli</code> is a great CLI
tool, however, it takes a lot of time to get it working by installing nodejs and <code>angular-cli</code>.
Luckily, we&rsquo;ve created <a href="https://github.com/teracyhq/docker-angular-cli">docker-angular-cli</a> project
to build a Docker image so that anyone could use it right away for any Angular 2 projects without the
hassle of installing nodejs and <code>angular-cli</code>. This guide will help you get started in the most
easily and convenient way. It&rsquo;s assumed that you don&rsquo;t need to master Docker but only require that
Docker is installed on your machine and you could follow the instructions below.</p>

<!-- more -->


<h2>0. Prerequisites</h2>

<ul>
<li><p>Make sure the latest <code>Docker</code> and <code>docker-compose</code> is installed on your machine. If not, follow
<a href="https://docs.docker.com/docker-for-mac/">https://docs.docker.com/docker-for-mac/</a> or <a href="https://docs.docker.com/engine/installation/linux/">https://docs.docker.com/engine/installation/linux/</a> or
<a href="https://docs.docker.com/docker-for-windows/">https://docs.docker.com/docker-for-windows/</a> to install them.</p></li>
<li><p><code>docker-angular-cli</code> is tested with <code>Docker</code> v1.12.1 and <code>docker-compose</code> v1.8.0 with the native app
on Mac and on Ubuntu. It should work well on Windows, too.</p></li>
</ul>


<h2>1. Init a new project</h2>

<p>First, to init a new Angular 2 project, follow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir new-ng-project
</span><span class='line'>$ cd new-ng-project
</span><span class='line'>$ docker run -it --rm -v "$PWD":/usr/src -w /usr/src teracy/angular-cli /bin/bash</span></code></pre></td></tr></table></div></figure>


<p>After that, you should be presented with bash console for the docker container. Use <code>ng init</code> to
init a new project.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ng init --name &lt;project-name&gt; --style scss</span></code></pre></td></tr></table></div></figure>


<p>You should see the &lt;project-name> yourself. By default, the style file is <code>css</code>. I recommend using
<code>scss</code> extension for style files.</p>

<h2>2. Add Dockerfile and docker-compose.yml file</h2>

<p>Add Dockerfile and docker-compose.yml as I did with <a href="https://github.com/teracyhq/angular-boilerplate/commit/082a879c5df3fa0ae6ddc000d84512754b62a642">https://github.com/teracyhq/angular-boilerplate/commit/082a879c5df3fa0ae6ddc000d84512754b62a642</a></p>

<h2>3. Note for angular-boilerplate</h2>

<p>For easier setup with best practices, you can combine the 2 steps above (1 + 2) with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/teracyhq/angular-boilerplate.git --depth=1 new-ng-project</span></code></pre></td></tr></table></div></figure>


<p>More useful stuff will come to <a href="https://github.com/teracyhq/angular-boilerplate">angular-boilerplate</a>
later such as CI, CD, production deployment, server side rendering, desktop app and native apps, etc
best practices.</p>

<h2>4. Serve</h2>

<p>To start serving the web app, follow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose up serve</span></code></pre></td></tr></table></div></figure>


<p>and then open <a href="http://localhost:4200">http://localhost:4200</a> to see the web app.</p>

<h2>5. Test</h2>

<p>To run the unit test with Karma and Chrome, follow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose up test</span></code></pre></td></tr></table></div></figure>


<p>and you should see the unit test running on Chrome browser pre-installed on the Docker image.</p>

<h2>6. Exec commands</h2>

<p>To exec some commands, for example:</p>

<p>for linting (code style checking):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose exec serve ng lint</span></code></pre></td></tr></table></div></figure>


<p>or for installing more npm packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose exec serve npm install</span></code></pre></td></tr></table></div></figure>


<p>or for running unit tests:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose exec serve ng test --browsers Chrome_no_sandbox</span></code></pre></td></tr></table></div></figure>


<p>You can exec any commands on the running container.</p>

<h2>7. Develop</h2>

<p>Or if you want to open a new ssh session, open a new terminal window, and execute this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd new-ng-project
</span><span class='line'>$ docker-compose run serve /bin/bash</span></code></pre></td></tr></table></div></figure>


<p>and then you should see something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Starting virtual X frame buffer: Xvfb.
</span><span class='line'>Executing command /bin/bash
</span><span class='line'>root@6d15153f5858:~# </span></code></pre></td></tr></table></div></figure>


<p>And now you can execute any commands you want.</p>

<p>That&rsquo;s it. Now you should start developing Angular 2 applications more easily with <code>docker-compose</code>
and <code>angular-cli</code> by using <code>docker-angular-cli</code>.</p>

<p>You can follow the following tutorial to create a simple todo application: <a href="https://www.sitepoint.com/angular-2-tutorial/">https://www.sitepoint.com/angular-2-tutorial/</a></p>

<h2>8. Learn more</h2>

<ul>
<li><a href="https://github.com/AngularClass/awesome-angular2">https://github.com/AngularClass/awesome-angular2</a></li>
<li><a href="https://github.com/timjacobi/angular2-education">https://github.com/timjacobi/angular2-education</a></li>
</ul>


<p>If you need any consultancy or outsourcing, don&rsquo;t hesitate to contact us. We&rsquo;re eager to build world class web
applications for you!</p>

<p>Happy developing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cách xây dựng sản phẩm]]></title>
    <link href="http://blog.teracy.com/2016/09/01/cach-xay-dung-san-pham/"/>
    <updated>2016-09-01T16:56:00+00:00</updated>
    <id>http://blog.teracy.com/2016/09/01/cach-xay-dung-san-pham</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/09/15/looking-glass.jpg" title="Looking Glass" ></p>

<p style="text-align:center;"> <em>Ảnh của <a href="https://www.flickr.com/photos/corpz/5634268846/">Alex Kislow</a></em></p>

<p>Tôi vừa có dịp trình bày tại <a href="http://thenextweb.com/conference/europe/#gref">TNW Europe</a> về <a href="https://www.youtube.com/watch?v=IIm289_YMIE&amp;index=9&amp;list=PL3_sP0zWUT12Wi7nYBoejXjOA8srrTJgi">framework mà chúng tôi sử dụng tại Facebook để giúp chúng tôi tập trung vào tiến trình phát triển sản phẩm của mình</a>. Việc này đã giúp tôi suy nghĩ rất nhiều về những bài học mà bao năm qua tôi đã học được về việc cần có gì để có thể xây dựng được những sản phẩm tuyệt vời.
Danh sách sau đây chưa hoàn thành hoặc không chắc chắn là đúng, nếu mà có 1 danh sách hoàn hảo các bước cần làm (Bước<em> 1: Bắt đầu. </em>Bước<em> 2: ??? </em>Bước<em> 3: Thu tiền!</em>), thì có lẽ chúng tôi đã chi một khoản tiền cho nó xong rồi ngồi chờ xem các sản phẩm mới tuyệt vời đua nhau nở rộ như là vườn hoa tháng 5 rồi.
Cuộc du hành mới được 1% thôi, hãy cứ theo dõi và học hỏi nhé.</p>

<!-- more -->


<h4><strong>Tổng quát</strong></h4>

<ol>
<li><p>Sản phẩm có thành công vì nó giải quyết được vấn đề cho mọi người. Nghe thì rất căn bản, nhưng mà là thứ quan trọng duy nhất cần phải được hiểu để có thể xây dựng được sản phẩm chất lượng.</p></li>
<li><p>Bước đầu tiên khi làm cái gì đó mới là bạn phải hiểu được vấn đề cần phải giải quyết và giải quyết cho ai. Điều này khá rõ ràng và cần được làm rõ trước khi bạn nghĩ tới giải pháp nào.</p></li>
<li><p>Hãy tự hỏi bản thân &ldquo;Tại sao vấn đề này đáng được giải quyết?&rdquo;.</p></li>
<li><p>Nếu đối tượng bạn nhắm tới là 1 nhóm nhỏ xác định nào đó (bạn có thể nằm trong nhóm này), thì bạn có thể dựa vào trực giác của mình để tự đưa ra quyết định xây dựng sản phẩm nó như thế nào. Nếu không, thì bạn phải dựa vào các dữ liệu đã nghiên cứu để tạo quyết định cho mình.</p></li>
<li><p>Nếu bạn là người sáng lập (start-up founder), thì con đường sẽ dễ dàng hơn nếu bạn đi theo hướng giải quyết vấn đề cho một nhóm đối tượng khách hàng nào đó, sau đó sẽ mở rộng đối tượng khách hàng sau khi đã có một vài kết quả ban đầu.</p></li>
<li><p>Cái vấn đề mà bạn đang muốn giải quyết cần phải dễ dàng trao đổi, giao tiếp trong 1 vài câu ngắn gọn và được ủng hộ từ một ai đó trong nhóm đối tượng khách hàng của bạn, nếu không thì hãy cho nó là cái vấn đề nguy hiểm cần được quan tâm (<a href="http://www.urbandictionary.com/define.php?term=red%20flag">red flag</a>).</p></li>
</ol>


<h4><strong>Thực hiện</strong></h4>

<ol>
<li><p>Thực hiện tốt là có 1 cái kết luận đáng tin trong thời gian ngắn nhất có thể.</p></li>
<li><p>Thực hiện không tốt là khi bạn thử làm cái gì đó, nó thất bại và:</p>

<ol>
<li><p>Bạn không rút ra được bài học nào để có thể áp dụng vào các dự án tương lai (vì bạn không biết tại sao nó thất bại)</p></li>
<li><p>Bạn mất 1 năm để học được 1 bài học nào đó trong khi con đường thông minh hơn chỉ mất bạn 3 tháng.</p></li>
</ol>
</li>
<li><p>Vấn đề chủ yếu phân cách giữa 1 đội thành công và không thành công là không phải họ làm những việc có thất bại hay không (chuyện tất yếu sẽ xảy ra), mà là họ thực hiện nó kiên định như thế nào.</p></li>
<li><p>Khi truy tìm giải pháp cho 1 vấn đề nào đó, hãy đào rộng trước khi đào sâu. Thu thập ý kiến (Brainstorm) để tìm ra 10, 20, 50 giải pháp cho cái vấn đề đó trước khi chọn giải pháp tốt nhất. 5 ý tưởng đầu tiên sẽ là cái tất nhiên, sáng tạo sẽ xảy ra khi bạn đào sâu hơn vào ý tưởng 11, 20 hay 50.</p></li>
<li><p>Nếu bạn đang thuyết trình 1 bản kế hoạch sản phẩm và ai đó có hỏi &ldquo;Bạn có bao giờ thử giải pháp X thay cho cái này chưa?&rdquo; và câu trả lời của bạn là “Không&#8221; thì đó chính là cái dấu hiệu nguy hiểm <a href="http://www.urbandictionary.com/define.php?term=red%20flag">red flag</a> của quá trình khai thác ý tưởng và nó chưa đủ nghiêm ngặt.</p></li>
<li><p>Sử dụng kinh nghiệm đã trải qua để giúp bạn thu hẹp các ý tưởng tốt nhất. (Ví dụ như lựa chọn N ý tưởng của các thành viên trong nhóm, rồi phác thảo nó ra và cho mọi người xem rồi xem phản ứng của họ).</p></li>
<li><p>Khi bạn đã tìm được một giải pháp hãy đặt giả thuyết và tự hỏi điều gì sẽ xảy ra nếu bạn xây dựng theo cách như thế này? (ví dụ: &ldquo;Vấn đề mà chúng ta muốn xử lý đó là đảm bảo mọi công dân của thành phố biết được mỗi tuần sẽ có sự kiện nào đó xảy ra. Vậy thì giả thuyết sẽ là: chúng ta có thể thông báo cho X% công dân thông qua e-mail&rdquo;).</p></li>
<li><p>Bạn phải tìm được cách để rút ngắn công việc rà soát các giả thuyết của mình. Bạn có thể thực hiện nó với một ai đó bất kỳ và xem liệu họ có thể hiểu mình đang nói gì? Bạn có thể thu thập ý kiến khách hàng và xem có đủ lượng người có hứng thú với ý tưởng của mình hay không? Bạn có thể làm nhanh 1 sản phẩm để minh hoạ và sẽ cho bạn 1 kết quả rõ ràng cho dù nó chưa hoàn thiện?</p></li>
<li><p>Một khi bạn đã tìm được 1 giả thuyết hợp lý và rõ ràng, đừng cứ phải thử nghiệm nó ngay và luôn (vì có thể bạn tìm được 1 cách nào đó nhanh hơn), thay vào đó, hãy phân tách, hãy rà soát xem sản phẩm sẽ như thế nào khi nó được trau chuốt và thêm những tính năng mới, kiểm thử trường hợp khác nhau mà sản phẩm cần phải đạt được.</p></li>
<li><p>Nếu dự án bạn đang làm nó lớn và có rất nhiều sự thay đổi khác nhau, hãy xem mình có thể chia nó ra nhiều cột mốc nhỏ và độc lập và có thể kiểm thử được. Đừng để mình rơi vào trường hợp khi mà bạn thực hiện 5 thay đổi và có một phần thay đổi gây ra sản phẩm bị lỗi, khi đó bạn không thể biết lỗi bị gây ra bởi phần nào.</p></li>
<li><p>Tuỳ sản phẩm mà hãy xem xét và nhìn lại chúng, dù là thất bại hay thành công. Từ sản phẩm đó học được bài học gì? Đồng đội có học được gì hay không? Tương lai bạn có cần làm gì khác hơn? Sau đó hãy chia sẻ với tất cả người khác.</p></li>
</ol>


<h4><strong>Đo lường thành quả</strong></h4>

<ol>
<li><p>Làm thế nào để đo lường được thành công đối với kết quả lâu dài là điều rất quan trọng vì đó là cái mà mọi người mong đợi. Hãy chắc chắn thực hiện điều này vào đúng thời điểm (thậm chí còn quan trọng hơn cả việc bạn nghĩ &ldquo;Làm sao để làm được việc này?&rdquo;).</p></li>
<li><p>Hãy xác định các số liệu được cho là thành công cho sản phẩm trước khi chúng được tung ra. Nếu không, sau khi đã có kết quả sản phẩm và bạn cố gắng giải thích các kết quả đó sẽ làm cho việc đánh giá thành công của sản phẩm không còn khách quan nữa.</p></li>
<li><p>Với mỗi số liệu đạt được, hãy tạo ra 1 số liệu đối nghịch nào đó mà dựa vào đó có thể cho thấy sự việc này không phải là ngẫu nhiên mà ra (Ví dụ: Sản phẩm bán ra nhiều hơn là do chất lượng của sản phẩm đó tốt hơn)</p></li>
<li><p>Nếu có số liệu nào đó thay đổi đột ngột, dù tốt hay xấu, hãy đặt câu hỏi &ldquo;Tại sao?&rdquo; trước khi lập kế hoạch để thúc đẩy hay giảm thiểu kết quả đó khi bạn chưa hiểu vì sao nó lại như thế.</p></li>
<li><p>Hãy sử dụng công nghệ quả bóng thủy tinh (Crystal Ball) &ndash; phần mềm phân tích rủi ro để lựa chọn các cách đánh giá đúng sự thành công của sản phẩm. Hãy tự hỏi mình &ldquo;Nếu tôi có thể biết được tất cả về việc mọi người sử dụng sản phẩm của tôi ra sao, thì tôi muốn biết những gì về nó mà có thể biết được nó thành công hay không?&rdquo; Dựa vào câu trả lời đó rồi nhìn lại các số liệu thống kê gần với câu trả lời đó nhất.</p></li>
<li><p>Mục tiêu luôn luôn phải đi đôi với thông tin bạn tin tưởng nhất. Nếu bạn đang làm việc để đạt được 1 mục tiêu đã xác định nào đó, và rồi trong quá trình làm phát hiện những thông tin mới mẻ khiến bạn thay đổi cách suy nghĩ, hãy tự hỏi mình có nên điều chỉnh mục tiêu của mình hay không dựa trên luồng thông tin mới này.</p></li>
<li><p>Nếu bạn làm việc trong 1 đội nhóm nào đó nhưng mà bạn không đồng ý hay không hiểu gì về các đo lường thành quả của đội mình, hãy lên tiếng ngay và luôn, sớm còn hơn muộn khi mà mọi việc đã đâu vào đó.</p></li>
<li><p>Nếu bạn hay dính vào việc tranh cãi với các thành viên trong đội nhóm của mình về việc hướng đi cho sản phẩm, có thể lý do chính là do sự không hợp ý, không đồng tình về sự đo lường thành quả của nhau, hãy lên tiếng dựa trên 1 sự đề nghị nào đó hợp lý hơn.</p></li>
<li><p>Nếu bạn đang cố để tìm ra liệu sản phẩm của mình có hợp với thị trường hay không (so với việc cố gắng tối ưu hóa hoặc mở rộng), có lẽ bạn nên đặt mục tiêu vào việc giữ lại khách hàng, tự đặt câu hỏi &ldquo;có bao nhiêu người sử dụng sản phẩm của mình và thấy đủ tốt và quay lại dùng tiếp?&rdquo; thay vì hỏi rằng có bao nhiêu khách hàng.</p></li>
</ol>


<h4><strong>Đội nhóm cơ động</strong></h4>

<ol>
<li><p>Đừng nghĩ về vai trò của bạn (bạn là designer thì cần làm gì? bạn là kĩ sư thì cần làm gì?) mà hãy nghĩ rằng &ldquo;Tôi có thể làm gì tốt nhất để có thể giúp đội của mình thành công?&rdquo;</p></li>
<li><p>Các team ưu tiên tìm hiểu, giải quyết vấn đề có khả năng thành công cao hơn so với các team ưu tiên vào giải pháp. Bởi vì vấn đề cần giải quyết có tạo động lực, còn giải pháp thì có sẵn.</p></li>
<li><p>Cuối cùng thì mọi người luôn có 1 ý tưởng giống nhau đó là xây dựng 1 cái gì đó tuyệt vời.</p></li>
<li><p>Biết người biết ta, biết mình giỏi về cái gì, biết đồng đội giỏi về cái gì, rồi phân chia trách nhiệm cho mỗi người.</p></li>
<li><p>Một team tốt và tồn tại lâu dài cần phải giao tiếp tốt, mỗi thành viên cần phải cảm thấy rằng họ có thể thể hiện cảm nghĩ, sự nhìn nhận của mình, cho dù nó có hơi trái ngược, nhiều luồng ý kiến đa dạng là cách để đạt được kết quả tốt nhất. Cho nên đừng sợ hãi thể hiện ý kiến của mình, đừng sợ hãi lặp đi lặp lại ý kiến đó nếu những người khác chưa hiểu bạn muốn gì, hãy khuyến khích và cố gắng để đồng đội cảm thấy làm điều đó là an toàn.</p></li>
</ol>


<p>Bài dịch từ: <a href="https://medium.com/the-year-of-the-looking-glass/building-products-91aa93bea4bb#.kd7eag413">Building Products</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[teracy-dev vision]]></title>
    <link href="http://blog.teracy.com/2016/08/19/teracy-dev-vision/"/>
    <updated>2016-08-19T16:27:00+00:00</updated>
    <id>http://blog.teracy.com/2016/08/19/teracy-dev-vision</id>
    <content type="html"><![CDATA[<p>teracy-dev has been being developed and in use from the first days of Teracy, it&rsquo;s been
about 3 years<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> now. We&rsquo;re in a hurry for a really big, exciting release for the next version of
teracy-dev. I&rsquo;d like to take this chance to share with you about teracy-dev vision first and many
other new features and improvements for the next long awaiting teracy-dev release.</p>

<!-- more -->


<p>Let&rsquo;s get started with a story about my first working days as a developer when joining my first
company 8 years ago. As developers, it&rsquo;s expected that we should have our development environment
ready before starting coding. At that time, my company used Maven to build Java projects and I was
required to install it. However, as a junior, I had difficulties to install it on the Ubuntu
computer provided to me. I struggled with it for nearly a day and eventually I had to ask for
help to install it successfully. This is a true story. Now I can even install it in just some
minutes with a few lines of commands because I have more experience.</p>

<p>Now just imagine what if juniors don&rsquo;t have to set up these boring tools each by each but just enjoy
coding, that&rsquo;s the more fun part. What if all developers should have the same development environment
even they use different kinds of operating systems so that we don&rsquo;t have to deal with the very common
problem: &ldquo;But it works on my machine&rdquo;. What if the production environment is easily set up exactly
the same on a developer machine to debug and fix things and vice versa?</p>

<p>These what ifs lead us to use <code>vagrant</code> as the base to complete these things as the first days of
Teracy journey. We&rsquo;d like to upgrade the vagrant dev environment easily, for example, <code>$ git pull</code>
then <code>$ vagrant reload --provision</code> and you&rsquo;re done. We have default configuration and we could
override it easily. We&rsquo;d like to use this development environment for all our projects: from our
internal projects to our clients&#8217; projects.</p>

<p>We created teracy-dev to solve the mentioned problems above, help boost our productivity and it could
even help us more than that. Everyone just enjoys it, we don&rsquo;t have to deal with installing things
manually, it&rsquo;s auto provided with just one command (<code>$ vagrant up</code>) thanks to the provision software.
We&rsquo;re using Chef to provision but we can use others to provision, too, for example Ansible, Puppet, etc.</p>

<p>We see that teracy-dev is so useful for developers, so we&rsquo;d like to share it, shape its future
together with anyone who wants to work with software. And we envision teracy-dev with the following
statement:</p>

<blockquote><p>teracy-dev is the best universal development tool for everyone.</p></blockquote>


<p>That&rsquo;s our vision for teracy-dev as the base development platform and we&rsquo;re going to make it true.
Note that it should be used for everyone, even with our QA engineers, with our manual testers, with
our employees, with our users as long as they follow exactly a little setup instruction guide.</p>

<p>I believe that everyone should use it as much as we enjoy using and developing it. It&rsquo;s been saving
us and our clients a lot of money as we don&rsquo;t have to spend the time to set up development environment
for each and every project manually.</p>

<p>We improve it day by day though our projects, we listen to our developers, our clients for feedback
on usage and development. However, we still have some problems with it. For example, on Windows, the
file sharing system is really slow. It&rsquo;s not really lightweight and modular enough to serve every
project&rsquo;s needs.</p>

<p>We know all these problems and we&rsquo;re going to fix these all with the next version by leveraging
Docker and Rsync. We intended to use Docker for long, we expected it should be in use since
teracy-dev v0.4.0 but we failed to make it. Now we promise you that teracy-dev v0.5.0 will leverage
Docker as the core workflow and it will rule the world of developers.</p>

<p>We will add more documentation for usage, accelerate the development pace so that you should benefit
from it as we do. Let&rsquo;s try using it once with
<a href="http://dev.teracy.org/docs/0.4.2/getting_started.html">teracy-dev v0.4.2</a>, it&rsquo;s open source and
totally free. You will love it as we do now for 3 years and counting. Let&rsquo;s together make it better
and better and better.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://blog.teracy.com/tags/teracy-dev/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Khi kỹ sư trở thành quản lý: Làm thế nào để trở thành lãnh đạo kỹ thuật giỏi]]></title>
    <link href="http://blog.teracy.com/2016/08/08/khi-ky-su-tro-thanh-quan-ly-lam-the-nao-de-tro-thanh-lanh-dao-ky-thuat-gioi/"/>
    <updated>2016-08-08T08:28:00+00:00</updated>
    <id>http://blog.teracy.com/2016/08/08/khi-ky-su-tro-thanh-quan-ly-lam-the-nao-de-tro-thanh-lanh-dao-ky-thuat-gioi</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/08/08/meeting-930x548.jpg" title="Leadership Meeting" ></p>

<p style="text-align:center;"> <em>Ảnh Từ Rawpixel.com/Shutterstock</em></p>

<p>Các quản lý kỹ thuật thường được thăng chức làm lãnh đạo dựa vào sự đánh giá, xếp hạng tốt. Đây được
coi là phương án thực tế vì các quyết định kinh doanh giờ đây ngày càng phụ thuộc nhiều vào yếu tố
công nghệ nền tảng. Các lãnh đạo công nghệ cần phải đánh giá các lựa chọn kỹ thuật, đưa ra những
khuyến nghị phù hợp với các yêu cầu kinh doanh và phải trao đổi, làm rõ các quyết định đó với những
người liên quan không phải là dân kỹ thuật. Nếu các quản lý công nghệ không hiểu công nghệ thật chắc
thì rất khó để đưa ra những quyết định đúng đắn.</p>

<p>Có một thách thức lớn là một kỹ sư giỏi không phải tự nhiên trở thành một lãnh đạo giỏi. Khả năng
lãnh đạo bất kỳ ai ở cương vị nào không phải tự nhiên mà có. Lãnh đạo là kỹ năng phải được rèn luyện
suốt cuộc đời.</p>

<!-- more -->


<p>Để giúp các quản lý kỹ thuật mới chuyển đổi từ vai trò nhân viên thành lãnh đạo, tôi thường làm việc
với họ để phát triển một loạt các kỹ năng không liên quan gì đến kỹ thuật. Mặc dù không ai giống ai,
tôi nhận thấy rằng các nguyên lý được vạch ra sau đây là nền tảng tốt cho những ai muốn trở thành một
lãnh đạo công nghệ <em>hiệu quả</em> &ndash; một người có thể dẫn dắt đồng đội, triển khai thay đổi và liên tục
gặt hái được nhiều thành công.</p>

<h2>1. Vận dụng tư duy hướng kinh doanh và biết cảm thông</h2>

<p>Khi còn là nhân viên, bạn xem xét công nghệ với con mắt thuần tuý của kỹ sư thì chấp nhận được. Bạn
có nhiều thời gian để tập trung vào việc &ldquo;làm thế nào&rdquo; và không cần phải tập trung cho câu hỏi &ldquo;tại
sao&rdquo;. Điều này có nghĩa là khi còn là nhân viên, bạn thoải mái lựa chọn công nghệ mà không phải tính
đến sự ảnh hưởng của nó tới kinh doanh mà để cho cấp lãnh đạo tính các phương án khả thi thực tế. Tuy
nhiên, khi bạn trở thành lãnh đạo, bạn không còn được xa xỉ như vậy nữa. Vì giờ bạn đã là quản lý,
bạn phải đưa ra quyết định dựa trên những thực tế phức tạp ở thương trường, ví dụ như các ràng buộc
tài chính, văn hoá của tổ chức, chính trị nơi công sở, nhược điểm của con người và các ràng buộc kết
quả kinh doanh.</p>

<p>Các nhà quản lý mới thường mắc sai lầm khi đưa ra các luận cứ cho những khởi xướng của mình dựa trên
các điều kiện kỹ thuật chứ không phải điều kiện kinh doanh, và họ cảm thấy tuyệt vọng khi không nhận
được các hỗ trợ đúng đắn, kịp thời. Họ kỳ vọng doanh nghiệp hiểu rõ khởi xướng của mình trên quan
điểm kỹ thuật nhưng cuối cùng nhận ra rằng việc của họ là phải đặt các khuyến nghị của mình trên quan
điểm kinh doanh.</p>

<p>Cách tốt nhất để khắc phục sai lầm này là dành thời gian tìm hiểu các chỉ số kinh doanh mà doanh
nghiệp quan tâm nhất và hiểu được những khó khăn gây ra cho những phòng ban khác. Để làm được điều
này cần sự cảm thông &ndash; một kỹ năng không thể thiếu của một lãnh đạo hiệu quả. Các quản lý công nghệ
nên trao đổi với các đồng nghiệp và lắng nghe các khó khăn, thách thức từ họ. Các quản lý cũng nên
hiểu rõ các chỉ số kinh doanh chính và biết được những yếu tố nào thúc đẩy các chỉ số này. Họ cần
phải vận dụng đến các kỹ năng phân tích, kỹ năng định lượng mà họ có khi còn là kỹ sư thuần tuý và
áp dụng những kỹ năng này cho các vấn đề quản lý. Một khi họ làm được điều này, họ sẽ trở thành lãnh
đạo kinh doanh thay vì đơn thuần chỉ là dân công nghệ, và họ có thể bắt đầu những cuộc trao đổi sâu
sắc để xây dựng, phát triển doanh nghiệp.</p>

<h2>2. Vận dụng tư duy hướng giải pháp</h2>

<p>Một khía cạnh khác của khả năng lãnh đạo mà các quản lý mới thường gặp khó khăn là làm sao để hiểu
cách tiếp cận các vấn đề nằm ngoài sự kiểm soát trực tiếp của mình. Các thay đổi trong tầm ảnh hưởng
trực tiếp của quản lý có thể triển khai được ngay. Ví dụ, nếu một quản lý đảm bảo chất lượng (QA<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>)
muốn sử dụng thêm Cucumber vào chạy kiểm thử tự động để khuyến khích phương pháp phát triển hướng
hành vi (BDD<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>), thì người đó không cần phải lên lịch họp hành với các phòng ban khác để thực hiện
việc này. Nhưng nếu một quản lý kỹ thuật muốn thay đổi cách quản lý dự án từ phương pháp Waterfall
sang phương pháp Agile thì người đó sẽ cần rất nhiều thời gian làm việc với nhiều người nằm ngoài
phòng ban của mình vì đây là thay đổi tổ chức rất lớn.</p>

<p>Khi phải đối mặt với những vấn đề nằm ngoài tầm kiểm soát trực tiếp, những nhà quản lý mới thường
đầu hàng quá sớm và đưa ra kết luận quá vội vàng: &ldquo;Tôi đã gửi email tới Tom trong nhóm Quản lý chương
trình về việc áp dụng Scrum cho dự án tới, nhưng anh ta chẳng trả lời tôi. Rõ ràng là tổ chức ta chưa
sẵn sàng để áp dụng phương pháp Agile.&rdquo; Trong những tình huống như vậy, khi các quản lý mới hấp tấp
đưa ra kết luận của mình, thì chính họ đang trao vấn đề đó tới cấp quản lý cao hơn thay vì tự mình
xử lý vấn đề. Điều này chỉ có thể chấp nhận được khi bạn còn là nhân viên bình thường chứ không thể
chấp nhận được khi bạn đã là lãnh đạo.</p>

<p>Là lãnh đạo, bạn cần có khả năng vượt qua các chướng ngại nằm ngoài tầm kiểm soát trực tiếp của mình.
Điều này có nghĩa là bạn cần thuyết phục các quản lý của phòng ban khác đồng ý áp dụng quy trình mới
theo đề xuất của bạn. Hoặc nếu bạn thuộc cấp điều hành thì bạn cần phải tự giải quyết các vấn đề nằm
xa ngoài tầm kiểm soát của mình, ví dụ như đưa ra bản kế hoạch để tăng doanh thu trong thời kì suy
thoái kinh tế. Chìa khoá để dẫn tới thành công là vận dụng tư duy hướng giải pháp.</p>

<p>Tư duy hướng giải pháp là cách nhìn tập trung vào mục tiêu hơn là vấn đề. Khi bạn phát triển tư duy
hướng giải pháp, bạn tập trung công sức của mình để giành được kết quả mong muốn và bạn không phung
phí thời gian để phàn nàn về những rào cản bạn gặp phải &ndash; bạn chỉ cần tìm cách vượt qua chúng. Quản
lý của bạn khi đó sẽ trở thành bạn đường để giúp bạn giành được mục tiêu chứ không phải là người
giải quyết các vấn đề hộ bạn. Một lãnh đạo có tư duy hướng giải pháp đưa ra các giải pháp tiềm năng
khi cần tham vấn lãnh đạo của mình, và người đó tận dụng kỹ năng chuyên môn cũng như tầm ảnh hưởng
của mình trong tổ chức để theo đuổi và hoành thành mục đích của mình.</p>

<h2>3. Xây dựng kết nối và lấy được niềm tin từ mọi người</h2>

<p>Các công ty cần thiết phải phân chia nhân viên của mình vào các phòng ban theo cấu trúc phân cấp để
dễ bề quản lý. Tuy nhiên thực tế cho thấy nhiều công ty phân chia khá tuỳ tiện. Các phòng ban tồn
tại đơn giản chỉ là để giúp quản lý kinh doanh mà thôi. Có một thách thức là hầu hết các vấn đề kinh
doanh cần sự quan tâm lớn lại hầu như không giải quyết tốt được trong các ranh giới được tổ chức lỏng
lẻo mà chúng ta đã định ra &ndash; mà các vấn đề này nằm rải rác toàn bộ các phòng ban. Do đó, các lãnh đạo
công nghệ hiệu quả cần thật tinh tường khi làm việc với nhiều phòng ban để triển khai thay đổi, và để
làm được điều này cần sự kết nối chặt chẽ.</p>

<p>Thuật ngữ &ldquo;kết nối&rdquo; gây ra nỗi sợ hãi cho không ít người &ndash; đặc biệt với dân công nghệ. Nhưng xây dựng
kết nối của những đồng nghiệp tâm đầu ý hợp không có nghĩa là bạn phải có những cuộc hội thoại gượng
ép ở giờ nghỉ hoặc phải liên tục trao đổi danh thiếp. Ngược lại, cách tốt nhất để xây dựng kết nối
chỉ đơn giản hãy là chính mình. Tạo được niềm tin là rất cần thiết khi xây dựng các mối quan hệ, và
một trong những cách để làm việc này là hãy thẳng thắn và chân thành.</p>

<p>Có một cách hiệu quả để tạo lập các mối quan hệ đó là không chỉ tập trung cho công việc của mình mà
hãy đi giúp đỡ những người khác trong tổ chức của mình. Tình nguyện giúp ai đó với những khởi xướng
của họ, hay là cố gắng hết sức mình giúp đỡ ai đó khi họ cần. Điều này giúp bạn có cơ hội tương tác
với những người nằm ngoài phòng ban của mình và nó sẽ giúp xây dựng niềm tin.</p>

<p>Cũng đừng quên tham dự các sự kiện giao lưu của công ty và xem đây là cơ hội để gặp gỡ những người
ngoài phòng ban của mình. Bạn không cần phải là người đi giao lưu với cái cách nói chuyện dẻo quẹo,
ngon ngọt của dân tiếp thị ở những sự kiện này mà chỉ cần thử thách bản thân gặp một người mới mỗi
lần là được. (Và cũng đừng sợ sệt khi giới thiệu mình với những người cấp cao hơn &ndash; họ cũng chỉ là
những con người bình thường như bạn thôi). Thậm chí nếu bạn không biết nói gì khi giao lưu công ty
thì hãy thân thiện với một đồng nghiệp ở sự kiện đó, điều này sẽ giúp bạn tiếp cận họ dễ hơn trong
tương lai.</p>

<p>Khi bạn bắt đầu xây dựng kết nối trong công ty, bạn sẽ thấy mạng lưới kết nối này cho bạn nhiều sức
mạnh hơn. Khi bạn biết cần gọi cho ai để xử lý được công việc, họ biết bạn và tôn trọng bạn, khi đó
bạn &ldquo;dời non lấp biển&rdquo; cũng được. Những khởi xướng liên quan nhiều phòng ban trở thành cơ hội tốt để
được kết nối với các đồng nghiệp và giúp giải quyết được nhiều vấn đề lớn. Các thay đổi diễn ra thuận
lợi hơn bởi vì bạn đã thiết lập được niềm tin và có thể nhanh chóng xử lý vấn đề luôn. Và khi đó nhu
cầu tham vấn tới lãnh đạo của bạn sẽ giảm đi bởi vì bạn không cần phải nhờ họ giúp mỗi khi bạn cần
làm việc với những người thuộc phòng ban khác.</p>

<h2>4. Hiểu rằng mỗi người có những nhận thức khác nhau về mình</h2>

<p>Khi bước đầu phát triển sự nghiệp, các kỹ sư chỉ tập trung củng cố và phát triển các kỹ năng kỹ
thuật. Chúng ta được thăng tiến dựa trên các nhiệm vụ hữu hình và đo đếm được, ví dụ như học một
ngôn ngữ lập trình mới hay làm chủ một công nghệ mới. Tuy nhiên một khi chúng ta chuyển sang làm
quản lý, mọi thứ thay đổi hoàn toàn. Khi làm quản lý, thành công của chúng ta dựa trên phần lớn các
đặc điểm vô hình, trừu tượng như kỹ năng làm việc nhóm, khả năng lãnh đạo và giao tiếp. Những kỹ
năng này có đặc tính chủ quan, có nghĩa là sự tiến bộ của chúng ta khó cân đong đo đếm, mà phụ thuộc
vào nhận thức của người khác về những cố gắng của mình. Đây là quả đắng mà hầu hết các quản lý kỹ
thuật mới phải chấp nhận.</p>

<p>Điều này có vẻ không công bằng, nhưng đây là cách thế giới vận hành. Khi nói đến khả năng lãnh đạo
thì hiệu quả làm việc của bạn chủ yếu dựa vào nhận xét của các quản lý, của thành viên nhóm và các
đồng nghiệp cho dù mục đích soạn thảo email, làm bài thuyết trình hay đưa ra các bình luận trong
cuộc họp của bạn là gì đi nữa. Mọi người xung quanh đánh giá bạn thông qua từng hành động nhỏ nhất
của bạn khi giao tiếp và họ có những kết luận riêng về những gì bạn nói. Họ cũng tiếp nhận thông tin
về bạn từ người thứ ba, có nghĩa là dựa trên những đánh giá của người khác về những hành động của bạn.</p>

<p>Các lãnh đạo thành công hiểu rằng mỗi người có những nhận thức khác nhau về mình, và họ không phung
phí thời gian để phàn nàn về điều này. Thay vào đó, họ chủ động và làm thật rõ vấn đề khi giao tiếp
và họ cố gắng gấp đôi khi mọi người nhận thức không đúng về các hành động của họ. Đây là lý do vì sao
tôi làm việc với các kỹ năng giao tiếp với mọi quản lý khi báo cáo cho tôi. Chúng tôi thường phân
tích email và trao đổi trực tiếp thêm ở cấp thấp nhất bởi vì từng hành động nhỏ trong giao tiếp đều
hết sức quan trọng. Những điều đơn giản như ngôn ngữ cơ thể, cách ăn mặc, và giọng điệu là những nhân
tố cực kỳ quan trọng để mọi người có cái nhìn đúng hơn về bạn. Và đây là điều rất khó để mọi người
tự đánh giá bản thân mình trong những vấn đề này.</p>

<h2>5. Tiếp nhận tư duy hướng vận hành</h2>

<p>Khả năng thực hiện thay đổi để hoạt động lâu dài là một thành phần chủ chốt của lãnh đạo hiệu quả.
Thật không may, hầu hết các quản lý mới tập trung quá nhiều vào việc triển khai các khởi xướng ban
đầu của mình mà không xem xét làm thế nào để hỗ trợ chương trình đó lâu dài. Xây dựng tư duy hướng
vận hành giúp bạn vượt qua lỗi này. Tư duy hướng vận hành là quan điểm xem xét các nhiệm vụ tiếp theo
cần thực hiện để hỗ trợ toàn bộ vòng đời của một chương trình.</p>

<p>Theo lẽ tự nhiên, các quản lý mới thường rất hào hứng ở giai đoạn đầu khi triển khai khởi xướng mới.
Đây là khoảng thời gian tràn đầy nhiệt thành khi họ tập trung đưa khởi xướng của mình vào áp dụng
thực tế bằng cách viết tài liệu mô tả ý tưởng, nâng cao hỗ trợ và triển khai các công cụ công nghệ
liên quan. Đây là việc rất đáng khen vì nó đòi hỏi sự cố gắng cực kỳ lớn, tuy nhiên đây mới chỉ là
khởi đầu. Giai đoạn tiếp theo được biết đến là giai đoạn &ldquo;thung lũng của sự tuyệt vọng&rdquo; khi mọi thứ
vượt quá tầm kiểm soát. Luồng công việc có vẻ hoàn hảo trên bàn giấy lại không hoạt động tốt ngoài
thực tế. Các thủ tục mới bị bỏ qua và mọi người bắt đầu chê bai các công cụ công nghệ mới. Và điều
tồi tệ nhất là mọi người bắt đầu không còn tin tưởng vào bản thân khởi xướng này nữa.</p>

<p>Đây là giai đoạn khó khăn cho các nhà quản lý mới. Họ thường phản ứng bằng cách giơ tay đầu hàng và
đổ lỗi cho tổ chức: &ldquo;Rõ ràng công ty chưa sẵn sàng để thay đổi.&rdquo; Ngược lại, những nhà quản lý kinh
nghiệm xem đây là giai đoạn bình thường &ndash; một phần tự nhiên của quá trình chuyển đổi tuân theo quy
luật đường cong thay đổi. Họ biết rằng nếu họ tiếp tục kiên quyết theo đuổi mục tiêu đề ra, họ có
thể xuyên thủng &ldquo;thung lũng của sự tuyệt vọng&rdquo; để thấy được những khởi xướng của mình đâm chồi ở
phía bên kia thung lũng. Tư duy hướng vận hành giúp các nhà quản lý củng cố những khởi xướng khi giai
đoạn hào hứng ban đầu mờ nhạt dần bằng cách tập trung vào các hỗ trợ lâu dài bao gồm:</p>

<ul>
<li><p>Tiếp nhận (Adoption): Gây dựng sự cảm thông từ người dùng cuối và phát triển các chiến lược để
giúp họ dễ dàng tiếp nhận các quy trình và công cụ mới.</p></li>
<li><p>Mở rộng (Scalability): Xác định các nút thắt cổ chai trong các thủ tục có thể gây cho chương trình
không còn hoạt động khi áp dụng cho nhóm lớn hơn.</p></li>
<li><p>Dư thừa (Redundancy): Đào tạo nhiều người cùng đảm nhận các vị trí chủ chốt để chẳng may nếu một
ai đó đi nghỉ dưỡng hoặc nghỉ việc thì các khởi xướng vẫn vận hành bình thường.</p></li>
<li><p>Đào tạo (Traning): Triển khai đào tạo để dạy mọi người về những khởi xướng mới.</p></li>
<li><p>Hỗ trợ liên tục (Ongoing support): Tạo lập thủ tục cho mọi người sử dụng khi họ có câu hỏi hay gặp
vấn đề gì. Thiết lập luồng hỗ trợ là đặc biệt cần thiết trong giai đoạn hai của đường cong thay đổi.</p></li>
</ul>


<h2>6. Đọc sách về cách quản lý</h2>

<p>Vì xuất phát từ nền tảng kỹ thuật, chúng ta dành rất nhiều thời gian để đọc các tài liệu kỹ thuật.
Có cảm giác chúng ta dành hầu hết cuộc đời mình đọc sách, blog, bài nghiên cứu, các hướng dẫn trực
tuyến, các bài trên Stack Overflow và các cuộc trao đổi trên Hacker News. Đó là yêu cầu công việc và
là điều chúng ta vẫn nên duy trì khi làm quản lý. Tuy nhiên, để trở thành lãnh đạo công nghệ giỏi,
đọc tài liệu kỹ thuật là chưa đủ. Bạn còn phải động tới hàng đống thông tin ngoài kia về quản lý và
lãnh đạo.</p>

<p>Đây là danh sách các cuốn sách tôi khuyên đọc. Danh sách này không thể bao quát hết được mà được coi
là điểm khởi đầu cho công việc quản lý. Những cuốn sách này có ảnh hưởng lớn nhất tới tôi khi làm
quản lý.</p>

<ul>
<li><p>&ldquo;Good to Great&rdquo; bởi Jim Collins. Một cuốn sách vui và đầy cảm hứng nói về các phong cách lãnh đạo
dẫn dắt kết quả tài chính tốt và lâu dài.</p></li>
<li><p>&ldquo;First, Break All the Rules&rdquo; bởi Marcus Buckingham. Tranh luận rằng các quản lý thành công nhất
đều tập trung vào tận dụng sức mạnh của nhân viên thay vì ám ảnh về những điểm yếu không thay đổi
được.</p></li>
<li><p>&ldquo;Lean In&rdquo; bởi Sheryl Sandberg. Một cuốn sách đột phá bởi COO nổi tiếng của Facebook về lãnh đạo và
giới tính. Hơi chạnh lòng vì đây là một trong số những cuốn nổi tiếng ít ỏi được viết bởi phụ nữ.</p></li>
<li><p>&ldquo;The Lean Startup&rdquo; (Khởi nghiệp tinh gọn) bởi Eric Ries. Đề cập cách tiếp cận hoàn toàn khác về
quản lý sản phẩm bằng cách dựa trên sự học hỏi theo thời gian thực để quyết định ưu tiên các tính
năng. Bạn cũng đừng quên đọc blog của Eric Ries. Ries là dân kỹ thuật &ldquo;chuẩn men&rdquo; và cũng là doanh
nhân thực sự đột phá, điều này tạo nên các bài viết của anh rất sâu sắc và đọc thấy rất vui.</p></li>
<li><p>&ldquo;You&rsquo;re in Charge, Now What?&rdquo; bởi Thomas Neff và James Citrin. Một cuốn kinh điển đề cập đến chiến
lược gây dựng niềm tin và sự tự tin khi mới được đề bạt vào vị trí lãnh đạo. Phù hợp hoàn toàn cho
các quản lý mới.</p></li>
<li><p>&ldquo;Leading Change&rdquo; bởi John Kotter. Một cuốn kinh điển về cách triển khai thay đổi thành công trong
tổ chức.</p></li>
<li><p>&ldquo;The Truth About Leadership&rdquo; bởi James Kouzes và Barry Posner. Đây là cuốn sách xuất sắc dựa trên
nghiên cứu về các nguyên lý chung của lãnh đạo. Chúng tôi sử dụng cuốn này ở công ty làm nền tảng
cho chương trình đạo tạo quản lý.</p></li>
<li><p>&ldquo;The Five Dysfunction of a Team&rdquo; bởi Patrick Lencioni. Một cuốn kinh điển về động lực nhóm. Cuốn
sách khá ngắn gọn và thú vị.</p></li>
<li><p>&ldquo;The Phoenix Project&rdquo; bởi Gene Kim, Kevin Behr và George Spafford. Một cuốn sách phải đọc dành cho
những người làm DevOps (phát triển vận hành). Đây là cuốn sách viết theo dạng tiểu thuyết kinh doanh
về cách áp dụng các nguyên lý sản xuất tinh gọn cho vận hành IT.</p></li>
<li><p>&ldquo;Havard Business Review.&rdquo; HBR là tạp chí mà các nhà quản lý phải đọc. Nó luôn có các bài viết sâu
sắc dựa trên các nghiên cứu về một loạt các chủ đề rộng khắp trong kinh doanh. Nó khá đắt nhưng đáng
đồng tiền bát gạo.</p></li>
</ul>


<h2>7. Tiếp nhận thái độ tích cực</h2>

<p>Khi làm lãnh đạo, mọi người coi bạn là đại điện để cảm nhận về tổ chức dựa trên ý thức và cả tiềm
thức. Nếu bạn lạc quan và nhiệt thành thì những người quanh bạn sẽ có thể lạc quan và hạnh phúc.
Nếu bạn tiêu cực và bi quan, đồng đội của bạn có thể sẽ cọc cằn khó tính và chán nản. Khi làm lãnh
đạo dù bạn có thích hay không thì thái độ của bạn luôn có ảnh hưởng tới đồng đội và đồng nghiệp khá
lớn. Do đó, phải thật chú ý đến cách ăn ở và không ngừng có thái độ lạc quan.</p>

<p>Giờ điều quan trọng là phải phân biệt được ranh giới giữa lạc quan và lạc quan thái quá
(Pollyannaism). Bạn có thể cởi mở và thành thật &ndash; thậm chí trong những thời điểm khó khăn &ndash; mà vẫn
có thái độ tích cực về tương lai. Lạc quan không có nghĩa là phải cười gượng một cách giả tạo. Mà
điều đó có nghĩa là dù ở tình huống xấu đến đâu đi chăng nữa, bạn vẫn có niềm tin vào bản thân và
niềm tin sâu sắc vào sự hiệu quả trong khả năng lãnh đạo của mình. Bạn tin vào chính mình, bạn tin
rằng bạn có thể tạo ra tương lai tốt hơn. Đó chính là sự tự tin mà mọi người tôn trọng và hướng tới.</p>

<p>Lời khuyên của tôi xin gửi tới các lãnh đạo công nghệ là hãy biến đam mê công nghệ thành nguồn động
lực tích cực. Chúng ta đang sống trong thời khắc công nghệ phát triển như vũ bão. Các công cụ, khuôn
mẫu và áp dụng thực tế có sẵn ngày nay cho phép chúng ta làm được những việc phi thường mà cách đây
chỉ vài năm thôi chúng ta khó mà làm nổi. Là dân kỹ thuật, đam mê công nghệ có lẽ là động lực thúc
đẩy chúng ta tiến xa hơn trong sự nghiệp. Nếu chúng ta tìm được nguồn năng lượng đó và tiếp nhận các
nguyên lý về lãnh đạo được bàn luận ở đây, ai mà biết được chúng ta có thể làm được những điều phi
thường gì trong tương lai?</p>

<p>Bài viết của Jake Bennett &ndash; CTO<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> của POP, một công ty kỹ thuật số ở Seattle.</p>

<p>Bài dịch từ: <a href="http://venturebeat.com/2016/07/31/when-engineers-become-managers-how-to-be-a-great-technical-leader/">When engineers become managers: How to be a great technical leader</a></p>

<h2>Xem thêm</h2>

<ul>
<li><a href="http://www.socialsynergetics.com/site/managing-change">http://www.socialsynergetics.com/site/managing-change</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Quality Assurance: Đảm bảo chất lượng<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Behavior Driven Development: Phát triển hướng hành vi<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>Chief Technology Officer: Giám đốc công nghệ<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Những lỗi khi áp dụng mẫu thiết kế trải nghiệm người dùng (UX design patterns)]]></title>
    <link href="http://blog.teracy.com/2016/08/06/nhung-loi-khi-ap-dung-mau-thiet-ke-trai-nghiem-nguoi-dung-ux-design-patterns/"/>
    <updated>2016-08-06T04:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/08/06/nhung-loi-khi-ap-dung-mau-thiet-ke-trai-nghiem-nguoi-dung-ux-design-patterns</id>
    <content type="html"><![CDATA[<p>Nếu bạn là một nhà thiết kế có kinh nghiệm, bạn nên hiểu rằng trong  thiết kế giao diện người dùng <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> , việc lấy cảm hứng từ những sản phẩm của người khác không phải là ăn cắp ý tưởng mà là việc học hỏi những kinh nghiệm tốt nhất của những người đi trước, là sử dụng những mẫu thiết kế và làm theo các chỉ dẫn (guideline) nhằm đảm bảo sử dụng các kiểu mẫu quen thuộc và tạo nên các giao diện thực sự hữu ích cho người dùng.</p>

<p>Một số người nói rằng việc cứ bám theo các quy tắc cứng nhắc và bắt chước người khác thì sẽ giết chết sự sáng tạo và rồi cuối cùng mọi ứng dụng sẽ có thiết kế giống nhau. Theo quan điểm của người thiết kế UX (trải nghiệm người dùng) tôi lại thấy một vấn đề khác. Việc quen áp dụng các cách khuyên dùng tốt nhất có thể khiến bạn tin rằng Google/Facebook/Instagram hay các ứng dụng khác luôn đúng, mục tiêu thiết kế của họ cũng giống của bạn nên bạn sẽ không bao giờ tự hỏi “có gì sai ở đây?!”. Để chứng minh điều này dưới đây là một số mẫu thiết kế (hoặc đã từng) được coi là những mẫu thiết kế tốt nhất nhưng rút cuộc nó lại không thực sự tốt như bạn nghĩ.</p>

<!-- more -->


<h3>1. Ẩn menu điều hướng <sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></h3>

<p>Ít nhất cũng có đến nửa triệu bài báo chủ yếu được viết bởi các designer tranh cãi về menu dạng hamburger (☰) Nếu bạn đã bỏ lỡ chúng thì hãy đọc <a href="http://techcrunch.com/2014/05/24/before-the-hamburger-button-kills-you/">ở đây</a> và <a href="http://deep.design/the-hamburger-menu/">ở đây</a>. Các bài viết ấy thường không bàn cãi về việc sử dụng biểu tượng hamburger mà đó là về việc có nên ẩn các menu điều hướng và hiển thị nó khi người dùng nhấn vào biểu tượng hamburger.
Ban đầu thì việc ẩn hàng loạt menu điều hướng đằng sau nút hamburger này có vẻ như rất tiện lợi cho người thiết kế &ndash; bạn không phải lo lắng về việc màn hình bị chiếm diện tích bởi những menu cha con dài trên màn hình quá nhỏ của thiết bị di động, mọi thứ sẽ được ẩn một cách mặc định và chỉ hiện ra khi người dùng muốn.
Tuy nhiên các thực nghiệm lại chỉ ra rằng việc hiển thị menu điều hướng thường trực trên màn hình lại tăng khả năng tương tác giữa người dùng và ứng dụng, làm người dùng hài lòng hơn và thậm chí còn tăng doanh thu từ ứng dụng. Đó là lý do vì sao các ứng dụng lớn đang dần thay đồi bằng cách bỏ đi nút hamburger và quay lại hiển thị những tính năng hay được sử dụng ngay trên màn hình.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/youtube-nav-change.png" title="Menu điều hướng của Youtube" ></p>

<p style="text-align:center;"> Sự thay đổi menu điều hướng của Youtube &ndash; Luke Wroblewski</p>

<h3>2. Lạm dụng icon.</h3>

<p>Khi thiết kế trên màn hình nhỏ đôi lúc bạn quá lạm dụng việc thay thế các nhãn bằng các icon. Bạn có thể có nhiều lý do để dùng icon như chúng chiếm ít không gian hơn, bạn không phải lo lắng về việc màn hình bị xô lệch khi được dịch sang ngôn ngữ khác hay với ý nghĩ rằng người dùng đã rất quen với icon này rồi.</p>

<p>Với kiểu suy nghĩ như vậy các bảng thiết kế nhiều khi vô tình giấu đi các tính năng của chương trình đằng sau những icon khó hiểu hoặc đôi lúc mình cũng chẳng biết là cái gì nữa và dưới đây là một ví dụ:</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/instagram-bad-icon.png" title="Icon khó hiểu của Instagram" ></p>

<p style="text-align:center;"> Liệu bạn có đoán được icon này trong Instagram là để gửi tin nhắn không!</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/google-trans-bad-icon.png" title="Icon Khó hiểu trên Google Translate" ></p>

<p style="text-align:center;"> Hay icon này trong Google Translate dùng để làm gì?</p>

<p>Sẽ là sai lầm khi bạn nghĩ rằng người dùng đã quen với việc dùng những icon trừu tượng như thế này hay bá đạo hơn là nghĩ rằng họ sẽ tò mò mà bỏ thời gian ra tìm hiểu xem nó là cái gì.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/bloom-fm-bad-icon.png" title="Icon khó hiểu trong Bloom.fm" ></p>

<p style="text-align:center;"> Một số icon của Bloom.fm mà thật mình cũng chẳng hiểu nó dùng để làm gì!</p>

<p>Nếu bạn là người thiết kế một icon và bạn cảm thấy sản phẩm của mình cần nhãn để người khác có thể hiểu được thì sản phẩm của bạn thật sự có vấn đề, kể cả khi người dùng sẵn sàng thử để hiểu về nó.</p>

<p>Điều này không có nghĩa là bạn không nên dùng icon, thật sự thì có rất nhiều icon mà người dùng đã quen thuộc và phần lớn những chức năng quen thuộc của một ứng dụng đều đã có icon tương ứng ( tìm kiếm, phát video, email, cài đặt&hellip; ). Tuy vậy vẫn có nhiều icon khá là mơ hồ đối với người dùng vì mỗi ứng dụng sẽ có hành vi khác nhau một chút trên cùng một chức năng (ví dụ như sẽ có chuyện gì xảy ra nếu ta nhấn vào nút trái tim nhỉ (yêu thích, đánh dấu) ??? ).</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/another-example-heart.png" title="đôi lúc thật khó để biết icon quen thuộc thật sự sẽ làm gì" ></p>

<p>Với những tính năng không quen thuộc và phức tạp thì bạn nên sử dụng icon kèm theo nhãn đầy đủ, nhãn sẽ giúp tính năng của bạn rõ ràng hơn và icon sẽ giúp người dùng nhận dạng tính năng nhanh hơn và đem lại một chút cá tính cho ứng dụng của bạn.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/complicate-action-should-have-label.png"></p>

<p style="text-align:center;"> Một ví dụ trong ứng dụng Pixelmator.</p>

<h3>3. Chuyển hướng dựa vào cử chỉ <sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></h3>

<p>Khi Apple giới thiệu iPhone vào năm 2007, công nghệ cảm ứng đa điểm đã thu hút sự chú ý của ngưới dùng và họ thấy rằng không những có thể chạm và nhấn vào giao diện mà còn có thể phóng to, thu nhỏ và vuốt.</p>

<p>Tương tác dùng cảm ứng đã trở nên quen thuộc hơn với người thiết kế giao diện và đã có nhiều ứng dụng được thử nghiệm sử dụng nhận dạng cử chỉ đa điểm để tương tác.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/clear-app-gestures.jpg"></p>

<p style="text-align:center;"> Chuyển hướng dựa vào cử chỉ trong ứng dụng Clear.</p>

<p>Cũng giống như trường hợp giấu điều hướng và lạm dụng các icon thay vì dùng nhãn văn bản, đôi khi các nhà thiết kế cũng bị cuốn vào việc sử dụng cử chỉ để tiết kiệm không gian màn hình ( Một khi không có biểu tượng nào thể hiện việc bạn có thể vuốt sang trái để xóa thì người dùng chẳng có cách nào để biết là nó tồn tại ). Và cũng như vấn đề về hamburger menu, tính năng nào bị giấu đi thì sẽ ít người dùng nó. Thêm nữa là phần lớn nhận dạng cử chỉ chưa được chuẩn hóa trên các ứng dụng khác nhau, đơn cử là ứng dụng email nổi tiếng cũng hành xử khá là khác nhau đối với việc bạn vuốt sang phải trên mỗi email.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/apple-mail-gestures.png" title="vuốt sang phải trên Apple mail" ></p>

<p style="text-align:center;"> Với Apple mail vuốt sang phải sẽ hiện ra tùy chọn Đánh dấu chưa đọc.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/gmail-gestures.png" title="vuốt sang phải trên Gmail" ></p>

<p style="text-align:center;"> Trong khi đó với ứng dụng Gmail thì vuốt sang phải sẽ là chuyển email sang mục lưu trữ.</p>

<p>Vậy nên hãy nhớ rằng những tính năng sử dụng nhận dạng cử chỉ là tính năng ẩn và điều đó khiến cho người dùng mất nhiều công sức để ghi nhớ &ndash; có may mắn lắm thì bạn mới có thể dạy cho cả thế giới biết vuốt sang phải có nghĩa là gì.</p>

<h3>4. Giới thiệu tính năng mới trực quan trên màn hình cho người dùng mới</h3>

<p>Onboarding, đang là chủ đề nóng trong việc thiết kế giao diện. Tính năng này tự động chạy chỉ dùng một lần khi người dùng lần đầu tiên mở dụng dụng. Phần lớn tính năng này được dùng để giới thiệu và giải thích các tính năng của chương trình một cách trực quan trên màn hình:</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/onboarding-overlay.png"></p>

<p style="text-align:center;"> Một ví dụ về Onboarding</p>

<p>Nhìn thì hay nhưng thật ra thì đây là một giải pháp khá tệ đấy. Bởi vì nhiều người đôi lúc sẽ bỏ qua phần giới thiệu của bạn, họ đang muốn sử dụng ứng dụng của bạn ngay cơ mà. Thậm chí nếu họ dành thời gian xem hướng dẫn của bạn thì họ cũng sẽ nhanh chóng quên mọi thứ ngay khi đóng cửa sổ hướng dẫn đó lại. (đặc biệt là với màn hình hướng dẫn có quá nhiều thông tin). Và cuối cùng là, nếu bạn phải giải thích giao diện của mình với người dùng thì điều đó đồng nghĩa rằng giao diện bạn đang có trên ứng dụng thật sự đang có vấn đề.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/ux-design-like-make-a-joke.jpg" title="Thiết kế giao diện giống như bạn đang kể truyện cười. Nếu bạn phải giải thích câu chuyện thì chẳng còn gì hay nữa." ></p>

<p style="text-align:center;"> Việc thiết kế giao diện giống như bạn đang kể truyện cười. Nếu bạn phải giải thích câu chuyện thì chẳng còn gì hay nữa.</p>

<p>Onboarding có thể được thiết kế theo nhiều cách khác nhau để trở nên hữu ích hơn đối với người dùng. Như với Slack, màn hình chào của họ tập trung việc giới thiệu khái quát về lợi ích mang lại hơn là giới thiệu chi tiết về các tính năng.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/slack-onboarding.png" title="Slack sử màn hình chào của họ tập trung việc giới thiệu khái quát về lợi ích mang lại hơn là giới thiệu chi tiết về các tính năng" ></p>

<p>Duolingo thì biến Onboarding thành các bài học và cổ vũ người dùng học các bài học đấy. Hướng tiếp cận này cũng giúp người dùng quen dần và hiểu hơn các tính năng/ giá trị của ứng dụng.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/duolingo-onboarding.jpg" title="Duolingo thì biến Onboarding thành các bài học và cổ vũ người dùng học các bài học đấy" ></p>

<p>Bạn còn nhớ vấn đề khác nhau giữa Mailbox và AppleMail khi dùng tính năng vuốt sang phải qua email? Đây là cách hướng dẫn người dùng mới về tính năng đó: Người dùng sẽ cần xem những cử chỉ đó được thực hiện như thế nào/ở đâu trước khi thực sự bắt đầu sử dụng ứng dụng:</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/apple-mail-onboarding-tutor.png"></p>

<p>Trước khi áp dụng rập khuôn sử dụng Onboarding bằng cách tạo một lớp trong suốt trên chính ứng dụng của mình để giới thiệu các tính năng và hướng dẫn cho người dùng mới, hãy nên dừng lại và thử nghĩ xem liệu người dùng nên được chào đón như thế nào cho hợp lý và bạn sẽ thấy có nhiều cách giải quyết khác hay hơn việc rập khuôn lại từ ứng dụng khác.</p>

<h3>5. Sử dụng màn hình trống</h3>

<p>Màn hình trống đôi lúc là một thứ dễ bị bỏ sót bởi các nhân viên thiết kế thiếu kinh nghiệm, tuy nhiên nó là một phần quan trong trong thiết kế ứng dụng của bạn.</p>

<p>Đôi khi bạn nghĩ rằng trang báo lỗi hay màn mình trống là cơ hội tốt để thể hiện tính sáng tạo của mình nhưng thực ra lại không như vậy.</p>

<p>Hãy xem ví dụ dưới đây của Google photos:</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/gphoto-empty-state.png" title="Màn hình trống trên GPhoto" ></p>

<p>Nhìn qua thì có vẻ ổn nhưng hãy thử nhìn lại màn hình bạn sẽ thấy có một số vấn đề ở đây:</p>

<ul>
<li><p>Tại sao lại có nút tìm kiếm trong khi người dùng chưa tạo cái gì cả?</p></li>
<li><p>Tại sao hình ảnh chính trong màn hình này lại không có phản ứng gì khi tôi chạm vào?</p></li>
<li><p>Gợi ý ở màn hình trên bảo rằng &ldquo;bạn có thể tạo nội dung bằng cách sử dụng nút + ở phía trên màn hình&rdquo; và điều đó thật là vụng về, bản thân cái gợi ý ở trên nên tự bao gồm nút để tạo nội dung luôn nhỉ?</p></li>
</ul>


<p>Và như thế màn hình trống này không làm cho việc sử dụng ứng dụng dễ dàng hơn, nó không giúp người dùng hiểu rõ hơn về ứng dụng của bạn.</p>

<p>Màn hình trống sẽ làm mọi thứ dễ dàng hơn nếu nó thiết kế theo kiểu như dưới đây.</p>

<p><img class="center" src="http://blog.teracy.com/images/2016/08/06/empty-state-good-example.png" title="Một ví dụ về màn hình trống tốt" ></p>

<p>Đừng quên rằng màn hình trống (tương tự như các trang 404 trên web) không chỉ là nơi thể hiện khả năng sáng tạo và đặc tính thương hiệu mà còn có vai trò quan trọng hơn để thể hiện tính năng của chương trình. Vì vậy hãy làm cho màn hình trống trở nên trực quan hơn.</p>

<h3>6. Hãy luôn tự hỏi mọi thứ</h3>

<p>Những điều tôi chia sẽ ở đây không phải là để chỉ trích các mẫu thiết kế hay các thực nghiệm tốt nhất. Hãy nhớ rằng các mẫu thiết kế trên các ứng dụng nổi tiếng đôi lúc có đối tượng người dùng khác với ứng dụng mà bạn tạo và điều đó có nghĩa rằng không có chìa khóa vàng chung cho tất cả mọi thứ. Vì thế hay tự nghiên cứu để tạo nên một thiết kế riêng cho mình, mọi thứ cần phải được đo đếm và kiểm thử để rút ra cách giải quyết tốt nhất cho ứng dụng của mình.</p>

<p>Lược dịch từ <a href="https://medium.com/@kollinz/misused-mobile-ux-patterns-84d2b6930570">Misused mobile UX patterns</a></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>UI<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Navigation menu<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>Gesture based navigation<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[8 nguyên tắc trong thiết kế bot]]></title>
    <link href="http://blog.teracy.com/2016/08/05/8-nguyen-tac-trong-thiet-ket-bot/"/>
    <updated>2016-08-05T09:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/08/05/8-nguyen-tac-trong-thiet-ket-bot</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2016/08/05/bot-design.png" title="Bot Design" ></p>

<p>Thiết kế UI đàm thoại<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> thu hút được nhiều sự quan tâm nhưng để chúng phát huy được hiệu quả trong thực tế thì vẫn là một vấn đề chưa rõ ràng.</p>

<p>Tuy nhiên những nguyên tắc thiết kế cơ bản có định hướng có thể giúp chúng ta thiết kế những thứ thật sự hữu dụng mà mọi người sẽ muốn dùng hàng ngày.</p>

<p>Chúng ta không thiếu những bài viết về những UI đàm thoại trong tương lai, nhưng lại có quá ít các bài viết về tính thực tiễn khi thiết kế sự tương tác của các chatbot.</p>

<p>Có vẻ như đây chính xác là những gì mà hiện tại chúng ta đang cần. Nỗ lực ban đầu khi thực hiện các chatbot đều thất bại, chủ yếu là do các chatbot phụ thuộc quá nhiều vào việc xử lý ngôn ngữ tự nhiên hoặc khả năng của A.I mà vẫn chưa làm
được. Ngoài ra người ta cũng cố gắng loại bỏ những thứ không phù hợp trong mô hình mới này.</p>

<p>Vì quá quan tâm đến công nghệ mới mà chúng ta quên đi nhân tố quan trọng nhất trong lĩnh vực này đó là con người &ndash; được cho là sẽ giao tiếp với bot.</p>

<!-- more -->


<p>Vậy chúng ta dự định thiết kế các bot như thế nào? Các bot có ích trong trường hợp nào? Nên thân thiện và đơn giản như Slackbot hay thông minh như Facebook M? Nên cho phép thoải mái nhập văn bản hay tạo ra các tùy chọn như IVR<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>? Đây là những câu hỏi không khó trả lời, nhưng thực tế chúng ta vẫn đang khám phá cách sử dụng phương tiện mới này để tạo ra những trải nghiệm thật tốt.</p>

<p>Những tình huống này đòi hỏi các quan điểm thống nhất. Khi bạn làm việc trong lĩnh vực chatbot với nhiều quan điểm khác nhau thì bạn cần phải tuân theo các nguyên tắc thiết kế thật rõ ràng.</p>

<p>(Bài viết này được đăng lần đầu trên Inside Intercom &ndash; trang web mà chúng tôi thường xuyên chia sẻ suy nghĩ của mình về thiết kế, startup và quản lý sản phẩm).</p>

<h1>Các nguyên tắc thiết kế là gì?</h1>

<p>Tất cả các sản phẩm tốt đều tuân theo các nguyên tắc có quan điểm rõ ràng và các nguyên tắc đó phải được đặt lên hàng đầu.</p>

<p>Hiểu theo nghĩa đơn giản nhất thì các nguyên tắc thiết kế là tập hợp các quan điểm được cả nhóm ủng hộ. Các nguyên tắc phải rõ ràng, không mơ hồ và là tôn chỉ để mọi người hướng đến.</p>

<p>Tạo ra các nguyên tắc thiết kế hay là cả một nghệ thuật. Nó không đơn thuần chỉ là những chân lý. Vì nếu như vậy, mọi người sẽ chỉ biết gật đầu, và chẳng giúp bạn được gì khi triển khai thực hiện.</p>

<p>Ví dụ, &ldquo;chúng tôi không làm những thiết kế quá phức tạp&rdquo; là một nguyên tắc chán kinh khủng &ndash; Thực tế sẽ không ai tranh cãi điều ngược lại. Những chân lý như vậy không thể giúp định hướng khả thi cho các quyết định của bạn.</p>

<p>Ngược lại, &ldquo;Chúng tôi thích sự đơn giản hơn là việc gì cũng muốn làm&rdquo; là một nguyên tắc thiết kế tuyệt vời. Chúng ta cũng có thể đưa ra một lập luận ngược với nguyên tắc trên đó là &ldquo;Chúng tôi bổ sung tính phức tạp để người dùng có thể tạo ra những thứ tuyệt vời hơn&rdquo;. Những nguyên tắc có quan điểm rõ ràng như vậy sẽ giúp bạn có được những quyết định thống nhất khi thiết kế.
Với định hướng như vậy, hãy cùng đưa ra một số nguyên tắc giúp chúng ta tiến bộ khi thiết kế các UI đàm thoại.</p>

<h1>Các nguyên tắc thiết kế bot</h1>

<h2>1. Không nên giả lập là con người</h2>

<p>Trò mồi chài người dùng có thể làm họ cảm thấy như mình đang bị lừa, hoặc là họ không hiểu hệ thống hoạt động như thế nào. Cả hai trường hợp này đều là những trải nghiệm người dùng không tốt. Điều đó có nghĩa là chúng ta không nên sử dụng các chỉ dẫn như &ldquo;đang đánh máy&rdquo; hay các trì hoãn giả tạo để có vẻ khiến cho bot mang nhân cách nhiều hơn. Thay vì đó, các thông điệp bot nên theo các kiểu cách khác nhau, và được dán nhãn rõ ràng để thể hiện rằng nó không phải là con người. Điều này cũng sẽ không ngăn cản chúng ta tạo ra cá tính cho bot.</p>

<h2>2. Đơn giản hóa hết mức có thể</h2>

<p>Các đàm thoại bot nên gắn với các chủ đề cụ thể và theo lộ trình đàm thoại tuyến tính, như vậy sẽ tránh được các đường rẽ nhánh phức tạp. Không nên tạo ra các A.I tự cảm nhận và chung chung. Tốt hơn là nên trình bày và giải thích những giới hạn của bot. Như vậy, các nhà thiết kế bot cũng sẽ không phải giải thích gì cho các trường hợp bị lỗi lừa bot và người dùng cũng sẽ không cảm thấy mệt mỏi với các thông điệp đàm thoại phức tạp.</p>

<h2>3. Tôn trọng phương tiện chat</h2>

<p>Lợi thế của các ứng dụng gửi tin nhắn thông minh đó là có thể loại bỏ rất nhiều ứng dụng, giao diện và làm giảm tính tương tác, thay vào đó là một UI chat đơn giản. Do đó, sẽ thật là vô nghĩa khi loanh quanh và vứt cả 1 ứng dụng vào trong một cuộc đàm thoại. Hãy giữ mọi thứ thật tự nhiên với ứng dụng đàm thoại. Mọi tương tác của bot là gọi và trả lời kèm theo các bình luận trong một luồng chat và người dùng sẽ phản hồi lại trong vùng trả lời. Các bot không thể thay đổi nội dung đàm thoại như con người. Cùng với đó, hãy sử dụng các quy ước: hiển thị một tấm thẻ được định dạng bắt mắt cho phép xem trước trang liên kết hơn là việc in ra một URL vô nghĩa trong phản hồi của bot.</p>

<h2>4. Tối ưu cho người dùng cuối</h2>

<p>Các bot nên được dùng để cải thiện trải nghiệm người dùng cuối chứ không chỉ là công cụ hỗ trợ tốt cho các đội chăm sóc khách hàng. Người thiết kế nên tự hỏi rằng: Con người có tốt hơn cho người dùng cuối không? Nếu câu trả lời là có thì bạn không nên sử dụng bot. Bot không nên làm thay những việc con người có thể làm tốt hơn, mà nên cải thiện những cái mà con người còn làm chậm chạp. Máy móc nên làm việc, con người thì nên suy nghĩ.</p>

<h2>5. Sử dụng một cách tiết kiệm</h2>

<p>Các tương tác của bot nên ngắn gọn và chính xác. Không nên có một cuộc trò chuyện kéo dài qua lại với bot, điều này sẽ làm mất thời gian của cả hai bên. Bất cứ khi nào cần quá 2 lần nhập là thấy nặng nề rồi.</p>

<h2>6. Cung cấp đường thoát</h2>

<p>Luôn luôn có lựa chọn dự phòng cho người dùng, cho phép họ bày tỏ ý định của mình như: &ldquo;Tôi muốn đợi và nói chuyện với một con người thực sự. Tôi không muốn tiếp tục nói chuyện với robot nữa.&rdquo;</p>

<h2>7. Sử dụng đầu vào có cấu trúc khi có thể</h2>

<p>Một cuộc đàm thoại mà càng có nhiều hướng đi khác nhau thì nguy cơ đi vào ngõ cụt càng lớn. Đừng đặt người dùng vào tình thế khiến họ phải đoán xem điều gì là đúng cần phải làm. Bàn phím mềm cho phép nhập một lượng ký tự nhất định và có thể tránh phải đánh máy nhiều. Ví dụ, thay vì yêu cầu người dùng cuối gõ các từ &ldquo;có&rdquo; hoặc &ldquo;không&rdquo;, hãy cho họ 2 nút tùy chọn. Hoặc xác nhận đầu vào có cấu trúc như địa chỉ email trước khi gửi. Bằng cách này, bạn có thể đưa ra được các phản hồi đúng mục đích và tránh phải xử lý các văn bản phức tạp mà đầu vào không đoán trước được.</p>

<h2>8. Mọi người đều thấy được điểm giống nhau</h2>

<p>Các bot không chỉ xuất hiện với người dùng cuối mà người thiết kế bot cũng cần phải ghi lại được các bối cảnh hội thoại &ndash; bot trả lời như thế nào và người dùng cuối phản hồi lại ra sao. Các thông điệp dài hoặc phổ biến của bot có thể hiện thị ở trạng thái đóng để quản trị viên quản lý dễ dàng hơn. Trường hợp ngoại lệ là các thông điệp bot mang tính riêng tư với quản trị viên thì cần hiển thị luôn.</p>

<h1>Tuân thủ nhưng không bị giới hạn bởi các nguyên tắc</h1>

<p>Điều quan trọng cần chú ý đó là những nguyên tắc trên chắc chắn sẽ luôn được phát triển, do khả năng mới về mặt công nghệ hoặc đơn giản là một số nguyên tắc hướng dẫn chưa đúng. Chúng ta nên chấp nhận cả hai thực tế trên.
Tuy nhiên việc nắm bắt được các nguyên tắc trên sẽ làm cho mọi thứ trở lên dễ dàng hơn. Chúng ta đã có các nguyên tắc và giờ chỉ cần áp dụng chúng một cách có hệ thống và đồng nhất. Nếu không có các nguyên tắc này, bạn chỉ có thể thực hiện các ý tưởng của mình một cách ngẫu nhiên và hi vọng nó sẽ hiệu quả như mong muốn.</p>

<p>Bài dịch từ <a href="https://medium.com/intercom-inside/8-principles-of-bot-design-51f03df1d84c#.hb10iooyq">8 principles of bot design</a></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>conversational UI (user interface)<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>IVR (Interactive Voice Response) &ndash; tổng đài trả lời tự động<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to use django-celery-email on Heroku]]></title>
    <link href="http://blog.teracy.com/2015/12/21/how-to-use-django-celery-email-on-heroku/"/>
    <updated>2015-12-21T09:40:00+00:00</updated>
    <id>http://blog.teracy.com/2015/12/21/how-to-use-django-celery-email-on-heroku</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2015/12/21/django_celery.png" title="Django Celery" ></p>

<p>When I was asked to use a distributed task queue for emails on a Django project, I chose
django-celery-email. However, during developing and testing, I faced some problems due to the lack
of clear guide from django-celery-email, so I wrote this post as a step by step guide for anyone
who wants use it with much ease. So let&rsquo;s get started!</p>

<!-- more -->


<h2>Project Setup</h2>

<ul>
<li><p>You need to setup local development environment with teracy-dev v0.4.2:
<a href="http://dev.teracy.org/docs/0.4.2/getting_started.html">http://dev.teracy.org/docs/0.4.2/getting_started.html</a></p></li>
<li><p>We&rsquo;re going to use <a href="https://github.com/teracyhq/django-boilerplate">https://github.com/teracyhq/django-boilerplate</a> v0.4.0 to develop Django
applications:</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant ssh
</span><span class='line'>$ ws
</span><span class='line'>$ cd personal
</span><span class='line'>$ mkdir django-celery
</span><span class='line'>$ cd django-celery
</span><span class='line'>$ git init
</span><span class='line'>$ git remote add djbp https://github.com/teracyhq/django-boilerplate
</span><span class='line'>$ git fetch djbp
</span><span class='line'>$ git merge djbp/v0.4.0</span></code></pre></td></tr></table></div></figure>


<ul>
<li>We need to create a virtual environment for the Django app and to install dependencies:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkvirtualenv django-celery
</span><span class='line'>$ pip install -r requirements/dev.txt</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Set the required environment variables:</li>
</ul>


<p>By following <a href="http://12factor.net/config,">http://12factor.net/config,</a> we should <code>export</code> the required variables. For development
convenience, .env file is supported and recommeded only for development mode. So let&rsquo;s create .env
file at <code>django-celery/.env</code> with the following content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ADMINS=(('&lt;your_name&gt;', '&lt;your_email&gt;'),)
</span><span class='line'>DATABASE_URL=sqlite:///project/data/dj-celery.db</span></code></pre></td></tr></table></div></figure>


<p><code>ADMINS</code> variable is used for testing emails, you should fill in your admins details.</p>

<ul>
<li>Run the Django application:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py migrate # migrate for the first time to create db schema creation and migration
</span><span class='line'>$ ./manage.py runserver 0.0.0.0:8000</span></code></pre></td></tr></table></div></figure>


<p>You should see something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(django-celery)vagrant@vagrant:~/workspace/personal/django-celery$ ./manage.py runserver 0.0.0.0:8000
</span><span class='line'>Performing system checks...
</span><span class='line'>
</span><span class='line'>System check identified no issues (0 silenced).
</span><span class='line'>December 01, 2015 - 13:09:11
</span><span class='line'>Django version 1.8.7, using settings 'settings.project.dev'
</span><span class='line'>Starting development server at http://0.0.0.0:8000/
</span><span class='line'>Quit the server with CONTROL-C.</span></code></pre></td></tr></table></div></figure>


<p>Open <a href="http://localhost:8000,">http://localhost:8000,</a> you should see the 404 error page and it&rsquo;s expected. We&rsquo;ll add
functionalities for the application by next steps.</p>

<h2>Heroku Deployment</h2>

<p>Let&rsquo;s deploy the Django application on Heroku to apply continuous delivery philosophy.</p>

<p>Make sure you have an account at <a href="https://heroku.com">https://heroku.com</a></p>

<ul>
<li>Install Heroku Toolbelt</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Login</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku login</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create a Heroku application</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ws
</span><span class='line'>$ cd personal/django-celery
</span><span class='line'>$ heroku create &lt;your_app_name&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku config:set DJANGO_SETTINGS_MODULE=project.settings.prod
</span><span class='line'>$ heroku config:set ADMINS="(('&lt;your_name&gt;', '&lt;your_email&gt;'),)"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Deploy</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push heroku master
</span><span class='line'>$ heroku run python manage.py migrate</span></code></pre></td></tr></table></div></figure>


<p>After that, you should access your deployment app at: <a href="https://">https://</a>&lt;your_app_name>.herokuapp.com/</p>

<p>I created <code>dj-celery</code> app name and it&rsquo;s availalbe at: <a href="https://dj-celery.herokuapp.com/">https://dj-celery.herokuapp.com/</a></p>

<p>From now on, to update the deployment on Heroku, we just need to push new commits to the heroku
repository.</p>

<h2>django-userena Setup</h2>

<p>To see how emails work with celery, let&rsquo;s add user management functionalities which should also send
emails for confirming when signing up.</p>

<p>There is already an application for that, it is: <code>django-userena</code>.</p>

<ul>
<li><p>Install:</p>

<p>By following the installation guide at:
<a href="http://django-userena.readthedocs.org/en/latest/installation.html#installing-django-userena">http://django-userena.readthedocs.org/en/latest/installation.html#installing-django-userena</a> and
adapting to <code>django-boilerplate</code>.</p>

<ul>
<li><p>Add <code>django-userena&gt;=1.4.1,&lt;1.5.0</code> to <code>requirements/project/common.txt</code>, so we&rsquo;ll use 1.4.x
versions of <code>django-userena</code> like I did at:
<a href="https://github.com/hoatle/django-celery/commit/f153b2940aa1d3432f77fe5e5c5f219775ac071c">https://github.com/hoatle/django-celery/commit/f153b2940aa1d3432f77fe5e5c5f219775ac071c</a></p></li>
<li><p>Install with: <code>$ pip install -r requirements/dev.txt --upgrade</code> (<code>upgrade</code> here means installing
and upgrading any outdated packages)</p></li>
</ul>
</li>
<li><p>Configure:</p>

<p>By following the guide at:
<a href="http://django-userena.readthedocs.org/en/latest/installation.html#required-settings">http://django-userena.readthedocs.org/en/latest/installation.html#required-settings</a> like I did
at: <a href="https://github.com/hoatle/django-celery/commit/bd566a86ff654b69463be649e561800782cd91c9">https://github.com/hoatle/django-celery/commit/bd566a86ff654b69463be649e561800782cd91c9</a></p>

<p>There is a migration issue that requires to create apps/userena_patch like I did at:
<a href="https://github.com/hoatle/django-celery/commit/5ef6393aa64a9064aefe399cc07d64e492b2d580">https://github.com/hoatle/django-celery/commit/5ef6393aa64a9064aefe399cc07d64e492b2d580</a></p></li>
<li><p><code>makemigrations</code> for the accounts app:</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py makemigrations</span></code></pre></td></tr></table></div></figure>


<p>  Commit the changes like I did at:
  <a href="https://github.com/hoatle/django-celery/commit/d306ed4a25b1494a0955f08a8a7aa598fa30b578">https://github.com/hoatle/django-celery/commit/d306ed4a25b1494a0955f08a8a7aa598fa30b578</a></p>

<ul>
<li>Migrate and Run:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py migrate
</span><span class='line'>$ ./manage.py check_permissions
</span><span class='line'>$ ./manage.py runserver 0.0.0.0:8000</span></code></pre></td></tr></table></div></figure>


<p>You should see the page of <a href="http://localhost:8000/accounts/signup">http://localhost:8000/accounts/signup</a> now. Let&rsquo;s signup a user and you
should see something similar on the console:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MIME-Version: 1.0
</span><span class='line'>Content-Type: text/plain; charset="utf-8"
</span><span class='line'>Content-Transfer-Encoding: 7bit
</span><span class='line'>Subject: Your signup at localhost.
</span><span class='line'>From: webmaster@localhost
</span><span class='line'>To: sample.user@gmail.com
</span><span class='line'>Date: Mon, 21 Dec 2015 11:02:30 -0000
</span><span class='line'>Message-ID: &lt;20151221110230.23463.80845@vagrant.vm&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Dear hoatle,
</span><span class='line'>
</span><span class='line'>Thank you for signing up at localhost.
</span><span class='line'>
</span><span class='line'>To activate your account you should click on the link below:
</span><span class='line'>
</span><span class='line'>http://localhost:8000/accounts/activate/fe547230a3039c476a127408e9d824894d0a9064/
</span><span class='line'>
</span><span class='line'>Thanks for using our site!
</span><span class='line'>
</span><span class='line'>Sincerely,
</span><span class='line'>localhost
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-------------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<ul>
<li>To deploy Heroku:</li>
</ul>


<p>Note: we need to set SITE_DOMAIN and SITE_NAME to match the created Heroku application.
These variables are already configured by django-boilerplate by default on development mode.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku config:set SITE_DOMAIN=&lt;your_app_name&gt;.herokuapp.com
</span><span class='line'>$ heroku config:set SITE_NAME=&lt;your_site_name&gt;
</span><span class='line'>$ git push heroku master
</span><span class='line'>$ heroku run python manage.py migrate
</span><span class='line'>$ heroku run python manage.py check_permissions</span></code></pre></td></tr></table></div></figure>


<p>You should see the page of <a href="https://">https://</a>&lt;your_app_name>.herokuapp.com/accounts/signup now. However, don&rsquo;t
try to signup on the Heroku app yet because we need to configure the email backend.</p>

<h2>SMTP Email Backend Setup</h2>

<p>By default, development mode uses console backend and production mode uses SMTP backend for emails.
Let&rsquo;s use SMTP backend for both development mode on localhost and production mode on Heroku.</p>

<p>For easier setup, let&rsquo;s use mailgun addon (free plan) from the Heroku app:
<a href="https://elements.heroku.com/addons/mailgun">https://elements.heroku.com/addons/mailgun</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku addons:create mailgun:starter</span></code></pre></td></tr></table></div></figure>


<p>To see all available variables, use:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku config</span></code></pre></td></tr></table></div></figure>


<p>and you should see something similar to this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=== dj-celery Config Vars
</span><span class='line'>ADMINS:                 (('&lt;your_name&gt;', '&lt;your_email&gt;'),)
</span><span class='line'>DATABASE_URL:           postgres://erdidqkixwegwg:hGZztw2Oh3EmNWfD5IfTb3XcyO@ec2-107-21-224-11.compute-1.amazonaws.com:5432/dembq6s6m1mohq
</span><span class='line'>DJANGO_SETTINGS_MODULE: project.settings.prod
</span><span class='line'>MAILGUN_API_KEY:        key-9587e40f127a1fe8fbab10622be69169
</span><span class='line'>MAILGUN_DOMAIN:         appb8c22c19f6654edeb3c25768d4674002.mailgun.org
</span><span class='line'>MAILGUN_PUBLIC_KEY:     pubkey-51b28300a981d7f184bb55c4726742d8
</span><span class='line'>MAILGUN_SMTP_LOGIN:     postmaster@appb8c22c19f6654edeb3c25768d4674002.mailgun.org
</span><span class='line'>MAILGUN_SMTP_PASSWORD:  f1c39a13079d8db398073fc6717de59a
</span><span class='line'>MAILGUN_SMTP_PORT:      587
</span><span class='line'>MAILGUN_SMTP_SERVER:    smtp.mailgun.org
</span><span class='line'>SITE_DOMAIN:            dj-celery.herokuapp.com
</span><span class='line'>SITE_NAME:              dj-celery</span></code></pre></td></tr></table></div></figure>


<p>We see that <code>MAILGUN_XXX</code> variables are provided, we will use it on development
mode by adding the following lines into the .env file from the config content of your app
environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
</span><span class='line'>
</span><span class='line'>MAILGUN_API_KEY=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_DOMAIN=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_PUBLIC_KEY=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_SMTP_LOGIN=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_SMTP_PASSWORD=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_SMTP_PORT=&lt;your_app_environment_value&gt;
</span><span class='line'>MAILGUN_SMTP_SERVER=&lt;your_app_environment_value&gt;</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s test if the email works:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py shell
</span><span class='line'>
</span><span class='line'>Python 2.7.6 (default, Apr 15 2015, 20:14:49) 
</span><span class='line'>Type "copyright", "credits" or "license" for more information.
</span><span class='line'>
</span><span class='line'>IPython 4.0.1 -- An enhanced Interactive Python.
</span><span class='line'>?         -&gt; Introduction and overview of IPython's features.
</span><span class='line'>%quickref -&gt; Quick reference.
</span><span class='line'>help      -&gt; Python's own help system.
</span><span class='line'>object?   -&gt; Details about 'object', use 'object??' for extra details.
</span><span class='line'>
</span><span class='line'>In [1]: from django.core import mail
</span><span class='line'>
</span><span class='line'>In [2]: mail.mail_admins('test', 'test')
</span><span class='line'>
</span><span class='line'>In [3]: </span></code></pre></td></tr></table></div></figure>


<p>You need to check your mailbox to see that a test email should be sent to you.</p>

<p>Now you could signup and receive email at: <a href="https://">https://</a>&lt;your_app_name>.herokuapp.com/accounts/signup/</p>

<h2>django-celery-email Setup</h2>

<p>If could see that <code>mail.mail_admins</code> is blocked and waiting until the email sending is finished.
To avoid these blocking, let&rsquo;s use Celery. Celery app is already setup by django-boilerplate at:
<a href="https://github.com/teracyhq/django-boilerplate/commit/7ea4306ae295d38ae35610b0882db1ea81a5d613">https://github.com/teracyhq/django-boilerplate/commit/7ea4306ae295d38ae35610b0882db1ea81a5d613</a></p>

<p>Let&rsquo;s just follow <a href="https://pypi.python.org/pypi/django-celery-email">https://pypi.python.org/pypi/django-celery-email</a> to configure it like I did at:
<a href="https://github.com/hoatle/django-celery/commit/96575fe6fdb746a3f5a8526bbf236864c6880fb6">https://github.com/hoatle/django-celery/commit/96575fe6fdb746a3f5a8526bbf236864c6880fb6</a></p>

<p>and then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install -r requirements/dev.txt --upgrade</span></code></pre></td></tr></table></div></figure>


<p>update EMAIL_BACKEND for .env file with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>EMAIL_BACKEND='djcelery_email.backends.CeleryEmailBackend'</span></code></pre></td></tr></table></div></figure>


<p>One important step is to enable Celery by using <a href="https://elements.heroku.com/addons/cloudamqp">https://elements.heroku.com/addons/cloudamqp</a></p>

<p>To use cloudamqp heroku addon:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku addons:create cloudamqp:lemur</span></code></pre></td></tr></table></div></figure>


<p>and you should see <code>CLOUDAMQP_URL</code> environment variable by <code>$ heroku config</code></p>

<p>Let&rsquo;s add that variable into the .env file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CLOUDAMQP_URL=&lt;your_app_environment_value&gt;</span></code></pre></td></tr></table></div></figure>


<p>The full .env file I created was at: <a href="https://gist.github.com/hoatle/7cb82d437213db4f373d">https://gist.github.com/hoatle/7cb82d437213db4f373d</a></p>

<p>To start Celery app: <code>$ ./scripts/celery.sh</code>, and you should see the following content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> -------------- celery@vagrant v3.1.19 (Cipater)
</span><span class='line'>---- **** ----- 
</span><span class='line'>--- * ***  * -- Linux-3.13.0-49-generic-x86_64-with-debian-wheezy-sid
</span><span class='line'>-- * - **** --- 
</span><span class='line'>- ** ---------- [config]
</span><span class='line'>- ** ---------- .&gt; app:         Project:0x2f9a710
</span><span class='line'>- ** ---------- .&gt; transport:   amqp://ssnipivn:**@jaguar.rmq.cloudamqp.com:5672/ssnipivn
</span><span class='line'>- ** ---------- .&gt; results:     disabled
</span><span class='line'>- *** --- * --- .&gt; concurrency: 2 (prefork)
</span><span class='line'>-- ******* ---- 
</span><span class='line'>--- ***** ----- [queues]
</span><span class='line'> -------------- .&gt; celery           exchange=celery(direct) key=celery
</span><span class='line'>                
</span><span class='line'>
</span><span class='line'>[tasks]
</span><span class='line'>  . djcelery_email_send_multiple
</span><span class='line'>
</span><span class='line'>[2015-12-21 12:13:22,788: INFO/Beat] beat: Starting...
</span><span class='line'>[2015-12-21 12:13:24,532: INFO/MainProcess] Connected to amqp://ssnipivn:**@jaguar.rmq.cloudamqp.com:5672/ssnipivn
</span><span class='line'>[2015-12-21 12:13:26,851: INFO/MainProcess] mingle: searching for neighbors
</span><span class='line'>[2015-12-21 12:13:31,216: INFO/MainProcess] mingle: all alone
</span><span class='line'>/home/vagrant/.virtualenvs/django-celery/lib/python2.7/site-packages/celery/fixups/django.py:265: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
</span><span class='line'>  warnings.warn('Using settings.DEBUG leads to a memory leak, never '
</span><span class='line'>
</span><span class='line'>[2015-12-21 12:13:36,019: WARNING/MainProcess] /home/vagrant/.virtualenvs/django-celery/lib/python2.7/site-packages/celery/fixups/django.py:265: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
</span><span class='line'>  warnings.warn('Using settings.DEBUG leads to a memory leak, never '
</span><span class='line'>
</span><span class='line'>[2015-12-21 12:13:36,023: WARNING/MainProcess] celery@vagrant ready.</span></code></pre></td></tr></table></div></figure>


<p>After that, sending test email to admins should work without any blocking by opening a new terminal
window:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant ssh
</span><span class='line'>$ ws
</span><span class='line'>$ cd personal/django-celery
</span><span class='line'>$ workon django-celery
</span><span class='line'>$ ./manage.py shell
</span><span class='line'>
</span><span class='line'>Python 2.7.6 (default, Apr 15 2015, 20:14:49) 
</span><span class='line'>Type "copyright", "credits" or "license" for more information.
</span><span class='line'>
</span><span class='line'>IPython 4.0.1 -- An enhanced Interactive Python.
</span><span class='line'>?         -&gt; Introduction and overview of IPython's features.
</span><span class='line'>%quickref -&gt; Quick reference.
</span><span class='line'>help      -&gt; Python's own help system.
</span><span class='line'>object?   -&gt; Details about 'object', use 'object??' for extra details.
</span><span class='line'>
</span><span class='line'>In [1]: from django.core import mail
</span><span class='line'>
</span><span class='line'>In [2]: mail.mail_admins('test', 'test')</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. We&rsquo;re done on development mode. Let&rsquo;s deploy on Heroku with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push heroku master
</span><span class='line'>$ heroku ps:scale celery=1</span></code></pre></td></tr></table></div></figure>


<p><code>$ heroku logs -p celery</code> to see the logs of celery, you should see something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2015-12-21T12:30:35.946701+00:00 heroku[celery.1]: Starting process with command `scripts/celery.sh`
</span><span class='line'>2015-12-21T12:30:37.616409+00:00 app[celery.1]: /app/.heroku/python/lib/python2.7/site-packages/dotenv.py:53: UserWarning: Not reading /app/.env - it doesn't exist.
</span><span class='line'>2015-12-21T12:30:37.616419+00:00 app[celery.1]:   warnings.warn("Not reading {0} - it doesn't exist.".format(dotenv))
</span><span class='line'>2015-12-21T12:30:38.278350+00:00 app[celery.1]: [2015-12-21 12:30:38,278: INFO/MainProcess] Connected to amqp://ssnipivn:**@jaguar.rmq.cloudamqp.com:5672/ssnipivn
</span><span class='line'>2015-12-21T12:30:38.220898+00:00 app[celery.1]: [2015-12-21 12:30:38,220: WARNING/MainProcess] /app/.heroku/python/lib/python2.7/site-packages/celery/apps/worker.py:161: CDeprecationWarning: 
</span><span class='line'>2015-12-21T12:30:38.220902+00:00 app[celery.1]: Starting from version 3.2 Celery will refuse to accept pickle by default.
</span><span class='line'>2015-12-21T12:30:38.220904+00:00 app[celery.1]: The pickle serializer is a security concern as it may give attackers
</span><span class='line'>2015-12-21T12:30:38.220903+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220905+00:00 app[celery.1]: the ability to execute any command.  It's important to secure
</span><span class='line'>2015-12-21T12:30:38.220908+00:00 app[celery.1]: the default choice.
</span><span class='line'>2015-12-21T12:30:38.220907+00:00 app[celery.1]: that enabling pickle should require a deliberate action and not be
</span><span class='line'>2015-12-21T12:30:38.220906+00:00 app[celery.1]: your broker from unauthorized access when using pickle, so we think
</span><span class='line'>2015-12-21T12:30:38.220909+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220910+00:00 app[celery.1]: If you depend on pickle then you should set a setting to disable this
</span><span class='line'>2015-12-21T12:30:38.220910+00:00 app[celery.1]: warning and to be sure that everything will continue working
</span><span class='line'>2015-12-21T12:30:38.220914+00:00 app[celery.1]: You must only enable the serializers that you will actually use.
</span><span class='line'>2015-12-21T12:30:38.220913+00:00 app[celery.1]:     CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
</span><span class='line'>2015-12-21T12:30:38.220912+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220915+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220913+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220915+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.220911+00:00 app[celery.1]: when you upgrade to Celery 3.2::
</span><span class='line'>2015-12-21T12:30:38.220917+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.223101+00:00 app[celery.1]: ---- **** ----- 
</span><span class='line'>2015-12-21T12:30:38.220916+00:00 app[celery.1]:   warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))
</span><span class='line'>2015-12-21T12:30:38.223104+00:00 app[celery.1]: - ** ---------- .&gt; app:         Project:0x7f590f5fad10
</span><span class='line'>2015-12-21T12:30:38.223107+00:00 app[celery.1]: --- ***** ----- [queues]
</span><span class='line'>2015-12-21T12:30:38.223111+00:00 app[celery.1]:   . djcelery_email_send_multiple
</span><span class='line'>2015-12-21T12:30:38.223102+00:00 app[celery.1]: --- * ***  * -- Linux-3.13.0-66-generic-x86_64-with-debian-jessie-sid
</span><span class='line'>2015-12-21T12:30:38.262153+00:00 app[celery.1]: [2015-12-21 12:30:38,261: INFO/Beat] beat: Starting...
</span><span class='line'>2015-12-21T12:30:38.223098+00:00 app[celery.1]:  
</span><span class='line'>2015-12-21T12:30:38.301313+00:00 app[celery.1]: [2015-12-21 12:30:38,301: INFO/MainProcess] mingle: searching for neighbors
</span><span class='line'>2015-12-21T12:30:38.223105+00:00 app[celery.1]: - ** ---------- .&gt; results:     disabled
</span><span class='line'>2015-12-21T12:30:38.223109+00:00 app[celery.1]:                 
</span><span class='line'>2015-12-21T12:30:38.223100+00:00 app[celery.1]:  -------------- celery@91af8d04-4b15-482e-937b-0f9a49a0eff7 v3.1.19 (Cipater)
</span><span class='line'>2015-12-21T12:30:38.223102+00:00 app[celery.1]: -- * - **** --- 
</span><span class='line'>2015-12-21T12:30:38.223106+00:00 app[celery.1]: - *** --- * --- .&gt; concurrency: 8 (prefork)
</span><span class='line'>2015-12-21T12:30:38.223109+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:38.223103+00:00 app[celery.1]: - ** ---------- [config]
</span><span class='line'>2015-12-21T12:30:38.223106+00:00 app[celery.1]: -- ******* ---- 
</span><span class='line'>2015-12-21T12:30:38.223110+00:00 app[celery.1]: [tasks]
</span><span class='line'>2015-12-21T12:30:38.223104+00:00 app[celery.1]: - ** ---------- .&gt; transport:   amqp://ssnipivn:**@jaguar.rmq.cloudamqp.com:5672/ssnipivn
</span><span class='line'>2015-12-21T12:30:38.223108+00:00 app[celery.1]:  -------------- .&gt; celery           exchange=celery(direct) key=celery
</span><span class='line'>2015-12-21T12:30:38.223111+00:00 app[celery.1]: 
</span><span class='line'>2015-12-21T12:30:39.322701+00:00 app[celery.1]: [2015-12-21 12:30:39,322: INFO/MainProcess] mingle: all alone
</span><span class='line'>2015-12-21T12:30:39.352403+00:00 app[celery.1]: [2015-12-21 12:30:39,352: WARNING/MainProcess] celery@91af8d04-4b15-482e-937b-0f9a49a0eff7 ready.
</span><span class='line'>2015-12-21T12:30:36.537615+00:00 heroku[celery.1]: State changed from starting to up</span></code></pre></td></tr></table></div></figure>


<p>You could try sending test emails to admins with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku run python manage.py shell
</span><span class='line'>Running python manage.py shell on dj-celery... up, run.9412
</span><span class='line'>/app/.heroku/python/lib/python2.7/site-packages/dotenv.py:53: UserWarning: Not reading /app/.env - it doesn't exist.
</span><span class='line'>  warnings.warn("Not reading {0} - it doesn't exist.".format(dotenv))
</span><span class='line'>Python 2.7.10 (default, May 27 2015, 20:38:41) 
</span><span class='line'>[GCC 4.8.2] on linux2
</span><span class='line'>Type "help", "copyright", "credits" or "license" for more information.
</span><span class='line'>(InteractiveConsole)
</span><span class='line'>&gt;&gt;&gt; from django.core import mail
</span><span class='line'>&gt;&gt;&gt; mail.mail_admins('test', 'test')</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it, email sending is not blocked anymore. The full project for this guide is located at:
<a href="https://github.com/hoatle/django-celery">https://github.com/hoatle/django-celery</a></p>

<h2>Remote Debugging Python Tip</h2>

<p>This is a bonus if you need to remote debug Python applications. You could apply this for
Django projects, too: <a href="http://dev.teracy.org/docs/develop/python_dev_guide.html#debugging">http://dev.teracy.org/docs/develop/python_dev_guide.html#debugging</a></p>

<h2>Summary</h2>

<p>In this post, I&rsquo;ve guided you step by step to setup Celery as a distributed task queue for emails
on Django projects. It&rsquo;s very easy to set everything up thanks to the django-boilerplate project.</p>

<p>If you need any Django consultant or Django development, don&rsquo;t hesitate to contact us at:
<a href="&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x68;&#113;&#x40;&#116;&#x65;&#114;&#x61;&#x63;&#x79;&#46;&#x63;&#111;&#109;">&#104;&#113;&#x40;&#116;&#x65;&#x72;&#97;&#x63;&#121;&#46;&#x63;&#111;&#109;</a> and we&rsquo;re very eager to work with you on Django, Python projects.</p>

<p>Happy Django developing!</p>

<h2>References</h2>

<ul>
<li><a href="https://github.com/bread-and-pepper/django-userena">https://github.com/bread-and-pepper/django-userena</a></li>
<li><a href="http://www.celeryproject.org/">http://www.celeryproject.org/</a></li>
<li><a href="https://pypi.python.org/pypi/django-celery-email">https://pypi.python.org/pypi/django-celery-email</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to make JWT requests with httpie-jwt-auth plugin?]]></title>
    <link href="http://blog.teracy.com/2015/09/03/how-to-make-jwt-requests-with-httpie-jwt-auth-plugin/"/>
    <updated>2015-09-03T11:33:00+00:00</updated>
    <id>http://blog.teracy.com/2015/09/03/how-to-make-jwt-requests-with-httpie-jwt-auth-plugin</id>
    <content type="html"><![CDATA[<p>At Teracy, we embrace JWT (JSON Web Tokens)<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>  for REST APIs to make secure requests. Just for
your information: &ldquo;JSON Web Tokens are an open, industry standard RFC 7519 method for representing
claims securely between two parties&rdquo;.</p>

<!-- more -->


<p>We&rsquo;re using JWT for our REST APIs basing on the flask-boilerplate<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> project that are empowering
our clients&#8217; web applications and our internal projects.</p>

<p>And to test REST APIs, we&rsquo;re using a really simple powerful http client called httpie<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> .</p>

<p>To make a JWT request with <code>httpie</code>, you need to use the following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ http example.org Authorization:'Bearer jwt_token_here'</span></code></pre></td></tr></table></div></figure>


<p>Hower, typing <code>Authorization</code> with the exact value format is a bit hard and error-prone, that&rsquo;s the
reason why we created <a href="https://github.com/teracyhq/httpie-jwt-auth">httpie-jwt-auth</a> plugin with the first v0.1.0 release. After installing
<code>httpie-jwt-auth</code>, you could use this instead:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ http --auth-type=jwt --auth=jwt_token_here: example.org</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. It&rsquo;s really easy to use for any JWT requests with <code>httpie</code>.</p>

<p>Please note that colon character at the end of <code>jwt_token_here</code>, we&rsquo;re going to work on removing
the redundant colon character with: <a href="https://github.com/teracyhq/httpie-jwt-auth/issues/3">https://github.com/teracyhq/httpie-jwt-auth/issues/3</a></p>

<p>Hope that you&rsquo;ll like it and use it as much as we do.</p>

<p>Happy developing and debugging!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://jwt.io/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>https://github.com/teracyhq/flask-boilerplate<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://github.com/jkbrzt/httpie<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Teracy happy birthday Slack bot]]></title>
    <link href="http://blog.teracy.com/2015/07/22/teracy-birthday-slack-bot/"/>
    <updated>2015-07-22T09:19:00+00:00</updated>
    <id>http://blog.teracy.com/2015/07/22/teracy-birthday-slack-bot</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2015/07/22/teracy_birthday_slack_bot.png" title="Teracy happy birthday Slack bot" ></p>

<p>Getting everything automated is one of my daily tasks, such as running tests automatically each time
there is a new commit, packaging products and sending them to customers, or deploying the
staging/ production servers when a project manager releases a new version, and more.</p>

<!-- more -->


<p>Today my task is something quite different: Congrats team members on their birthdays automatically
by the data got from Google calendar. After a little search, there are many automation solutions to
do it: from commercial Zapier, IFFT to opensource like Huginn.
I want something simple to use, maintenance-free, and free for small usage, so my last
choice is Zapier. It has already had the recipe<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> to read events from Google calendar and another
action to interactive with Slack that will be easy to start (although the document of the recipe
is not quite clear for a new user like me). Here is the recipe for Zapier:</p>

<p><img class="center" src="http://blog.teracy.com/images/2015/07/22/Zapier_recipe_config.png" title="Zapier recipe config" ></p>

<p>With this recipe, Zapier will notify to the #_general slack channel with the message got from the
calendar description at the time of the event start. To make thing more interesting, I want to
attach a birthday cake image which has an employee name on it along with the message so I use PHP GD
to show a dynamic birthday cake taking the employee name from the calendar title and add it to the
image. It took me 30 minutes to get the birthday cake image which has space for the text, choose a
font and add it to my script. Finally, uploading it to our server and here is the result:</p>

<p><img class="center" src="http://blog.teracy.com/images/2015/07/22/cake_sample.png" title="Birthday cake" ></p>

<p>This PHP script<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> along with the Zapier recipe above makes the birthday reminder more interesting.
What I&rsquo;m thinking now is some funny fortune teller texts which are added randomly to the cake, a
lucky draw game for the team members to pick up their birthday gift and hopefully some online
merchants will open their API for our script to bring the gift to our team members&#8217; homes.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>https://zapier.com/zapbook/google-calendar/slack/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>https://github.com/teracyhq/birthday-image<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[teracy-dev v0.4.0 release]]></title>
    <link href="http://blog.teracy.com/2015/05/22/teracy-dev-v0-4-0-release/"/>
    <updated>2015-05-22T09:19:00+00:00</updated>
    <id>http://blog.teracy.com/2015/05/22/teracy-dev-v0-4-0-release</id>
    <content type="html"><![CDATA[<p>About 1 year 8 months ago we announced the <code>teracy-chef</code> v1.0.0 release<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> with a plan to extend
it for <code>teracy-dev</code>. And today we&rsquo;re very happy to announce <code>teracy-dev</code> v4.0.0 release, a really
important release we&rsquo;ve been waiting for after nearly 2 years of development. Why is it so
important?</p>

<!-- more -->


<h2>Easy Setup And Time Saving</h2>

<p>Traditionally, setting up a development environment takes a lot of time to install the required
packages and it also requires skillful developers to do it. Now with <code>teracy-dev</code>, its mission
is to be an <code>all in one development environment managed by Vagrant and provisioned by Chef</code>.
It&rsquo;s easy and cheap to install the same development environment on all types of operating
systems (Linux, Mac, Windows) by just following some simple steps with a clear guide<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>.</p>

<h2>All In One Development Environment</h2>

<p>You want to work with:</p>

<ul>
<li>Python? here we go: <a href="http://dev.teracy.org/docs/0.4.0/python_dev_guide.html">http://dev.teracy.org/docs/0.4.0/python_dev_guide.html</a></li>
<li>Node.js? here we go: <a href="http://dev.teracy.org/docs/0.4.0/nodejs_dev_guide.html">http://dev.teracy.org/docs/0.4.0/nodejs_dev_guide.html</a></li>
<li>PHP? here we go: <a href="http://dev.teracy.org/docs/0.4.0/php_dev_guide.html">http://dev.teracy.org/docs/0.4.0/php_dev_guide.html</a></li>
<li>Ruby? here we go: <a href="http://dev.teracy.org/docs/0.4.0/ruby_dev_guide.html">http://dev.teracy.org/docs/0.4.0/ruby_dev_guide.html</a></li>
<li>MySQL? here we go: <a href="http://dev.teracy.org/docs/0.4.0/databases_guide.html#mysql">http://dev.teracy.org/docs/0.4.0/databases_guide.html#mysql</a></li>
<li>Git?</li>
<li>phpMyAdmin?</li>
<li>&hellip;?</li>
</ul>


<p>All these components are already available when you setup the <code>teracy-dev</code> VM.</p>

<p>If you want to have more, such as:</p>

<ul>
<li>Java</li>
<li>PostgreSQL</li>
<li>MongoDB</li>
<li>&hellip;</li>
</ul>


<p>It&rsquo;s just a few minutes to configure and enable these components to use right away.</p>

<p>We&rsquo;re using <code>teracy-dev</code> everyday for all our clients&#8217; projects and our internal projects with a
wide range of technology stacks and <code>teracy-dev</code> makes our lives (trainees, QA engineers, designers,
developers) easier to collaborate.</p>

<h2>Customization</h2>

<p>You could customize <code>teracy-dev</code> by overriding the default configuration on the
<code>vagrant_config.json</code> file<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> such as:</p>

<ul>
<li>VM customization: networks, synced folders, memory, cpus, etc.</li>
<li>Enable/ disable or use different versions of <code>Git</code>, <code>Node.js</code>, <code>Python</code>, <code>Ruby</code>, <code>Nginx</code>, <code>Apache</code>,
<code>PHP</code>, <code>MySql</code>, <code>MongoDB</code>, <code>PostgreSQL</code>, <code>Java</code>, <code>PHPMyAdmin</code>, <code>codebox</code>.</li>
</ul>


<p>If you want to have more customization, please follow:
<a href="http://dev.teracy.org/docs/0.4.0/teracy_dev_development.html">http://dev.teracy.org/docs/0.4.0/teracy_dev_development.html</a></p>

<h2>How To Upgrade</h2>

<p>We support seamless upgrade, these are the steps for upgrading if you&rsquo;re using <code>teracy-dev</code> v0.3.5:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd ~/teracy-dev
</span><span class='line'>$ git pull
</span><span class='line'>$ vagrant box update</span></code></pre></td></tr></table></div></figure>


<p><code>teracy-dev</code> v0.4.0 introduced a breaking change of configuration for the VM&rsquo;s network<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>,
so you need to adjust it on your <code>vagrant_config_override.js</code> if you&rsquo;re overriding it.</p>

<p>Then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant destroy
</span><span class='line'>$ vagrant up</span></code></pre></td></tr></table></div></figure>


<p>And you&rsquo;re done.</p>

<h2>What&rsquo;s Next?</h2>

<p>We&rsquo;re going to back-port some stuff from <code>teracy-dev</code> to <code>teracy-chef</code> to make it modular so
that everyone could leverage <code>teracy-chef</code> to setup their own development environment like we&rsquo;re
doing for <code>teracy-dev</code> such as:</p>

<ul>
<li>LAMP stack only</li>
<li>Java stack only</li>
<li>Ruby stack only</li>
<li>Node.js stack only</li>
<li>Ruby stack only</li>
</ul>


<p>The possibilies are limitless for everyone to create their own baseboxes.</p>

<p>By the next versions of <code>teracy-chef</code> and <code>teracy-dev</code>, we&rsquo;ll support provisioning the servers
with <code>knife-solo</code><sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>.</p>

<p>And we&rsquo;ll also support many different types of operating systems for the base boxes, even with
Windows base boxes.</p>

<p>We can&rsquo;t wait to continue developing and releasing the next versions.</p>

<h2>0.4.x Releases</h2>

<p>This section will be used to announce v0.4.x releases and we&rsquo;re very happy to announce:</p>

<ul>
<li><p><code>teracy-dev</code> v0.4.1 release which fixes 2 bugs:</p>

<ul>
<li>[DEV-232] &ndash; mysql with php not work</li>
<li>[DEV-233] &ndash; wrong default forwarded port for mysql</li>
</ul>


<p>Details: <a href="https://issues.teracy.org/secure/ReleaseNote.jspa?projectId=10400&amp;version=12200">https://issues.teracy.org/secure/ReleaseNote.jspa?projectId=10400&amp;version=12200</a></p></li>
</ul>


<h2>One More Thing&hellip;</h2>

<p>If you want to get our support, consultant or to develop web applications, please drop us an
email at: hq[at]teracy.com to collaborate and get your dreams come true!</p>

<p>Or you could contact us via:</p>

<ul>
<li><a href="https://www.upwork.com/companies/Teracy_~01bea4242f6b165592">https://www.upwork.com/companies/Teracy_~01bea4242f6b165592</a></li>
<li><a href="https://www.upwork.com/users/~01ae32490908995384">https://www.upwork.com/users/~01ae32490908995384</a></li>
</ul>


<p>In the meantime, enjoy <code>teracy-dev</code> for all your projects and hope that you will love using it as
much as we do.</p>

<p>Let&rsquo;s get started: <a href="http://dev.teracy.org/docs/0.4.0/getting_started.html">http://dev.teracy.org/docs/0.4.0/getting_started.html</a></p>

<p>Happy developing!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://blog.teracy.com/2013/09/23/teracy-chef-v0-1-0-release/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://dev.teracy.org/docs/getting_started.html<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://github.com/teracyhq/dev/blob/v0.4.0/vagrant_config.json<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>https://issues.teracy.org/browse/DEV-198<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>http://matschaffer.github.io/knife-solo/<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Teracy Wireframe UI kit for Sketch]]></title>
    <link href="http://blog.teracy.com/2014/12/08/free-teracy-wireframe-kit-for-sketch/"/>
    <updated>2014-12-08T00:00:00+00:00</updated>
    <id>http://blog.teracy.com/2014/12/08/free-teracy-wireframe-kit-for-sketch</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2014/12/cover.jpg"></p>

<p>It’s always a good idea to begin with a wireframe when beginning a new web design or mobile app project.
Wireframes can be a big time saver as they help both designers and developers come to an agreement on placement
of major UI elements. The key is to get the layout nailed down so you don&rsquo;t have to change major layout when
 detailed design elements are in place.</p>

<!-- more -->


<p>In our design process at Teracy, wireframing and mockups takes an important position. We have developed
a wireframe kit to speedup the design process and use it in our daily design workflow. Today, we are excited
 to share the version of our wireframe kit that we are using, which includes the most common UI elements
in web projects. This is the second UI kit we share to <a href="http://www.bohemiancoding.com/sketch/">Sketch</a> community, you can also check out our first freebie <a href="https://github.com/teracy-official/bootflat-ui-kit.sketch">Bootflat UI kit for Sketch</a> shared not a long time ago.</p>

<p>Here it is, hope it&rsquo;s useful for all Sketch lovers!</p>

<p><a href="https://github.com/teracyhq/wireframe">Download the Teracy Wireframe kit for Sketch</a></p>

<p><img class="center" src="http://blog.teracy.com/images/2014/12/ss2.jpg">
<img class="center" src="http://blog.teracy.com/images/2014/12/ss1.jpg"></p>

<p>Features:</p>

<ul>
<li>All UI Elements are Symbols.</li>
<li>Symbols grouped by categories.</li>
<li>UI elements for mobile devices will be added in the next version.</li>
<li>Markups and annotations included.</li>
<li>Over 140 icons included.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Bootflat UI kit for Sketch]]></title>
    <link href="http://blog.teracy.com/2014/10/08/free-bootflat-ui-kit-for-sketch/"/>
    <updated>2014-10-08T00:00:00+00:00</updated>
    <id>http://blog.teracy.com/2014/10/08/free-bootflat-ui-kit-for-sketch</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2014/10/cover.png"></p>

<p><strong><em>Why Sketch?</em></strong></p>

<p><a href="http://www.bohemiancoding.com/sketch/">Sketch</a> is a powerful tool designed entirely to do UI. It&rsquo;s a young graphic program when compared
to Photoshop but we see its user base&rsquo;s growing strong. Centered around vector design, Sketch is
getting plenty of buzz among UI designers as an alternative to Adobe&rsquo;s Creative Suite. With Sketch,
designs come out pixel perfect and in vector format, a requirement for multiple screen sizes.</p>

<!-- more -->


<p>You may not believe how much time this application have saved us when designing UI. It&rsquo;s simple,
fast and so connected to the way designers work. You definitely should give Sketch a try in your
next project. There are already a lot of articles about how Sketch excels in designing UI. Here to
name a few:</p>

<ul>
<li><a href="http://blog.mengto.com/sketch-vs-photoshop/">Sketch VS Photoshop</a></li>
<li><a href="http://blog.mengto.com/photoshop-users-how-to-switch-to-sketch/">Photoshop Users: How To Switch To Sketch</a></li>
<li><a href="https://medium.com/@jm_denis/discovering-sketch-25545f6cb161">Discovering Sketch</a></li>
</ul>


<p><strong><em>Bootflat UI Kit</em></strong></p>

<p>At the beginning, Teracy planned to develop its own UI kit and framework based on bootstrap. It&rsquo;s a
great experience but developing and maintaining the UI kit will take time. Clock&rsquo;s still ticking.
We have to release one of our ambitious products by the end of this year.
So, we&rsquo;ve come to decide on finding an open source framework that matches our flat designs.</p>

<p>And we found <a href="http://bootflat.github.io/">Bootflat</a> &ndash; an open source Flat UI kit based on Twitter Bootstrap 3 framework. For
designers, they offer a free PSD, including a set of beautiful and pure elements, which you can
use to create startup projects, websites or iOS/Android Apps. This will save a lot of developing
time.</p>

<p>There&rsquo;s still one thing that&rsquo;s bugging us though. As our company starts switching to Sketch for UI
design, this beautiful framework doesn&rsquo;t provide the .sketch file of elements, only .psd. So we
think &ldquo;OK, why not create one? Sketch community might find it helpful and it&rsquo;s also good for
creators of Bootflat.&rdquo;</p>

<p>So here it is, hope it&rsquo;s useful for Sketch lovers!</p>

<p><a href="https://github.com/teracy-official/bootflat-ui-kit.sketch">Download the Bootflat UI kit for Sketch</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Team Building Activity Of Teracy In Da Nang City]]></title>
    <link href="http://blog.teracy.com/2014/09/25/first-team-building-activity-of-teracy-in-da-nang-city/"/>
    <updated>2014-09-25T10:39:00+00:00</updated>
    <id>http://blog.teracy.com/2014/09/25/first-team-building-activity-of-teracy-in-da-nang-city</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2014/09/teracy1.jpg"></p>

<p>After a hard working year, the long-awaited day had arrived &ndash; Teracy&rsquo;s vacation for 4 days and 3 nights.
This destination reaches the Central Vietnam &ndash; Da Nang, a beautiful and bustling city with the fresh
atmosphere and taste of the sea.</p>

<p>It was not simply a vacation but also a team building activity for Teracy. Although Teracy has just
come into operation with relatively few members in the North &ndash; Central &ndash; South, this trip is even
more meaningful for all Teraciers. It was the first time all the members met together to experience
moments of fun, and relaxation side by side, so everyone was very excited :)</p>

<!-- more -->


<p>The journey should always have a good preparation to make sure to have a perfect trip. Just like the
other times, I encountered many difficulties and took a lot of time in preparation for the trip.</p>

<p>The most difficult thing was to find a place for travel. It seemed a simple job done, but quite hard
for me when carrying out the plan. As the members of the Teracy live in different regions of the country,
the destination must be convenient for travel, have many beautiful spots, be easy to hold team-building
activities and suitable to the budget. After careful consideration, we decided to reach Da Nang, a
Central beach full of sunshine and wind, and a young city. Da Nang is also the mid region of the
country and be able to connect the members from three Vietnamese regions of North-Central and South.</p>

<p>Next, I needed to book flight tickets for members and search for a hotel. The hotel should be center,
comfortable, but at reasonable price.</p>

<p>I also needed to find out specialties in Da Nang, what and where to eat, give the detailed schedule
for the trip.</p>

<p>Phew!  Everything was well done in the end. We were towards Da Nang together!</p>

<p><strong>4 day 3 night journey begins!</strong></p>

<p><strong>Day 1</strong></p>

<p>When walking down the airport, just at dusk, I felt the taste of the sea, fresh air, cool
peace of the city, unlike the crowded bustling scene, and hot summer in Hanoi. We
arrived at the hotel at 6.30 pm, did check-in procedures, relaxed and chatted together.
It was the first convergence of the Teraciers, (unfortunately, some members could not join) but we all
felt so familiar and close. After moments of unceasing talk, all of us felt very hungry. To the coastal
city, of course, the first dishes we chose were seafood. As planned, we tried the seafood in a pretty
cool and clean coastal restaurant. The menu had wide variety of options, all look tasty. How I could
find myself enjoy such delicious dishes in Hanoi. Until now, I still remember the fresh delicious
favor of Tamarind crab, steamed prawn and crab on that day.</p>

<p>After the meal, we walked along My Khe beach. The murmur of the wind and the waves was singing to
welcome us. A soft sea breeze kissed our face and a salty warmth blew into our face, which dissipated
all the tiredness of hard working days. The wind was still blowing and the waves were still crushing
onto our bare feet, with the cheerful voices and laugh of people.</p>

<p><strong>Day 2</strong></p>

<p>Indeed, it was an unlucky day for us. After visiting Son Tra Peninsula in the morning, we took a nap
until afternoon (I guess because we stayed up late playing cards last night). We went eating around
3 pm (well, I actually didn&rsquo;t know if it was considered as lunch or dinner). As planned, we would go
to play paint-ball after the meal. However, all of a sudden, it started to rain so we couldn&rsquo;t play.
Instead, we had to switch to go swimming when the rain was over.</p>

<p>In the evening, we went to eat veil. When telling the taxi-driver the address of a restaurant, he
said it was so hard to find that new street name so I told him to take us to another restaurant. Unluckily,
the restaurant was closed or moved to somewhere. In the end, we decided to eat &ldquo;Pork Rolls&rdquo; instead.
After that, we were eager to go to play bowling for pleasure, however, we were disheartened by seeing
the sign &ldquo;suspend operations to fix&rdquo;. Eventually, we turned to visit &ldquo;Sun-Wheel- the world&rsquo;s
fourth-largest one&rdquo;.</p>

<p>Linh Ung Pagoda &ndash; Son Tra peninsula <img class="center" src="http://blog.teracy.com/images/2014/09/teracy2.jpg"></p>

<p><strong>Day 3</strong></p>

<p>Fortunately, all activities took place as our schedule. In the morning, we played the
challenge game &ldquo;waterfall slide&rdquo; to challenge ourselves with rushing water, along with stones having
different sizes as obstacles to give us the sudden collision and to make the game more and more
adventurous. It was really a funny and adventurous game.</p>

<p>Prepare for sliding waterfall <img class="center" src="http://blog.teracy.com/images/2014/09/teracy3.jpg"></p>

<p>After that, we went to enjoy the specialties here, such as, fried brook fish, boiled chicken, stocky
wild boar meat and stir-fried wild vegetables with a little acrid, and strange taste. In the evening,
we had real comfortable moments at &ldquo;Phuong Dong&rdquo; bar. This was our second option because we were not
in proper clothes to come into &ldquo;Sky 36&rdquo;&ndash; our first option.</p>

<p>Join the exciting atmosphere at Phuong Dong bar <img class="center" src="http://blog.teracy.com/images/2014/09/teracy4.jpg"></p>

<p><strong>Day 4</strong></p>

<p>In the morning we went to play paint-ball game. It was a quite interesting team game. We also wore as
soldiers, looked very majestic. We had 6 people, divided into two teams. All were ready to fight!</p>

<p>Prepare for playing paint-ball game <img class="center" src="http://blog.teracy.com/images/2014/09/teracy5.jpg"></p>

<p>After the game, we returned to the hotel, relaxed, and checked out to visit Mr Phuong&rsquo;s house &ndash; a
colleague who lives in Da Nang. It was the last night in Da Nang, we must take advantage of the worthful
time to try other specialties of Da Nang, sat drinking coffee, and looking at the peaceful night
city.</p>

<p>The next morning, everyone got up early, packed up, went out for buying gifts for relatives and friends,
and then went to the airport. Good bye Da Nang and colleagues who live in Da Nang and Saigon!
Return to Hanoi after this trip, I miss Da Nang and my colleagues very much, miss the moments
with Teracier together, miss the murmur of sea waves, white and smooth sands,
the salty sea breeze, the memory of the pure and pristine morning, especially miss the people and the
specialties of Da Nang.</p>

<p>The trip was not as successful as expected, but it helped the members of Teracy become close and
understand each other better. It really brought us the great moments.</p>

<p>See all Tereciers next year &ndash; in the second team building activity of Teracy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hoạt Động Team Building Đầu Tiên Của Teracy]]></title>
    <link href="http://blog.teracy.com/2014/09/24/hoat-dong-team-building-dau-tien-cua-teracy/"/>
    <updated>2014-09-24T15:46:00+00:00</updated>
    <id>http://blog.teracy.com/2014/09/24/hoat-dong-team-building-dau-tien-cua-teracy</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2014/09/teracy1.jpg"></p>

<p>Sau một năm làm việc vất vả thì cái ngày mong đợi cũng đã đến &ndash; một chuyến nghỉ mát 4 ngày 3 đêm
cùng Teracy. Chuyến đi lần này hướng về miền trung để đến với mảnh đất Đà Nẵng – một
thành phố tươi trẻ, năng động với bầu không khí trong lành đậm hương vị của biển khơi.</p>

<p>Đây không đơn giản chỉ là một kỳ nghỉ mát, đối với Teracy thì còn là một hoạt động team building. Do
Teracy vừa mới đi vào hoạt động chưa lâu, số thành viên còn khá ít ở ba miền Bắc &ndash; Trung &ndash; Nam, nên
chuyến đi này lại càng có ý nghĩa với tất cả các Teracier. Đây là lần đầu tiên tất cả các thành viên
được gặp mặt nhau, cùng trải qua những giây phút vui chơi, nghỉ ngơi bên nhau&hellip;Vì thế mà ai cũng háo
hức lắm :)</p>

<!-- more -->


<p>Hành trình nào cũng cần có sự chuẩn bị trước thật tốt để đảm bảo có một chuyến đi thật hoàn hảo. Cũng
như các hành trình khác, tôi gặp rất nhiều khó khăn và mất rất nhiều thời gian trong công tác chuẩn bị.</p>

<p>Khó khăn nhất là việc tìm điểm đến. Tưởng chừng công việc này đơn giản lắm, nhưng khi bắt tay
vào lên kế hoạch lại hoàn toàn ko đơn giản chút nào. Vì các thành viên của Teracy thì sinh sống ở
các miền khác nhau trong cả nước, do đó việc lựa chọn địa điểm làm sao phải thuận tiện cho việc
đi lại, phù hợp với ngân sách, có các hoạt động team building, có những danh lam thắng cảnh nổi
tiếng&hellip; Sau khi cân nhắc kỹ lưỡng, chúng tôi quyết định chọn Đà Nẵng, một bãi biển miền trung đầy
nắng và gió, một thành phố trẻ. Đà Nẵng cũng là điểm giữa của đất nước và có thể kết nối các thành
viên tại 3 miền Bắc Trung Nam.</p>

<p>Tiếp theo là book vé máy bay cho các thành viên và tìm kiếm khách sạn. Tiêu chí chọn khách sạn
của chúng tôi là phải thật sạch sẽ, tiện nghi, trung tâm những nơi sẽ đến thăm, giá cả hợp lý.
Tôi cũng cần tìm xem ở Đà Nẵng có những đặc sản gì, đi ăn gì, ở đâu và lên lịch trình chi tiết cho
chuyến đi nữa, cả đoàn sẽ đi thăm thắng cảnh nào, rồi sẽ chơi trò gì để tất cả mọi người đều có thể
tham gia và thấy thật sảng khoái&hellip;</p>

<p>Phù!!! cuối cùng thì mọi thứ cũng đã xong rồi. Chúng ta cùng tiến về Đà Nẵng nào!</p>

<p><strong>Hành trình 4 ngày 3 đêm bắt đầu!</strong></p>

<p><strong>Ngày đầu tiên:</strong></p>

<p>Khi bước xuống sân bay, vừa lúc chiều tối, tôi đã cảm nhận được mùi vị của
biển khơi, bầu không khí trong lành, mát mẻ, sự bình yên của thành phố, khác hẳn cảnh xô bồ đông
đúc, nóng nực của mùa hè ở chốn Hà Thành. Đúng 18h30, chúng tôi đến khách sạn, làm thủ tục
check-in, nghỉ ngơi và ngồi chuyện trò cùng tất cả các thành viên ở cả 3 miền. Lần đâu tiên hội tụ
các Teracier, (rất tiếc là chưa đông đủ) nhưng tất cả đều cảm thấy thật thân quen và gần gũi. Sau phút
giây gặp nhau chuyện trò không ngớt, những cái bụng bắt đầu sôi réo ầm ầm giục đi ăn tối rồi :).
Đến với thành phố biển, tất nhiên món ăn đầu tiên chúng tôi chọn là hải sản. Như đã lên kế hoạch
từ trước, chúng tôi vào một nhà hàng khá thoáng mát, sạch sẽ. Vừa ngồi vào bàn, một em nhân viên
phục vụ đã chạy đến niềm nở tươi cười, bảo chúng tôi gọi món. Ực! Ực! Nhìn thực đơn đã thấy ngon
lắm rồi. Ở Hà nội, làm gì kiếm được những món ngon, bổ, rẻ như thế này :) Lần lượt nào là cua rang me,
tôm hấp, ghẹ luộc&hellip;. được mang lên. Ngon quá, giờ nghĩ lại vẫn còn thèm lắm :) Sau khi ăn uống no
say rồi, cả đoàn cùng nhau đi dạo dọc bãi biển Mỹ Khê. Tiếng sóng rì rào của biển như đang ca hát
chào gọi chúng tôi. Làn gió biển mát rượi, hơi mằn mặn phả nhẹ vào mặt xua tan tất cả mệt mỏi
sau những ngày làm việc bận rộn. Gió cứ thổi, sóng cữ vỗ nhẹ vào những đôi chân trần, hòa quyện
trong tiếng cười nói vui nhộn của mọi người&hellip;.</p>

<p><strong>Ngày thứ 2:</strong></p>

<p>Quả thực đó là ngày không may mắn. Buổi sáng sau khi đi bán đảo Sơn Trà về thì
mọi người ngủ luôn đến chiều (chắc do tối qua thức khuya chơi bài), đến 15h giờ mới lục đục đi ăn
(chẳng hiểu là ăn trưa hay ăn tối nữa).Theo kế hoạch, sau khi ăn xong chúng tôi sẽ đi bắn súng sơn
nhưng bất ngờ trời lại đổ mưa nên không thể đi được (thế là kế hoạch đổ bể, đành chuyển sang đi tắm
biển). Buổi tối chúng tôi đi ăn thịt bê, khi lên taxi bảo họ chở đến địa chỉ của quán thứ nhất họ bảo
tên đường này mới nên khó tìm, đang thở phào vì có quán ăn dự phòng khác nhưng khi đến nơi thì
giật mình vì quán đã chuyển sang địa điểm khác. Chúng tôi đành chuyển sang ăn Bánh Tráng Thịt
Heo, ăn xong chúng tôi hí hửng bàn nhau đi chơi bowling để đổi gió đến nơi thì chán hẳn khi nhìn
thấy tấm biển ”tạm ngưng hoạt động để sửa chữa”. Không đổi được gió nên chúng tôi quay lại đi
“vòng quay mặt trời &ndash; vòng quay lớn thứ 4 trên thế giới”. May thay nó chưa bị đóng cửa.</p>

<p> Chùa Linh Ứng &ndash; Bán đảo Sơn Trà <img class="center" src="http://blog.teracy.com/images/2014/09/teracy2.jpg"></p>

<p><strong>Ngày thứ 3:</strong></p>

<p> May sao mọi hoạt động diễn ra theo đúng kế hoạch. Buổi sáng chúng tôi đi vượt
thác để thử sức mình trên những dòng nước chảy xiết, cùng với những chú đá đủ kích cỡ to nhỏ nằm
nghênh ngang giữa đường như thể làm chướng ngại vật tạo cho chúng tôi những cú hích bất ngờ
khiến trò chơi càng thêm phần mạo hiểm (trò chơi khá vui và thú vị mỗi tội sắc da có hơi chuyển
màu một chút).</p>

<p>Chuẩn bị vượt thác <img class="center" src="http://blog.teracy.com/images/2014/09/teracy3.jpg"></p>

<p>Chơi xong chúng tôi đi thưởng thức những đặc sản nơi đây (với món cá suối rán
giòn rụm, món gà rừng, lợn rừng thịt chắc nịch và món rau rừng xào có vị hơi chát chát khi ăn xong
còn để lại một dư vị khó tả). Buổi tối chúng tôi có những giây phút thật sự thoải mái ở bar Phương
Đông (đây là phương án 2 của chúng tôi vì không được vào bar Sky 36 do không mặc đúng trang
phục).</p>

<p>Hòa mình vào không khí sôi động tại bar Phương Đông<img class="center" src="http://blog.teracy.com/images/2014/09/teracy4.jpg"></p>

<p><strong>Ngày thứ 4:</strong></p>

<p>Buối sáng chúng tôi đi bắn súng sơn. Đây là trò chơi tập thể khá thú vị và còn được
mặc bộ quần áo như các chú bộ đội ấy, nhìn oai ghê cơ. Chúng tôi có 6 người, chia ra làm 2 đội. Tất
cả sẵn sàng chiến đấu nhé!</p>

<p>Sẵn sàng ra trận bắn súng sơn <img class="center" src="http://blog.teracy.com/images/2014/09/teracy5.jpg"></p>

<p>Sau khi &ldquo;ra trận&rdquo; về, chúng tôi trở về khách sạn, nghỉ ngơi, trả phòng rồi đến thăm nhà anh Phương &ndash;
1 đồng nghiệp đang sống ở Đà Nẵng. Còn đêm cuối cùng ở Đà Nẵng thôi, cả hội đều phải tận dụng
triệt để thời gian vàng bạc này để đi ăn các món đặc sản còn lại của Đà Nẵng và ngồi uống cafe,
ngắm thành phố đêm yên bình&hellip;</p>

<p>Sáng hôm sau mọi người đều dậy sớm, dọn đồ, tranh thủ đi mua quà cho người thân, rồi ra sân
bay. Tạm biệt Đà Nẵng nhé, tạm biệt các đồng nghiệp đang sống ở Đà Nẵng và Sài Gòn nhé. Trở về
Hà Nội sau chuyến đi này thấy nhớ Đà Nẵng ghê, nhớ các Terecier lắm, nhớ những phút giây cùng
các bạn vui cười bên nhau, nhớ tiếng sóng biển rì rầm, bờ cát trắng mìn, nhớ làn gió mằn mặn của
biển khơi, nhớ những buổi sáng trong lành tinh khôi, và đặc biệt là người dân Đà Nẵng cùng những
món ăn độc đáo nơi đây&hellip;</p>

<p>Mặc dù chuyến đi thực sự chưa thành công như mong đợi, nhưng nó đã giúp cho tập thể Teracy trở
nên thân thiết, gắn bó, hiểu nhau hơn và thêm yêu quý nhau hơn.</p>

<p>Hẹn gặp lại tất cả các Terecier năm sau nhá &ndash; trong hoạt động team building lần 2 của Teracy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[teracy-dev v0.3.0 release]]></title>
    <link href="http://blog.teracy.com/2014/07/17/teracy-dev-v0-3-0-release/"/>
    <updated>2014-07-17T03:39:00+00:00</updated>
    <id>http://blog.teracy.com/2014/07/17/teracy-dev-v0-3-0-release</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.teracy.com/images/2014/07/binary_code.jpg"></p>

<p>Creating an isolated consistent development with a predefined consistent workflow is always our
goal of development, that is the reason why we create <a href="https://github.com/teracyhq/dev">teracy-dev</a>. It is a virtualbox virtual
machine (VM) that is provisioned by <code>Chef</code><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> and managed by <code>vagrant</code><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>. Today, we are very happy
to announce <a href="https://github.com/teracyhq/dev">teracy-dev</a> v0.3.0 released  after more than a year of development and usage.</p>

<!-- more -->


<p>We have used <code>vagrant</code> and <code>Chef</code> to provision a common VM for all our developers.
It saves a lot of time and is a very cheap operation to destroy and provision a new VM again in minutes
with the exactly defined provisioned software packages.</p>

<p>We are now using <code>Chef</code> to provision a VM with <code>nodejs</code>, <code>mysql</code>, <code>php</code>, <code>coldfusion</code> for a client to
develop a wordpress, a coldfusion and a MVC client (using backone.js with Grunt build), and it works
great.</p>

<p>Normally, it takes several days for new developers to install every packages on
their machines and they must follow instruction guide, but not anymore with <a href="https://github.com/teracyhq/dev">teracy-dev</a>.
Every new developer just needs 2-3 hours to get the dev VM provisoned for the first time (to
download the basebox thanks to <code>vagrant cloud</code>) and it just takes less than 1 minute to
<code>$ vagrant destroy</code> and <code>$ vagrant up</code> later again &ndash; this is a very cheap operation.</p>

<p><a href="https://github.com/teracyhq/dev">teracy-dev</a> is really a general-purpose development environment for all developers for all platforms
(<code>nodejs</code>, <code>python</code>, <code>java</code>, <code>php</code>, <code>mysql</code>, <code>posgreSQL</code>, <code>mongodb</code>) built-in and you could extend
more by using <code>Chef</code> to create more cookbooks or recipes for it.</p>

<p>However, we still have performance problem with shared folders. It is still quite slow and
painful on Windows host machine. We are going to fix this problem on the next version (v0.4.0).</p>

<p><code>docker</code><sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> is very promising and we&rsquo;d like to use it for our workflow at v0.4.0, too.</p>

<p>Please stay tuned for our upcoming exciting release version.</p>

<p>Have a nice day and happy coding!</p>

<h2>Credit</h2>

<ul>
<li><a href="http://www.superbwallpapers.com/computers/binary-code-9004/">http://www.superbwallpapers.com/computers/binary-code-9004/</a></li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>http://www.getchef.com/<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>http://www.vagrantup.com/<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>https://www.docker.com/<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
