<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: trans | Teracy's Blog]]></title>
  <link href="http://blog.teracy.com/categories/trans/atom.xml" rel="self"/>
  <link href="http://blog.teracy.com/"/>
  <updated>2017-01-04T05:12:16+00:00</updated>
  <id>http://blog.teracy.com/</id>
  <author>
    <name><![CDATA[Teracy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tư duy thiết kế: Cẩm nang cho sự đổi mới (Phần 2)]]></title>
    <link href="http://blog.teracy.com/2017/01/04/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-2/"/>
    <updated>2017-01-04T10:18:00+00:00</updated>
    <id>http://blog.teracy.com/2017/01/04/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-2</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2016/11/22/tu-duy-thiet-ke.jpeg" title="Tư duy thiết kế" ></p>

<p>Đây là phần tiếp theo của <a href="/2016/11/22/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-1/">Phần 1</a></p>

<h1>Giai đoạn ba: Tạo ra ý tưởng</h1>

<p>Sau khi xây dựng sự đồng cảm và tái xác định những thách thức, vấn đề hoặc nhu cầu, đã đến lúc chúng ta cần tư duy hành động.</p>

<p>Theo quan điểm của tôi, tạo ra ý tưởng là phần tốt nhất của quá trình này vì nó thú vị và hấp dẫn.
Giai đoạn tạo ra ý tưởng có hai phần rõ ràng:</p>

<p><strong>1. Phân kỳ (Tạo Lựa chọn)</strong></p>

<p>Nhóm cùng nghiên cứu đa ngành là những người xây dựng sự đồng cảm và tái định nghĩa vấn đề, cả nhóm tập hợp lại vào thời gian đã xác định trước để &ldquo;tuôn&rdquo; ra những ý tưởng mà không đưa ra phán xét gì về những ý tưởng đó. Tại sao lại vậy? Bởi vì khi tập trung vào số lượng và áp dụng giải pháp chưa xác định để tìm kiếm sự đổi mới thực sự. Để thực hiện điều này, hãy làm theo các quy tắc của kỹ thuật động não:</p>

<!-- more -->


<ul>
<li><p>Trì hoãn đánh giá</p></li>
<li><p>Lựa chọn số lượng</p></li>
<li><p>Một cuộc trò chuyện tại một thời điểm</p></li>
<li><p>Nhìn trực quan</p></li>
<li><p>Xây dựng trên đầu trang của những ý tưởng khác (&ldquo;Có, và &hellip;&rdquo;)</p></li>
<li><p>Bám sát chủ đề</p></li>
<li><p>Khuyến khích những ý tưởng điên rồ</p></li>
</ul>


<p>Trong tất cả các phiên Tư duy thiết kế tôi đã trải qua, các đội đã có thể nảy ra hơn 100 ý tưởng chỉ trong một giờ.</p>

<p><img class="center" src="/images/2017/01/04/phien-dong-nao.jpeg" title="phiên động não" ></p>

<p><em>Kỹ thuật động não (phân kỳ) trong quá trình đào tạo Tư duy Thiết kế tại Brazil</em></p>

<p><strong>2. Hội tụ (Hãy lựa chọn)</strong></p>

<p>Trong hàng nghìn ý tưởng để lựa chọn, các đội sẽ chọn ra ý tưởng mà họ sẽ thực hiện. Kỹ thuật tốt là bỏ phiếu bằng hình dán: mỗi thành viên trong nhóm nhận được một tập các nhãn dán và từng cá nhân mỗi thành viên trong nhóm đánh dấu các ý tưởng mà họ muốn thực hiện. Sau khi quá trình này hoàn tất, sẽ dễ dàng để lựa chọn các ý tưởng một cách dân chủ.</p>

<p>Điều quan trọng là phải có hai giai đoạn rõ ràng và riêng biệt: 1 giờ cho kỹ thuật động não (phân kỳ) và 1 giờ để quyết định lựa chọn (hội tụ).</p>

<h1>Giai đoạn bốn: Nguyên mẫu</h1>

<p>Hãy xây dựng để suy nghĩ và cảm nhận. Một nguyên mẫu biến một ý tưởng thành một cái gì đó hữu hình và &ldquo;có thể thử nghiệm được&rdquo;.</p>

<p>&ldquo;Một nguyên mẫu đáng giá hàng ngàn cuộc họp&rdquo;, câu nói được phát biểu ở IDEO.</p>

<p>Có ba phần trong giai đoạn này:</p>

<ol>
<li><p>Cảm hứng   &ndash;   &ldquo;Nó có thể là gì?&rdquo;</p></li>
<li><p>Tiến triển   &ndash;   &ldquo;Nó sẽ trở thành gì?&rdquo;</p></li>
<li><p>Phê chuẩn   &ndash;   &ldquo;Nó sẽ là gì?&rdquo;</p></li>
</ol>


<p><img class="center" src="/images/2017/01/04/nguyen-mau.jpeg" title="Nguyên mẫu" ></p>

<p>Nguyên mẫu là một công cụ tuyệt vời để giúp bạn xác định thành công hay thất bại, học hỏi nhanh chóng. Cái giá phải trả khi thất bại sớm (trong giai đoạn đầu của dự án) sẽ rẻ hơn nhiều so với sau này, sau khi rất nhiều nguồn lực được phân bổ và thực hiện các nhiệm vụ. Chúng tôi xây dựng nguyên mẫu để tìm hiểu, giải quyết những ý tưởng mâu thuẫn nhau, bắt đầu cuộc hội thoại và quản lý quá trình xây dựng.</p>

<p>Sự cuốn chiếu, biểu tượng, lớp, thư viện, là một số ví dụ về các nguyên mẫu, chúng tôi đã tạo ra để kiểm tra, xác nhận và học hỏi nhanh.</p>

<p><img class="center" src="/images/2017/01/04/nguyen-mau-ban-dau-cho-cong-cu-Repeat-Grid.gif" title="Nguyên mẫu ban đầu cho công cụ Repeat Grid" ></p>

<p><em>Một nguyên mẫu ban đầu cho các công cụ Lặp lại lưới</em></p>

<h1>Giai đoạn Năm: Thử nghiệm</h1>

<p>Khi nguyên mẫu được tạo ra, cần thử nghiệm chúng với những con người thật. Chúng ta thử nghiệm để tinh chỉnh các nguyên mẫu và các giải pháp, để tìm hiểu thêm về người sử dụng, và để thử nghiệm và tinh chỉnh POV của chúng ta.</p>

<p>Khi thử nghiệm, cho phép người dùng thử nghiệm với nguyên mẫu của bạn, hãy quan sát và lắng nghe. Nếu có thể dễ dàng thực hiện những điều chỉnh nhỏ thì hãy làm và kiểm thử lại. Hãy luôn tiếp cận người dùng của bạn và quan trọng nhất là không bao giờ quá trung thành với những ý tưởng của bạn.</p>

<p>Một ví dụ tốt với Adobe XD là những câu chuyện xung quanh các lớp (layers). Ban đầu, chúng tôi giả định rằng chúng tôi có thể cung cấp một mô hình tinh thần mới, mà không có sự xuất hiện của các lớp. Một số người yêu thích điều này và một số thì lại ghét. Điều thú vị là, sau khi chúng tôi vận chuyển XD không có lớp, cuối cùng một số người bắt đầu nhận ra họ không cần lớp. Nhưng sau nhiều cuộc điều tra và thử nghiệm với cộng đồng và khách hàng, chúng tôi kết luận rằng lớp có thể giúp, đặc biệt là để xuất ra, các biểu tượng và truy cập vào các đối tượng trong các tổ hợp phức tạp.</p>

<p>Kết quả là, chúng tôi sẽ vận chuyển lớp trong Adobe XD sau này trong năm 2016. Và chúng tôi nghĩ rằng chúng tôi đã làm cho sản phẩm thông minh hơn bằng cách tuân theo một khái niệm mà chúng tôi gọi là &ldquo;Các lớp địa phương&rdquo;. Nhưng vào cuối ngày, khách hàng sẽ cho chúng tôi biết liệu chúng tôi đã làm đúng hay không, và chúng tôi sẽ học hỏi, lặp lại và xoay quanh vấn đề.</p>

<p>Phương pháp phân tích cũng có tác dụng   &ndash;   chúng cung cấp cho bạn CÁI GÌ, chứ không phải là TẠI SAO. Chúng rất hữu ích để xác nhận phương pháp tiếp cận khác nhau. Chúng tôi có một nhóm rất tài năng làm phân tích cho Adobe XD, nhưng thay vì chỉ thu thập các con số, họ luôn luôn bắt đầu với một câu hỏi, ví dụ:  &ldquo;Có ai đang thành công với chế độ thiết kế (Design Mode) không? Sự thành công chính là khi khách hàng sử dụng các công cụ lưới lặp lại với hình ảnh lấy từ Công cụ tìm kiếm &rdquo;.  Sau khi nhìn vào các con số, nếu người dùng không thành công, chúng tôi thay đổi quá trình đang làm, hoặc chính các công cụ, và kiểm tra lại. Luôn luôn cố gắng trả lời các câu hỏi ban đầu.</p>

<p>Dựa vào phân tích, nghiên cứu định lượng và thử nghiệm, chúng tôi chạy một chương trình riêng phát hành trước với khoảng 800 nhà thiết kế. Đối với nghiên cứu định tính và thử nghiệm, bên cạnh các cuộc họp khách hàng, chúng tôi có một Hội đồng Tư vấn khách hàng (CAB), với 38 nhà thiết kế từ các công ty như Google, Facebook, Airbnb, IDEO, Citi, NFL, EFM, LinkedIn, và tất nhiên, một vài người dùng đặc biệt, chẳng hạn như sinh viên, các nhà phát triển plugin và các nhà thiết kế từ cơ quan nhỏ. Chúng tôi tương tác với các thành viên CAB liên tục qua Slack và  thường xuyên liên lạc, thử nghiệm nguyên mẫu từ rất sớm và thu thập thông tin phản hồi trực tiếp.</p>

<p>Tại mỗi vòng lặp, khi kiểm thử hoàn tất, thì hãy quay lại một trong các giai đoạn trước và tiếp tục lặp lại, mỗi giai đoạn thực hiện tại một thời điểm.</p>

<p>Và đừng bao giờ quên: tin tưởng quá trình và tận hưởng niềm vui!</p>

<h1>Kết luận</h1>

<p>Tư duy Thiết kế là một phương pháp hoặc quy trình bắt đầu với một thách thức thiết kế, chuyển sang giai đoạn đồng cảm (phỏng vấn, quan sát hay trải nghiệm), sau đó đến định nghĩa (hay tái định nghĩa) vấn đề hoặc thách thức, nắm bắt các ý tưởng sáng tạo (phân kỳ đầu tiên và hội tụ sau ), sử dụng nguyên mẫu (xây dựng để suy nghĩ và học hỏi nhanh) và tiếp tục với thử nghiệm.</p>

<p>Đối với Adobe XD, chúng tôi tin rằng nếu chúng tôi tiếp tục lắng nghe, tư duy, sáng tạo, phê chuẩn, học tập, và luôn luôn cởi mở và minh bạch thì chúng tôi sẽ kết thúc với đúng tổng số lượng giá trị khách hàng (customer value) và chúng tôi sẽ tạo ra một giải pháp mà các nhà thiết kế yêu thích.</p>

<p>(HẾT!)</p>

<p>Dịch từ: <a href="https://medium.com/@demianborba/design-thinking-a-manual-for-innovation-e0576b34eff6#.9ae4fd5dk">Design thinking: A manual for innovation</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nhà thiết kế không nên viết code. Họ nên nghiên cứu về nghiệp vụ.]]></title>
    <link href="http://blog.teracy.com/2016/12/09/nha-thiet-ke-khong-nen-viet-code-ho-nen-nghien-cuu-ve-nghiep-vu/"/>
    <updated>2016-12-09T10:40:00+00:00</updated>
    <id>http://blog.teracy.com/2016/12/09/nha-thiet-ke-khong-nen-viet-code-ho-nen-nghien-cuu-ve-nghiep-vu</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2016/12/09/designer-should-not-code.jpg" title="các nhà thiết kế không nên viết code, nên tập trung nghiên cứu nghiệp vụ" ></p>

<p>Ngày nay càng ngày càng có nhiều công ty tìm kiếm các lãnh đạo thiết kế giỏi. Họ được biết rằng công ty của họ cần tập trung nhiều hơn vào tư duy thiết kế và quan tâm đến việc áp dụng các nguyên tắc thiết kế tập trung hơn nữa. Tuy nhiên, khi những công ty này nói chuyện với các nhà thiết kế, họ nghe về các kỹ năng &ndash; về sự nhất quán thương hiệu, và thiết kế bóng bảy, những người thiết kế có thể viết code, hướng dẫn phong cách, tạo mẫu và thử nghiệm &ndash; là công việc của người thiết kế.</p>

<p>Tất cả những điều này đều rất tốt &ndash; thậm chí là bắt buộc. Nhưng với chúng ta, để hiểu một cách đúng đắn, cách tốt nhất để xây dựng doanh nghiệp là chúng ta phải tập trung vào cái làm cho doanh nghiệp thành công. Nói chung, trước tiên chúng ta phải hiểu nghiệp vụ đã. Sau đó, chúng ta sẽ hiểu hơn công việc ở đâu là quan trọng (và cần thực thi ở đâu).</p>

<!-- more -->


<p>Thay vì xem các nhà thiết kế là những người cần phải có thì hãy giải thích mục tiêu nghiệp vụ quan trọng với họ theo những cách cơ bản nhất. Tôi nghĩ những gợi ý của chúng ta về thiết kế sẽ có trọng lượng hơn nếu chúng ta có thể có những cuộc trao đổi sâu sắc, và sẽ có thể đưa ra những gợi ý đáng giá về các nguyên tắc nghiệp vụ cốt lõi.</p>

<h1>Hiện tại chúng ta đang ở đâu</h1>

<p>Có rất nhiều nhà thiết kế đã bắt đầu suy nghĩ nghiêm túc về việc quyết định của họ ảnh hưởng đến công ty ra sao. Nói chung, sự tập trung của chúng ta vào phân tích và nghiên cứu người dùng cũng đã giúp rất nhiều trong việc mang đến niềm tin lớn hơn cho tiếng nói của người thiết kế. Chúng ta cũng đã thấy nhiều ví dụ tuyệt vời của các công ty hàng đầu về thiết kế và các nhà thiết kế ảnh hưởng đến cốt lõi của các doanh nghiệp lớn như Airbnb, Pocket, Facebook, Google, Slack, và vô số công ty khác nữa.</p>

<p>Tôi cho rằng những công ty này thành công như hiện nay bởi vì họ có những người thiết kế tập trung vào nghiệp vụ mà công ty cần hơn là tập trung vào việc mỗi điểm ảnh sẽ trông hoàn hảo như thế nào.</p>

<h1>Chuyển đổi sự tập trung của chúng ta</h1>

<p>Vậy chúng ta nên bắt đầu tư duy về việc ảnh hưởng của thiết kế tới kinh doanh như thế nào?</p>

<p>Có thể là nên ra ngoài và học quản trị kinh doanh (MBA). (Tất cả những nhà thiết kế mà tôi biết đều đã làm điều này và đang tích cực đóng góp vào giá trị cốt lõi của doanh nghiệp). Nhưng thậm chí có thể làm những điều đơn giản hơn. Có thể là nói chuyện với đội kinh doanh để tìm hiểu tình hình thị trường. Có thể là nói chuyện với đội vận chuyển và thực hiện để hiểu tại sao các đơn hàng thường bị chậm một ngày. Có thể đọc qua việc lên kế hoạch cho quý 1 và tìm ra những sáng kiến quan trọng cho những quý không có gì làm ngoài việc tái cấu trúc file css. Có thể cần phải tham gia một lớp học buổi tối về kinh tế. Hay có lẽ chỉ cần dành thời gian buổi tối để tìm kiếm trên google về cách gây quỹ và cách bảng giá trị vốn hoá (Cap table) hoạt động như thế nào thay vì làm thế nào để sử dụng các plugin phác họa mới nhất.</p>

<p>Có thể chúng ta nên dành thời gian để tìm hiểu về các nguyên tắc kinh doanh &ndash; làm thế nào để lựa chọn mô hình kinh doanh, làm thế nào để quản lý nhóm, làm thế nào để tiến hành phân tích cạnh tranh, làm thế nào để thực hiện dự án&hellip;</p>

<p>Có thể chúng ta nên cố gắng tìm hiểu những vấn đề mà CEO hay VP gặp phải và cố gắng sử dụng thiết kế để giúp họ giải quyết vấn đề của họ? Có lẽ chúng ta nên cố gắng tìm ra những vấn đề làm họ thức dậy vào ban đêm và giúp họ giải quyết vấn đề đó &ndash; thay vì giải quyết vấn đề của chúng ta.</p>

<h1>Tương lai</h1>

<p>Tôi muốn nói rằng chúng ta không nên chuyển giao những trải nghiệm thiết kế nghèo nàn. Chúng ta phải tiếp tục phát triển và tập trung vào tay nghề của mình. Nếu chúng ta không làm vậy thì chúng ta sẽ bị thụt lùi. Nhưng cũng hãy bắt đầu hiểu doanh nghiệp chúng ta đang làm việc và chúng cần gì để phát triển. Nếu chúng ta có thể làm điều đó, chúng ta sẽ tiếp tục đạt được nhiều ảnh hưởng hơn và sẽ tiếp tục tạo ra những sản phẩm có sự ảnh hưởng lớn hơn &ndash; cho cả công ty của chúng ta và cho cả những người dùng sản phẩm.</p>

<p>Dịch từ: <a href="https://medium.com/@joshuantaylor/designers-shouldn-t-code-they-should-study-business-dc3e7e203d39#.cp5ipre7v">Desiger shouldn&rsquo;t code. They should study business</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nguyên Tắc Thiết Kế Giao Diện Người Dùng (Phần 2)]]></title>
    <link href="http://blog.teracy.com/2016/12/06/nguyen-tac-thiet-ke-giao-dien-nguoi-dung-phan-2/"/>
    <updated>2016-12-06T10:50:00+00:00</updated>
    <id>http://blog.teracy.com/2016/12/06/nguyen-tac-thiet-ke-giao-dien-nguoi-dung-phan-2</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2016/10/26/principles.jpg" title="Nguyên tắc thiết kế" ></p>

<p>Đây là phần tiếp theo của <a href="/2016/10/26/nguyen-tac-thiet-ke-giao-dien-nguoi-dung-phan-1/">Nguyên Tắc Thiết Kế Giao Diện Người Dùng (Phần 1)</a></p>

<h1>10. Vấn đề nhất quán</h1>

<p>Tiếp theo nguyên tắc trên, các yếu tố của màn hình không nên xuất hiện nhất quán với nhau, trừ khi chúng vận hành giống nhau. Những yếu tố có hành vi giống nhau thì nên trông giống nhau. Tuy nhiên điều này cũng quan trọng đối với thành phần khác nhau thì xuất hiện khác nhau. Khi nỗ lực để  làm cho nhất quán, các nhà thiết kế học việc thường làm mờ đi sự khác nhau quan trọng bằng cách sử dụng biện pháp trực quan giống nhau (thường là để sử dụng lại mã nguồn) trong khi  việc sử dụng các biện pháp trực quan khác nhau thì phù hợp hơn.</p>

<!-- more -->


<h1>11. Những phân cấp trực quan mạnh hoạt động tốt nhất</h1>

<p>Một hệ thống phân cấp trực quan mạnh được thực hiện khi có thứ tự xem rõ ràng các yếu tố trực quan trên màn hình. Đó là khi người sử dụng xem các mặt hàng giống nhau theo thứ tự giống nhau trong mỗi lần xem. Phân cấp trực quan yếu cung cấp ít manh mối về nơi để người dùng nên nhìn vào và cuối cùng là cảm giác lộn xộn và khó hiểu. Trong môi trường đầy biến động, rất khó để duy trì một hệ thống phân cấp trực quan mạnh bởi vì trọng lượng hình ảnh là tương đối: khi tất cả mọi thứ màu đậm thì sẽ không có gì là nổi bật nữa. Nếu một yếu tố trực quan nặng đơn lẻ được thêm vào một màn hình, người thiết kế có thể cần phải thiết lập lại các trọng lượng hình ảnh của tất cả các yếu tố để đạt được hệ thống phân cấp mạnh một lần nữa. Hầu hết mọi người không chú ý đến hệ thống phân cấp trực quan nhưng nó là một trong những cách dễ nhất để củng cố (hoặc làm suy yếu) một thiết kế.</p>

<h1>12. Sự tổ chức thông minh làm giảm tải trọng nhận thức (Cognitive load)</h1>

<p><em>“Cognitive load mô tả gánh nặng của con người về trí nhớ ngắn hạn khi phải làm các nhiệm vụ phức tạp.”</em></p>

<p>Như John Maeda đã nói trong cuốn sách Simplicity (Sự đơn giản) của ông, sự tổ chức các yếu tố màn hình một cách thông minh có thể làm cho những thứ số nhiều xuất hiện như là số ít. Điều này giúp mọi người hiểu giao diện của bạn dễ dàng hơn và nhanh hơn, bởi vì bạn đã mô tả các mối quan hệ vốn có của nội dung trong thiết kế của bạn. Nhóm tập hợp lại với nhau như là các yếu tố, thể hiện mối quan hệ tự nhiên qua vị trí và sự định hướng. Bằng việc tổ chức một cách thông minh, bạn sẽ làm cho nội dung ít tải trọng nhận thức (Cognitive load) hơn đối với người sử dụng&hellip; những người mà không phải suy nghĩ về việc các yếu tố có liên quan như thế nào bởi vì bạn đã làm điều đó cho họ. Đừng buộc người sử dụng phải tìm những điều này&hellip; mà hãy cho họ thấy bằng cách thiết kế những mối quan hệ đó trong màn hình của bạn.</p>

<h1>13. Đừng xác định mà hãy làm nổi bật với màu sắc</h1>

<p>Màu sắc của những vật thể thay đổi bởi vì ánh sáng thay đổi. Chúng ta sẽ thấy một cái cây được phác thảo vào ban ngày khác với lúc hoàng hôn. Như trong thế giới tự nhiên, nơi mà màu sắc là một thứ có rất nhiều sắc thái, màu sắc không nên xác định nhiều trong một giao diện. Nó có thể hỗ trợ, được sử dụng để làm nổi bật, được sử dụng để hướng dẫn sự chú ý, nhưng không nên  là sự khác biệt duy nhất của sự vật. Đối với trường hợp phải đọc lâu hoặc nhiều giờ sử dụng màn hình mở rộng, hãy sử dụng màu sắc nhẹ nhàng hoặc làm tối màu nền, giữ màu sắc tươi sáng hơn cho màu nhấn của bạn. Tất nhiên cũng cần có thời gian cho màu nền sôi động nữa, chỉ cần chắc chắn rằng nó phù hợp với khán giả của bạn.</p>

<h1>14. Sự tiết lộ dần dần</h1>

<p>Chỉ hiển thị những gì cần thiết trên mỗi màn hình. Nếu mọi người đang thực hiện một lựa chọn, hãy hiển thị đầy đủ thông tin để cho phép họ lựa chọn, sau đó đi vào chi tiết trên màn hình tiếp theo. Tránh việc giải thích quá mức hoặc hiển thị tất cả cùng một lúc. Khi có thể, hãy hoãn các quyết định lại ở màn hình tiếp theo bằng việc tiết lộ thông tin khi cần thiết. Điều này sẽ giữ cho những tương tác của bạn trở nên rõ ràng hơn.</p>

<h1>15. Trợ giúp tức thời</h1>

<p>Trong các giao diện lý tưởng, việc trợ giúp là không cần thiết vì giao diện có thể nắm bắt và sử dụng được. Bước dưới đây, thực tế, là một bước mà trong đó sự trợ giúp là trực tiếp và theo ngữ cảnh, chỉ có sẵn vào thời gian và địa điểm cần thiết, được giấu đi ở tất cả các thời điểm khác. Việc yêu cầu mọi người đến giúp đỡ và tìm câu trả lời cho câu hỏi của họ đặt ra cho họ nhiệm vụ phải biết những gì họ cần. Thay vì xây dựng ở nơi cần trợ giúp&hellip; chỉ cần đảm bảo rằng nó không còn liên quan đến những người đã biết làm thế nào để sử dụng giao diện của bạn.</p>

<h1>16. Một điểm rất quan trọng: trạng thái số không</h1>

<p>Trải nghiệm đầu tiên với một giao diện vô cùng quan trọng, nhưng các nhà thiết kế lại thường bỏ qua điều này. Để giúp người dùng của chúng ta tốt nhất trong việc đạt được tốc độ với thiết kế của chúng ta, thì thiết kế ở trạng thái số không là tốt nhất, trạng thái mà tại đó chưa có gì xảy ra. Trạng thái này không phải là một khung trống&hellip; Nó sẽ đưa ra những chỉ đạo và hướng dẫn để đạt được tốc độ. Phần lớn sự cọ sát của các tương tác là trong bối cảnh ban đầu&hellip; Một khi người ta hiểu các quy tắc mà họ có thì khả năng thành công sẽ cao hơn nhiều.</p>

<h1>17. Thiết kế lớn là vô hình</h1>

<p>Một tính chất kỳ lạ của thiết kế lớn là nó thường không được chú ý bởi những người sử dụng nó. Lý do cho điều này là nếu thiết kế thành công người sử dụng có thể tập trung vào những mục tiêu của riêng mình chứ không phải là giao diện&hellip; khi họ hoàn thành mục tiêu của họ, họ sẽ hài lòng và không cần phải suy nghĩ về tình hình. Là một nhà thiết kế, điều này có thể là khó khăn bởi vì chúng ta nhận được ít lời tán thưởng khi các thiết kế của chúng ta tốt. Nhưng các nhà thiết kế lớn thường hài lòng với thiết kế được sử dụng tốt&hellip; và biết rằng người sử dụng hài lòng thường im lặng.</p>

<h1>18. Xây dựng trên những lĩnh vực thiết kế khác</h1>

<p>Thiết kế đồ họa hình ảnh, kiểu chữ (typography), copywriting, kiến ​​trúc thông tin và sự hiển thị&hellip; tất cả những lĩnh vực này là một phần của thiết kế giao diện. Chúng có thể được đề cập đến hoặc được chuyên môn môn hoá. Không nên lún vào những cuộc nội chiến hoặc coi thường những lĩnh vực khác: hãy thu thập những điều hữu ích từ những lĩnh vực khác cho công việc của bạn và tiếp tục sử dụng chúng. Ghi nhớ cả những hiểu biết từ những lĩnh vực dường như không liên quan&hellip; những gì chúng ta có thể học được từ việc xuất bản, viết mã, đóng sách, trượt ván, chữa cháy, karate?</p>

<h1>19. Những giao diện tồn tại để được sử dụng</h1>

<p>Như trong hầu hết các lĩnh vực thiết kế, thiết kế giao diện thành công khi mọi người đang sử dụng những gì bạn đã thiết kế. Giống như một chiếc ghế xinh đẹp mà không thoải mái để ngồi vào thì thiết kế là thất bại khi mọi người không lựa chọn sử dụng nó. Do đó, thiết kế giao diện có thể được xem như là tạo ra một môi trường sử dụng giống như tạo ra một vật có giá trị sử dụng. Giao diện để thoả mãn cái tôi người thiết kế là chưa đủ: nó phải được sử dụng!</p>

<p>(HẾT!)</p>

<p>Bài dịch từ <a href="http://bokardo.com/principles-of-user-interface-design/">Principles of User Interface Design</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tư duy thiết kế: Cẩm nang cho sự đổi mới (Phần 1)]]></title>
    <link href="http://blog.teracy.com/2016/11/22/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-1/"/>
    <updated>2016-11-22T10:18:00+00:00</updated>
    <id>http://blog.teracy.com/2016/11/22/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-1</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2016/11/22/tu-duy-thiet-ke.jpeg" title="Tư duy thiết kế" ></p>

<p>Liệu có một công thức nào để tạo ra các sản phẩm sáng tạo hay không? Trải nghiệm hay là dịch vụ? Tôi
đang không nói đến việc cải tiến dần dần một cách thuần túy mà là một sự đổi mới mang tính đột phá.</p>

<p>Nếu bạn có nghi ngờ thì cũng là điều dễ hiểu, tôi cũng đã từng hoài nghi khi tôi bắt đầu nghiên cứu
của mình về khoa học đằng sau đổi mới cách đây nhiều năm. Sự thật về sự đổi mới là tất cả đều phụ
thuộc yếu tố con người. Cuối cùng, chúng ta là những người tạo ra những đổi mới cho mọi người. Là
một trong những giám đốc sản phẩm làm việc trên <a href="http://www.adobe.com/products/experience-design.html">Adobe Experience Design</a> (Adobe XD) ở San Francisco, tôi rất vui được chia sẻ với các bạn phương pháp mà
tôi rất yêu thích, sử dụng, <a href="http://designthinkingnow.com/#/about/english">giảng dạy</a>, và học
hỏi mỗi ngày tại nơi làm việc, và trong cuộc sống.</p>

<!-- more -->


<p>Khi bạn đọc bài viết này, tôi khuyến khích bạn áp dụng phương pháp &ldquo;tư duy cầu tiến&rdquo; (growth mindset)
và để tâm trí của bạn tiếp thu những quan điểm mới. Carol Dweck, tác giả của cuốn &ldquo;Tư duy: Tâm lý học
mới của sự thành công&rdquo; (Mindset: The New Psychology of Success), mô tả &ldquo;tư duy cầu tiến&rdquo; là nỗ lực
cộng với việc học bằng sự phát triển và thành công. Điều này có nghĩa là nếu bạn đặt nỗ lực đúng chỗ
và học từ những sai lầm của bạn, bạn sẽ thành công.</p>

<h1>Quá trình tư duy thiết kế</h1>

<p>Quá trình hay phương pháp này đã được phát triển bởi <a href="https://www.ideo.org/">IDEO</a> và được giảng
dạy tại: <a href="http://dschool.stanford.edu/">Viện Thiết kế tại Đại học Stanford</a>. Phương pháp liên quan
đến sự hợp tác lớn và lặp đi lặp lại thường xuyên. Phương pháp có năm giai đoạn rất rõ ràng: Thông
Cảm, Xác Định, Tưởng Tượng, Nguyên Mẫu và Thử Nghiệm.</p>

<p><img class="center" src="/images/2016/11/22/qua-trinh-tu-duy-thiet-ke.jpeg" title="Quá trình tư duy thiết kế" ></p>

<p>Mục tiêu cuối cùng của quá trình này là tạo ra một sản phẩm, dịch vụ, hoặc trải nghiệm mà người ta
muốn (sự mong muốn), có tiềm năng thực sự để trở thành hữu dụng (tính khả năng), và có thể dễ dàng
hoặc thuận tiện xây dựng về công nghệ (tính khả thi).</p>

<p>Điều quan trọng là hãy tập trung vào một giai đoạn tại một thời điểm và lặp lại nhanh.</p>

<p>Để mô tả từng giai đoạn của quá trình tư duy thiết kế, chúng ta hãy sử dụng Adobe XD làm ví dụ.
Như mô tả của <a href="https://twitter.com/vincent_hardy">Vincent Hardy, Giám đốc Kỹ thuật của Adobe</a> trong
bài viết của mình về xác định beta, đội Adobe XD của chúng tôi có một lịch trình phát hành rất tích
cực, trong đó cứ 2 tuần sẽ có một bản build trước khi phát hành, và hàng tháng sẽ có các bản phát
hành công khai. Chúng tôi duy trì một <a href="https://adobexd.uservoice.com/">trang web UserVoice</a> nơi mà người
sử dụng có thể sắp xếp các lỗi và đề xuất tính năng mới, trong đó cung cấp cho chúng tôi cơ hội để
học hỏi nhanh, xác nhận, ưu tiên, và thay đổi bất cứ khi nào cần thiết.</p>

<p>Chúng tôi có một đội ngũ có nhiều kỹ năng và chuyên môn sâu (T-shaped) bao gồm các nhà thiết kế,
các kỹ sư, quản lý lập trình, nhân viên marketing và các giám đốc sản phẩm giống như tôi.</p>

<p>Một người có nhiều kỹ năng và chuyên môn sâu &ldquo;T-shaped&rdquo; là một người rất giỏi ở một lĩnh vực nào đó,
nhưng cũng có thể đảm nhận các vai trò khác nhau trong nhóm, đòi hỏi người đó phải luôn luôn thích
tìm hiểu và đặc biệt có sự thấu hiểu.</p>

<p><strong>Tất cả mọi thứ trong thiết kế tư duy bắt đầu từ một thách thức thiết kế</strong></p>

<p>Thách thức thiết kế của chúng tôi trước khi Adobe XD được tạo ra là:</p>

<p><em>&ldquo;Photoshop và Illustrator không phải được thiết kế ban đầu cho những thách thức UX của hiện tại.&rdquo;</em></p>

<p>Điều thú vị trong quá trình tư duy  thiết kế của chúng tôi chính là, trước khi chúng tôi bắt đầu nghĩ
về những ý tưởng để &ldquo;giải quyết&rdquo; vấn đề này, chúng tôi ra ngoài và nói chuyện với mọi người.</p>

<h1>Giai đoạn một: Đồng cảm</h1>

<p>Đồng cảm là khả năng đặt mình vào vị trí của người khác để bắt đầu &ldquo;nhìn thấy&rdquo; những thứ thông qua đôi
mắt của người khác.</p>

<p>Có 3 cách để xây dựng sự đồng cảm: 1) các cuộc phỏng vấn, 2) quan sát và 3) trải nghiệm.</p>

<p><strong>1) Phỏng vấn</strong></p>

<p>Chúng tôi thường xuyên có các cuộc họp khách hàng, nơi chúng tôi khảo sát quy trình công việc hiện
tại, tìm hiểu suy nghĩ của mỗi nhà thiết kế về môi trường mà họ làm việc, các điểm chưa hài lòng, kỳ
vọng và các vấn đề khác. Các cuộc phỏng vấn của chúng tôi không chỉ giới hạn tại Hoa Kỳ mà chúng tôi
còn tiến hành phỏng vấn ở các bộ phận khác trên thế giới. Thật hấp dẫn khi chứng kiến cách mọi người
xem xét và giải quyết những thách thức khác nhau. Điều quan trọng là tham gia buổi phỏng vấn trong
vai trò trung lập. Ngay cả khi bạn nghĩ rằng bạn biết câu trả lời, hãy hỏi tại sao.</p>

<p><img class="center" src="/images/2016/11/22/phong-van-khach-hang.jpeg" title="Các nhà quản lý sản phẩm Adobe XD phỏng vấn khách hàng ở Châu Âu" ></p>

<p>Có một chương trình khung thú vị do Sakichi Toyoda phát triển đã được sử dụng tại Toyota trong suốt
thời kì phát triển các phương pháp sản xuất của mình. Phương pháp này chỉ ra rằng nếu bạn hỏi
&ldquo;Tại sao?&rdquo;  5 lần, bạn có thể tiếp cận được nguyên nhân của bất kỳ vấn đề. Điều đó giống như bạn là
một đứa trẻ tò mò luôn háo hức muốn biết tại sao mọi thứ lại như vậy.</p>

<p>Chiến lược tốt để thực hiện các cuộc phỏng vấn là thiết lập mối quan hệ, kết nối mạnh mẽ với người
được phỏng vấn, thay vì tác động đến câu trả lời. Đừng bao giờ hỏi, <em>&ldquo;Điều này là tốt, phải không?&rdquo;</em>
Thay vào đó, hãy hỏi <em>&ldquo;Bạn nghĩ gì về điều này?&rdquo;</em> Thậm chí hãy hỏi câu hay hơn, <em>&ldquo;Hãy kể cho tôi một
câu chuyện mà bạn đã gặp trở ngại khi làm việc với X.&rdquo;</em> Tìm kiếm qua câu chuyện là một kỹ thuật rất
mạnh mẽ mà có thể cung cấp cho bạn rất nhiều thông tin có giá trị. Ví dụ, nếu bạn cần phải hiểu những
gì đang thịnh hành với thanh thiếu niên, thử hỏi họ những gì họ sẽ mua với $150.</p>

<p>Kể chuyện và tìm kiếm những câu chuyện trong cuộc phỏng vấn là một cách tốt để thiết lập mối quan hệ
và kết nối. Mới đây <a href="https://itunes.apple.com/us/podcast/human-tech/id1097159316?mt=2">Human Tech</a>
đã trình bày một nghiên cứu đo hoạt động não trong các câu chuyện. Nghiên cứu cho thấy rằng trong
thời gian đỉnh cao của một câu chuyện, hoạt động não của người nghe cũng tương tự và liên hệ chặt
chẽ với hoạt động não của người kể chuyện &ndash; tạo ra sự kết nối thực sự giữa hai người.</p>

<p><img class="center" src="/images/2016/11/22/quy-trinh-phong-van.jpeg" title="Quy trình phỏng vấn" ></p>

<p>Khi bạn hỏi một câu hỏi, hãy dành thời gian để người dùng của bạn được suy nghĩ. Im lặng cũng có thể
chấp nhận! Thậm chí ngay cả khi im lặng có vẻ kì cục, nhưng tuyệt đối không được gián đoạn hoặc gây ảnh
hưởng đến người được phỏng vấn.</p>

<p>Nhìn chung, quá trình thiết kế tư duy thiên vể chất lượng hơn số lượng. Điều này có nghĩa là có thể
ít người hơn trong cuộc phỏng vấn của bạn, nhưng hãy lựa chọn những người mà bạn nghĩ rằng có thể
đại diện cho người dùng khác nhau của sản phẩm hoặc dịch vụ của bạn. Chúng tôi đang tìm kiếm những
hiểu biết sâu sắc, không phải đơn thuần chỉ là sự thật.</p>

<p>Tôi thấy cái nhìn sâu sắc cũng chính là một cái nhìn hiểu biết sâu sắc về một cái gì đó. Điều đó
giống như là các nơ-ron thần kinh của bạn đang chờ bạn xác định và kích hoạt các phần thông tin khi
kết nối với nhau, làm cho có ý nghĩa. Đó là khoảnh khắc bạn đột nhiên &ldquo;khám phá ra&rdquo;.</p>

<p>Khái niệm của người sử dụng đặc biệt cũng có thể đem lại lợi ích nghiên cứu cho bạn. Ví dụ, nếu bạn
cần phải phỏng vấn người sử dụng giỏ mua hàng, cũng phỏng vấn một người đàn ông vô gia cư, người đó
sử dụng xe như một phương tiện di chuyển xung quanh hoặc thu thập vật liệu tái chế &ndash; thì đó là một
người sử dụng đặc biệt. Người dùng đó sẽ cung cấp cho bạn những hiểu biết quan trọng.</p>

<p><img class="center" src="/images/2016/11/22/phong-van-nguoi-dung-dac-biet.jpeg" title="Phỏng vấn người dùng đặc biệt" ></p>

<p><strong>2) Quan sát</strong></p>

<p>Hãy giao nhiệm vụ cho người dùng của bạn và chỉ cần ngồi quan sát. Nếu bạn hỏi, &ldquo;Anh có gặp vấn đề
gì khi mua những thứ từ Amazon?&rdquo; có thể bạn sẽ nhận được câu trả lời, &ldquo;Không vấn đề gì cả, rất dễ
dàng để mua những thứ đó.&rdquo; Nhưng nếu bạn quan sát một người sử dụng nó từ phía sau họ, bạn sẽ thấy
các vấn đề khi họ mua hàng.</p>

<p>Gần đây, tại Adobe, chúng tôi tổ chức hội thảo trải nghiệm (experience-athon) nội bộ lần đầu tiên, ở đây chúng tôi
đã giao cho người thiết kế Adobe một nhiệm vụ và chỉ đứng nhìn. Có sự tham dự của các kỹ sư sản phẩm
và những người thiết kế trong nhóm XD. Rất nhanh chóng, chúng tôi đã xác định được nhiều vấn đề cần
phải giải quyết tốt hơn, và chúng tôi đã làm việc để giải quyết những vấn đề này.</p>

<p><img class="center" src="/images/2016/11/22/kinh-nghiem-Adobe-xd.jpeg" title="hội thảo trải nghiệm của Adobe XD ở San Francisco" ></p>

<p>Chúng tôi tin rằng điều quan trọng là các thành viên ở các lĩnh vực khác nhau trong đội Adobe XD
(thiết kế, kỹ thuật và giám đốc sản phẩm) được tiếp xúc với thông tin phản hồi từ khách hàng trực
tuyến của chúng tôi từ <a href="https://adobexd.uservoice.com/">Uservoice</a> và
<a href="https://twitter.com/adobexd">Twitter)</a>, tại các hội nghị, các cuộc họp mặt, và các cuộc tiếp xúc
khách hàng để tất cả các khía cạnh của sản phẩm đều đáp ứng được yêu cầu của khách hàng.</p>

<p><img class="center" src="/images/2016/11/22/doi-Adobe-voi-khach-hang.jpeg" title="Đội Adobe XD với khách hàng tại Adobe MAX 2015" ></p>

<p><strong>3) Trải nghiệm</strong></p>

<p>Hãy sử dụng những gì khách hàng của bạn sử dụng. Đó có thể là sản phẩm của bạn, hoặc có thể là của
một đối thủ cạnh tranh. Điều này sẽ giúp bạn trực tiếp trải nghiệm những điều khó chịu hay cảm giác
vui sướng khi sử dụng sản phẩm.</p>

<p>Tôi kiểm tra tất cả các thiết kế và các công cụ tạo mẫu mà tôi có thể. Không chỉ để xây dựng mô hình
tinh thần mới, mà còn để xác định, giống như một nhà nhân chủng học, rằng liệu một người sử dụng gợi ý
một tính năng nào đó đó có bị ảnh hưởng trực tiếp bởi một công cụ hay dịch vụ hiện có. Áp dụng tư
duy mới và tránh mô hình tinh thần hiện có có lẽ một trong những điều khó thực hiện nhất.</p>

<p>Thực tế thú vị: nhà thiết kế và giám đốc sản phẩm của Adobe sử dụng Adobe XD để thiết kế Adobe XD
&ndash; đó là một kiểu ứng dụng! Điều này cũng cho chúng ta cơ hội cảm nhận những gì người dùng của chúng
ta cảm nhận.</p>

<p>Trong giai đoạn Đồng cảm, bạn có thể sử dụng một số công cụ mạnh mẽ, chẳng hạn như công cụ Empathy Maps,
với công cụ này bạn có thể liệt kê những gì một người nói + làm (rõ ràng) và suy nghĩ + cảm giác (ẩn).</p>

<p><img class="center" src="/images/2016/11/22/giai-doan-dong-cam.jpeg" title="Giai đoạn đồng cảm" ></p>

<p>Sau khi giải nén dữ liệu từ các cuộc phỏng vấn, quan sát, và / hoặc trải nghiệm, bạn có thể tách các
nhu cầu rõ ràng (nói và làm) từ những nhu cầu ẩn (suy nghĩ và cảm nhận). Sau đó là nơi bạn có thể tìm
thấy những hiểu biết sâu sắc.</p>

<h1>Giai đoạn hai: Xác định</h1>

<p>Sau khi đã xây dựng sự đồng cảm, đến lúc cần xem xét lại thách thức thiết kế ban đầu và tái xác định
các vấn đề.</p>

<p>Để xác định, hoặc tái xác định vấn đề hoặc thách thức, một quan điểm (PoV) công thức có thể tính như
sau: PoV = tính cách + nhu cầu + cái nhìn sâu sắc.</p>

<p>Ví dụ:</p>

<p><em>&ldquo;Sam, một nhà thiết kế cao cấp yêu thích việc làm hài lòng người sử dụng với các thiết kế giải quyết
các vấn đề thực tế và nhìn đẹp, cần thiết kế, tạo mẫu và xác nhận nhanh hơn, bởi vì anh ta cảm thấy
đang lãng phí quá nhiều thời gian vào các bước lặp đi lặp lại. Toàn bộ chuyển từ công cụ đến công cụ
đều không thành công!&rdquo;</em>"</p>

<p>Nhu cầu là những cảm xúc và chiều sâu. Cái nhìn sâu sắc là những điều bất ngờ, kết quả phỏng vấn,
quan sát, mâu thuẫn đều có thể được sử dụng trong các giải pháp.</p>

<p>Khi bạn sử dụng phương pháp đặt con người làm trung tâm của việc tìm kiếm cho một nhu cầu thực sự,
bạn có một lợi thế cạnh tranh.</p>

<p>Tôi thích cụm từ, &ldquo;Tư Duy Thiết Kế là việc tìm hiểu nhu cầu nhiều hơn việc giải quyết vấn đề.&rdquo; Vì vậy,
cần có một công cụ tìm hiểu nhu cầu!</p>

<p>Sau khi chúng tôi đã trải qua quá trình đồng cảm với Adobe XD, chúng tôi đã xác định được một vài
điều quan trọng:</p>

<ul>
<li><p>Khi Photoshop và Illustrator ban đầu được tạo ra, các nhà thiết kế đã không phải đối mặt với những
thách thức UX giống như những thách thức mà họ phải đối mặt ngày hôm nay.</p></li>
<li><p>Có những công cụ khác nhau giải quyết các phần khác nhau của vấn đề. Có những công cụ thiết kế cho
độ chính xác thấp (kiến trúc thông tin và wireframes), các công cụ thiết kế cho độ chính xác cao, và
các công cụ chuyên biệt cho tạo mẫu, vv. Người dùng phải chuyển từ công cụ này sang công cụ khác để
thiết kế, tạo mẫu, và xác nhận.</p></li>
<li><p>Có rất nhiều sự bất đồng trong quá trình đồng cảm, đặc biệt là sau khi thử nghiệm một nguyên mẫu,
khi sự thay đổi là cần thiết. Và sự xung đột giới hạn sự sáng tạo. Chúng tôi thấy rằng các nhà thiết
kế đi nhanh hơn và thích khám phá các lựa chọn khác nhau, lặp lại và tiến nhanh.</p></li>
<li><p>Hầu hết các công cụ được sử dụng bởi các nhà thiết kế phải chịu ảnh hưởng từ việc mất kiểm soát
phạm vi dự án, xây dựng các tính năng phía trên các tính năng khác, không duy trì một cái nhìn toàn
diện, có lỗi và đôi khi chậm.</p></li>
</ul>


<p>Vì vậy chúng ta rất dễ dàng có thể xác định một số trụ cột XD:</p>

<ul>
<li><p>Thiết kế với tốc độ của tư tưởng</p></li>
<li><p>Hiệu suất và chất lượng</p></li>
<li><p>Quy trình công việc có ý nghĩa</p></li>
<li><p>Giao diện theo ngữ cảnh</p></li>
</ul>


<p>Với ý tưởng đó, chúng tôi đã bắt đầu với những điều sẽ trở thành Thiết kế Trải nghiệm Adobe, hoặc
như chúng tôi chỉ đơn giản gọi nó là Adobe XD.</p>

<p>(<a href="/2017/01/04/tu-duy-thiet-ke-cam-nang-cho-su-doi-moi-phan-2/">PHẦN 2</a>)</p>

<p>Dịch từ: <a href="https://medium.com/@demianborba/design-thinking-a-manual-for-innovation-e0576b34eff6#.9ae4fd5dk">Design thinking: A manual for innovation</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URIs tốt sẽ không bao giờ thay đổi]]></title>
    <link href="http://blog.teracy.com/2016/11/11/URIs-tot-se-khong-bao-gio-thay-doi/"/>
    <updated>2016-11-11T11:33:00+00:00</updated>
    <id>http://blog.teracy.com/2016/11/11/URIs-tot-se-khong-bao-gio-thay-doi</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2016/11/11/broken.jpg" title="Việc thay đổi cấu trúc URI thường đem lại trải nghiệm không tốt cho người dùng." >
Theo bạn URIs (đường dẫn) thế nào là tốt? Những URIs nào sẽ bị thay đổi theo thời gian? Đường dẫn không tự thay đổi chỉ có con người khiến nó thay đổi.
Theo lý thuyết thì không có lý do gì để mọi người thay đổi URI (hoặc là ngừng duy trì các tài liệu), nhưng thực tế thì lại có muôn vàn lý do mà dưới đây là một vài ví dụ.</p>

<!-- more -->


<ul>
<li><p><strong>Chúng tôi sắp xếp lại nội dung trang web để đem lại trải nghiệm tốt hơn.</strong></p>

<p>Có phải như bạn cảm thấy không thể duy trì URIs cũ như hiện tại? Nếu vậy, bạn đã chọn quy tắc đặt URI thật tệ. Hãy suy nghĩ về những URI mới để bạn có thể giữ chúng tồn tại sau khi thiết kế lại lần tới nhé.</p></li>
<li><p><strong>Chúng tôi có quá nhiều tài liệu đến mức không thể nào kiểm tra được cái nào đã cũ, cái nào là bí mật và hợp lệ và vì vậy chúng tôi nghĩ tốt hơn hết là thay đổi toàn bộ URIs để cấp phát lại từ đầu.</strong></p>

<p>Hmm, có lẽ tôi có thể đồng cảm với việc này &ndash; W3C đã từng trải qua thời kỳ như vậy khi mà chúng tôi đã phải sàng lọc cẩn thận quyền truy cập của từng tại liệu trước khi cho phép nó được truy cập rộng rãi. Cách giải quyết là mọi tài liệu cần được hoạch định trước &ndash; hãy quy ước rõ và lưu trữ các thông tin của tài liệu đại loại như tài liệu được phân phối như thế nào, ngày tạo tài liệu và khi nào tài liệu đấy hết hiệu lực.</p></li>
<li><p><strong>Uhm, chúng tôi thấy rằng chúng tôi phải chuyển các file đến thư mục khác.</strong></p>

<p>Đây là một trong những lý do vụng về nhất. Có vẻ có nhiều người không biết rằng các máy chủ Web đều cho phép bạn tùy chỉnh rất linh hoạt mối quan hệ giữa đường dẫn và file thực tế được sử dụng trên hệ thống. Hãy nghĩ rằng URI là một tập các tên trừu tượng, được sắp xếp một cách gọn gàng sau đó hãy gán nó vào những file/ứng dụng cụ thể trong hệ thống của bạn và sau đó hãy cấu hình máy chủ web một tẹo để thể hiện việc gán ghép đấy.
John không còn duy trì tài liệu này nữa, giờ thì chỉ Jane làm thôi.
Hãy nghĩ lại đi, tại sao tên của John lại nằm trên URI? Nó nằm trong thư mục của John nên phải có John trên URI à?</p></li>
<li><p><strong>Trước đây tôi dùng CGI script còn giờ thì chúng tôi chuyển sang dùng một chương trình khác.</strong></p>

<p>Việc bạn cứ phải chạy theo cấu trúc URI của một kiểu chương trình/Framework này và rồi sau đó thay đổi nó chỉ vì bạn sử dụng một chương trình khác nghe thật là điên rồ. Ngoài ra việc bạn không cấu hình lại được URI cho phần mềm đấy còn để lộ thông tin về cách thức hoạt động của máy chủ của bạn cho người khác thấy (kiểu như bạn dùng máy chủ kiểu gì, phần mềm nào) và điều đó cũng hơi nguy hiểm đấy. Tóm lại là rất bất hợp lý nếu bạn thay đổi cơ chế hoạt động và tất cả các đường dẫn đều phải thay đổi dù nội dung của bạn không thay đổi gì.</p>

<p>Lấy ví dụ cho điều này là trang thông tin khoa học quốc gia (Hoa kỳ).</p>

<p>  <a href="http://www.nsf.gov/cgi-bin/pubsys/browser/odbrowse.pl">http://www.nsf.gov/cgi-bin/pubsys/browser/odbrowse.pl</a></p>

<p>Đây là trang tìm kiếm tài liệu của trang thông tin khoa học, rõ ràng đây không có vẻ là URI được thiết kế cho việc tồn tại trong&hellip; vài năm! &ldquo;cgi&rdquo;, &ldquo;oldbrowse&rdquo; và &ldquo;.pl&rdquo; đã để lộ cách thức làm việc của cơ chế bên dưới. Tuy nhiên URI của kết quả tìm kiếm của trang thông tin khoa học quốc gia thì ổn hơn rất nhiều.</p>

<p>  <a href="http://www.nsf.gov/pubs/1998/nsf9814/nsf9814.htm">http://www.nsf.gov/pubs/1998/nsf9814/nsf9814.htm</a></p>

<p>Với phần đầu là &ldquo;pubs/1998&rdquo; cho ta gợi ý để biết rằng đó là tài liệu cũ từ năm 1998, cho dù thêm 100 năm nữa vào năm 2098 tài liệu thì có thể khác nhưng URI dạng này vẫn sẽ hợp lệ và NSF cho dù vẫn lưu trữ tài liệu cũ thì vẫn sẽ không phải lúng túng về URI này.</p></li>
<li><p><strong>Tôi không nghĩ rằng URLs sẽ phải cố định &ndash; chỉ có URNs mới cần cố định.</strong></p>

<p>Đây có lẽ là một trong những tác dụng phụ tồi tệ nhất của các thảo luận URN. Một số người dường như nghĩ rằng các không gian tên có thể được kéo dài ra và rằng chúng có thể làm cho các link lỏng lẻo như họ muốn, và khi đó &ldquo;URN sẽ xử lý được hết những điều này&rdquo;. Nếu bạn là một trong những người này thì tôi đã làm bạn vỡ mộng mất rồi.</p>

<p>Hầu hết các chương trình URN mà tôi thấy nó giống như ID tác giả theo sau hoặc là ngày hoặc là một chuỗi ký tự bất kỳ mà bạn chọn, hoặc đơn giản chỉ là một chuỗi ký tự. Cái này trông giống như một HTTP URI. Nói cách khác, nếu bạn nghĩ tổ chức của bạn sẽ có thể tạo ra các URN tồn tại mãi mãi, rồi chứng minh điều đó bằng cách tạo ra ngay các URN và sử dụng chúng thay cho các HTTP URI. Sẽ Không có vấn đề gì về HTTP làm cho URI của bạn không ổn định cả, vì đó là tổ chức của bạn mà. Hãy thực hiện một cơ sở dữ liệu để ánh xạ được URN tài liệu vào trong tên file hiện tại, và cho phép máy chủ trang web của bạn sử dụng nó để lấy được các tập tin.
Nếu bạn đã hiểu được điều này, và trừ khi bạn có tiền, thời gian và các địa chỉ liên hệ để thực hiện thiết kế phần mềm, thì khi đó bạn có thể đưa ra một số lý dó sau:</p></li>
<li><p><strong>Chúng tôi muốn điều đó nhưng chúng tôi không có công cụ.</strong></p>

<p>Tôi có thể hiểu và hoàn toàn đồng ý về lý do này. Bạn cần phải làm gì để máy chủ web luôn sử dụng một URI cố định và trả về đúng dữ liệu cho dù bạn có sử dụng hệ thống nào, lưu trữ ra sao tại bất kỳ thời điểm nào. Liệu bạn có cho rằng bạn có thể lưu URI ngay trong chính bản thân tài liệu như là một cách để đối chiếu và liên tục cập nhập cơ sở dữ liệu để khiến URI luôn đúng. Bạn sẽ muốn lưu trữ mối quan hệ giữa các phiên bản khác nhau và bản dịch của tài liệu đó. Ngoài ra bạn còn cần lữu trữ thông tin checksum để đảm bảo tính toàn vẹn của dữ liệu theo thời gian. Và như bạn thấy đấy, máy chủ web về cơ bản không phải là công cụ có thể cung cấp những điều đấy cho bạn. Khi bạn tạo một tài liệu mới, trình soạn thảo sẽ hỏi bạn URI thay vì nói cho bạn biết URI như thế nào.</p>

<p>Bạn cũng cẩn có thể thay đổi được một vài thứ như ai là chủ sở hữu của tài liệu, quyền truy câp ra sao&hellip; mà không phải thay đổi gì về URI.</p>

<p>Tại W3C chúng tôi sử dụng Jigedit (máy chủ Jigsaw dùng để chỉnh sửa tài liệu) để hỗ trợ việc theo dõi các phiên bản của tài liệu và chúng tôi đang thử nghiệm với các công cụ để tạo tài liệu. Nếu bạn là người viết công cụ, máy chủ thì hãy nhớ nhé.</p></li>
</ul>


<h1>Tại sao tôi phải quan tâm</h1>

<p>  Khi bạn thay đổi URI trang web của bạn, bạn sẽ không bao giờ biết được ai vẫn đang giữ URI cũ và khi một ai đó click vào URI nhưng nó không tồn tại thì thường họ sẽ mất niềm tin vào trang web đấy. Thiệt hại sẽ là hiển nhiên khi để người sử dụng phàn nàn về những đường link như thế.</p>

<h1>Vậy tôi phải bằt đầu từ đâu? Thiết kế URIs?</h1>

<p>  Nếu bạn muốn URI của bạn sẽ vẫn đúng đắn sau 2 năm hay 200 năm tới, thì hãy suy nghĩ về nó thật kỹ. URIs thay đổi khi một vài thông tin trong bản thân nó thay đổi. Thiết kế URI như thế nào thật sự là rất quan trọng. Và việc đầu tiên là hay loại bỏ bớt các thông tin không cần thiết ra khỏi URI.</p>

<p>  Ngày khởi tạo của tài liệu là một tham số sẽ không bao giờ thay đổi và nó rất hữu ích cho việc phân loại truy nhập từ hệ thống mới hay hệ thống cũ. Về cơ bản đấy là khởi đầu tốt cho một thiết kế URI ổn định.</p>

<p>  Có một ngoại lệ ở đây chính là URI dùng cho &ldquo;mới nhất&rdquo; hay trang &ldquo;nhất&rdquo;, ví dụ như URI ở dưới đây:</p>

<p>  <a href="http://www.pathfinder.com/money/moneydaily/latest/">http://www.pathfinder.com/money/moneydaily/latest/</a></p>

<ul>
<li><p><strong>Cái gì nên bỏ ra khỏi URI</strong></p>

<p>Hmm, ngoại trừ ngày tháng thì những phần khác chỉ tổ khiến mọi thứ rắc rối hơn thôi. Ví dụ:</p>

<ul>
<li><strong>Sử dụng tên tác giả</strong> &ndash; tác giả có thể thay đổi theo từng phiên bản của tài liệu, chỉ cần tác giả thay đổi thì URI của tài liệu xem như là đã không đúng nữa.</li>
<li><strong>Dùng tiêu đề của tài liệu</strong> &ndash; Ban đầu thì có vẻ tốt nhưng dần dần nó sẽ bị thay đổi rất nhanh khi tài liệu được cập nhật.</li>
<li><strong>Trạng thái của tài liệu</strong> &ndash; trạng thái của tài liệu không nên được thiết lập trong URI, URI của tài liệu mới nhất cần được cố định bất chấp tài liệu có trạng thái như thế nào đi nữa.</li>
<li><strong>Thông tin truy nhập</strong> &ndash; Tại W3C, chúng tôi chia quyền truy cập trang web thành 3 mục chính, nội dung dành cho chúng tôi, nội dung dành cho các thành viên và những nội dung công cộng. Ban đầu sử dụng URI riêng cho từng quyền truy nhập có vẻ ổn nhưng khi chúng tôi chuyển tài liệu từ quyền truy nhập này sang truy nhập khác thì link cũ sẽ không còn tồn tại và gây nên lỗi.</li>
<li><strong>Đuôi của file truy nhập</strong> &ndash; Đây là lỗi thường gặp &ldquo;.cgi&rdquo; &ldquo;.html&rdquo; là những thứ sẽ thay đổi theo thời gian. Bạn có chắc là bạn sẽ vẫn dùng html hay cgi hay php trong 20 năm tới? Thay vì sử dụng tên file và đuôi của nó trực tiếp thì bạn có thể sử dụng các biện pháp như: Sử dụng database để lưu trữ file, dùng mod rewrite để thay đổi cấu trúc URL tự động, sử dụng mod_spelling của Apache để tự động điền đuôi file, sửa lỗi chính tả&hellip;</li>
<li><strong>Đường dẫn chỉ ổ đĩa</strong> &ndash; !!? à vâng, nhưng tôi đã từng thấy rồi đấy thưa các bạn.</li>
</ul>


<p>Một URI đơn giản và tốt có thể ở dạng như sau:</p>

<p><a href="http://www.w3.org/1998/12/01/chairs">http://www.w3.org/1998/12/01/chairs</a></p></li>
<li><p><strong>Phân loại tài liệu theo từng đề mục:</strong></p>

<p>Đây là một con dao 2 lưỡi mà đôi khi rất khó để tránh khỏi. Thường thì việc sử dụng đề mục trong URI khi bạn phân loại tài liệu dựa vào đặc tính tài liệu mà bạn đang làm việc. Các đặc tính sẽ dần thay đổi theo thời gian, ở W3C chúng tôi đang muốn đổi &ldquo;MarkUp&rdquo; thành &ldquo;Markup&rdquo; và rồi chúng tôi lại đổi thành &ldquo;HTML&rdquo;, bạn thấy đấy, các khái niệm sẽ dần thay đổi theo thời gian. Ví dụ như liệu sau này chúng ta có còn sử dụng &ldquo;Stylesheet&rdquo;, liệu có còn khái niệm &ldquo;Lịch sử truy nhập&rdquo; trong trình duyệt nữa không!?</p>

<p>Vận hành và quản lý trang web của một tổ chức là rất khó, mà thật ra tổ chức cái gì cũng vậy. Giải pháp trung hạn của bạn có thể sẽ trở thành trở ngại lớn trong dài hạn.</p>

<p>Thêm vấn đề nữa của việc phân loại này là mỗi người sẽ có cách phân loại riêng của mình, sự liên kết giữa các khái niệm là không cố định theo từng cá nhân và nó sẽ tiềm ẩn nguy cơ rất lớn khi bạn phân loại theo mô hình cây như vậy. Tóm lại, nếu bạn phân loại theo chủ đề trong URI nghĩa là bạn đang sử dụng một kiểu phân loại như vậy và việc phân loại này sẽ bị thay đổi trong tương lai và điều đó sẽ khiến URI bị hỏng.</p></li>
<li><p><strong>Đừng quên cả việc thiết kế tên miền nữa nhé</strong></p>

<p>Những lưu ý về URI ở trên không chỉ giới hạn trong phần địa chỉ mà còn trong cả tên miền. Nếu bạn có máy chủ riêng cho những thứ của bạn, hãy nhớ việc phân chia sử dụng subdomain sẽ tiềm ẩn nguy cơ khiến nhiều URI không còn tồn tại trong tương lai. Nhiều quản trị hệ thống cảm thấy thoải mái hơn khi phân chia mọi thứ theo domain con như kiểu &ldquo;cgi.pathfinder.com&rdquo;, &ldquo;lists.w3.org&rdquo; nhưng hãy cẩn trọng và suy nghĩ thật kỹ khi sử dụng nhiều hơn một tên miền cho trang web của bạn. Vận dụng khéo léo việc tạo ra các trang chuyển hướng sẽ giúp bạn quản lý tốt hơn.</p>

<h1>Kết luận</h1>

<p>Thiết kế và sử dụng URIs nhất quán trong 2, 20 hay thậm chí 200 năm chắc chắn là không đơn giản. Tuy nhiên vì các đồng chí quản trị cứ hay đưa ra những quyết định khiến cho họ lâm vào rắc rối trong tương lai. Thường thì do họ sử dụng những công cụ có sẵn và công cụ đấy lại có tầm nhìn quá ngắn hạn và bản thân họ cũng không thấy được những vấn đề lớn trong tương lai khi các URI của họ bị thay đổi. Thông điệp ở đây là, hay cố gắng thiết kế URI làm sao cho dù mọi thứ thay đổi (công nghệ, hệ thống, con người, các tham số, thuộc tính) thì URI của bạn vẫn luôn cố định và tất nhiên là truy cập được :).</p></li>
</ul>


<p> Lược dịch từ: <a href="https://www.w3.org/Provider/Style/URI.html">Cool URIs don&rsquo;t change</a></p>
]]></content>
  </entry>
  
</feed>
